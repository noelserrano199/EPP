-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Match by Invoice, date and price ( bad CPT code )
-**** Insert record with corrected CPT, TX_ID, CP_Ind
-*-----------------------------------------------------------------------------
SQL
-*INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ+1           AS SVC_EPP_GEN_SEQ
     ,':'                         AS SVC_COMP_SEPERATOR
     ,'HC'                        AS SVC_PROC1_SVC_ID_QLFR
     ,CASE WHEN LENGTH(PROC_OR_REV_CODE) < 5
                THEN UB_CPT_CODE
           ELSE PROC_OR_REV_CODE
      END                         AS SVC_PROC1_CD
     ,SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT
     ,' '                         AS SVC_PROC2_SVC_ID_QLFR
     ,' '                         AS SVC_PROC2_CD
     ,' '                         AS SVC_PROC2_MODF1
     ,' '                         AS SVC_PROC2_MODF2
     ,' '                         AS SVC_PROC2_MODF3
     ,' '                         AS SVC_PROC2_MODF4
     ,SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT
     ,TO_NUMBER(TRANSACTION_LIST) AS SVC_CLARITY_TX_ID
     ,'FXH'                       AS SVC_TX_ID_MATCH_TYPE
     ,SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND
     ,' '                         AS SVC_RVSD_INVC_NO
     ,SVC_CURRENT_BALANCE
     ,SVC_INS_AMOUNT_PAID
     ,SVC_INS_AMOUNT_ADJ
     ,SVC_CRG_IS_VOID_YN
     ,SVC_PRIOR_DENIAL_YN
     ,SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO
     ,'FXH'                          AS SVC_INCL_RSN_CD
     ,'   '                          AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_CLM_STATUS_CD       <> '22'
  AND CLP_EXCL_RSN_CD          = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_PROC2_CD)      IS NULL
  AND RTRIM(SVC_CLARITY_TX_ID) = '0'
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    SVC_DTM_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      INV_CLM_LN_ADDL
ON    INVOICE_NUM             = RTRIM(CLP_CLM_SUBMTR_ID)
  AND FROM_SVC_DATE           = TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
  AND CHARGE_AMOUNT           = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
  AND ( PROC_OR_REV_CODE     <> RTRIM(SVC_PROC1_CD)
    AND UB_CPT_CODE          <> RTRIM(SVC_PROC1_CD))
  AND INSTR(TRANSACTION_LIST,',') = 0
  AND NOT EXISTS
    ( SELECT 1
      FROM   &CLP.EVAL&CLP_TBL.EVAL C2
            ,&SVC.EVAL&SVC_TBL.EVAL S2
            ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
      WHERE RTRIM(C2.CLP_CLM_SUBMTR_ID) = INVOICE_NUM
        AND C2.CLP_EXCL_RSN_CD          = '   '
        AND S2.SVC_ISA_FILE_ID          = C2.CLP_ISA_FILE_ID
        AND S2.SVC_GS_GRP_SEQ_NO        = C2.CLP_GS_GRP_SEQ_NO
        AND S2.SVC_ST_SEQ_NO            = C2.CLP_ST_SEQ_NO
        AND S2.SVC_LX_SEQ_NO            = C2.CLP_LX_SEQ_NO
        AND S2.SVC_CLP_CLM_SEQ_NO       = C2.CLP_CLM_SEQ_NO
        AND ( RTRIM(S2.SVC_PROC1_CD)    = PROC_OR_REV_CODE
           OR RTRIM(S2.SVC_PROC1_CD)    = UB_CPT_CODE )
        AND TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                        = CHARGE_AMOUNT
        AND D2.SVC_DTM_ISA_FILE_ID      = S2.SVC_ISA_FILE_ID
        AND D2.SVC_DTM_GS_GRP_SEQ_NO    = S2.SVC_GS_GRP_SEQ_NO
        AND D2.SVC_DTM_ST_SEQ_NO        = S2.SVC_ST_SEQ_NO
        AND D2.SVC_DTM_LX_SEQ_NO        = S2.SVC_LX_SEQ_NO
        AND D2.SVC_DTM_CLP_CLM_SEQ_NO   = S2.SVC_CLP_CLM_SEQ_NO
        AND D2.SVC_DTM_SVC_SEQ_NO       = S2.SVC_SEQ_NO
        AND D2.SVC_DTM_DTTM_QLFR        IN( '472','150' )
        AND D2.SVC_DTM_EXCL_RSN_CD      = '   '
        AND TO_DATE(D2.SVC_DTM_DATE, 'yyyymmdd')
                                        = TO_DATE(D1.SVC_DTM_DATE, 'yyyymmdd'))
WHERE ST_EXCL_RSN_CD            = '   '
  AND NOT EXISTS
    ( SELECT 1
      FROM   INV_CLM_LN_ADDL
      WHERE  INVOICE_NUM        = RTRIM(CLP_CLM_SUBMTR_ID)
        AND ( PROC_OR_REV_CODE  = COALESCE(RTRIM(SVC_PROC1_CD),'XXXXX')
           OR UB_CPT_CODE       = COALESCE(RTRIM(SVC_PROC1_CD),'XXXXX'))
        AND  FROM_SVC_DATE      = TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
        AND  CHARGE_AMOUNT      = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
ORDER BY 1,2,3,4,5,6
 
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT
      B.SVC_ISA_FILE_ID
     ,B.SVC_GS_GRP_SEQ_NO
     ,B.SVC_ST_SEQ_NO
     ,B.SVC_LX_SEQ_NO
     ,B.SVC_CLP_CLM_SEQ_NO
     ,B.SVC_SEQ_NO
	 ,B.SVC_EPP_GEN_SEQ
FROM  &SVC.EVAL&SVC_TBL.EVAL A
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL B
ON    B.SVC_ISA_FILE_ID       = A.SVC_ISA_FILE_ID
  AND B.SVC_GS_GRP_SEQ_NO     = A.SVC_GS_GRP_SEQ_NO
  AND B.SVC_ST_SEQ_NO         = A.SVC_ST_SEQ_NO
  AND B.SVC_LX_SEQ_NO         = A.SVC_LX_SEQ_NO
  AND B.SVC_CLP_CLM_SEQ_NO    = A.SVC_CLP_CLM_SEQ_NO
  AND B.SVC_SEQ_NO            = A.SVC_SEQ_NO
  AND B.SVC_INCL_RSN_CD      <> 'FXH'
  AND B.SVC_EXCL_RSN_CD       = '   '
WHERE A.SVC_INCL_RSN_CD       = 'FXH'
  AND A.SVC_EXCL_RSN_CD       = '   '
) ST
ON  ( UT.SVC_ISA_FILE_ID      = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO    = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO        = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO        = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO   = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO           = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ      = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.SVC_EXCL_RSN_CD = 'FXH'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-GOTO THE_END;
-*-----------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
