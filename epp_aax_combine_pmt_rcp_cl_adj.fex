-******************************************************************************
-* Program:      epp_ROH_remove_offset_svc.fex
-* Title:        Remove offsetting ERA transactions
-* Author:       Bill Schwartz
-* Date:         02/18/2016
-* Description:  
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-* Programmer    Date          Description of Change
-* ----------  ----------  -------------------------------
-*     WLS     02/18/2016  Add/update audit functionality
-******************************************************************************
-*-SET &ECHO = ALL;
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-RUN
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP1/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark exact offsetting transactions as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      C1.CLP_ISA_FILE_ID
     ,C1.CLP_GS_GRP_SEQ_NO
     ,C1.CLP_ST_SEQ_NO
     ,C1.CLP_LX_SEQ_NO
     ,C1.CLP_CLM_SEQ_NO
	    ,C1.CLP_EPP_GEN_SEQ
   	 ,TO_NUMBER(COALESCE(RTRIM(C1.CLP_CLM_PYMT_AMT),'0'))
     +TO_NUMBER(COALESCE(RTRIM(C2.CLP_CLM_PYMT_AMT),'0'))    AS COMBINED_PAYMENT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID               = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO             = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO                 = ST_SEQ_NO
  AND CLP_CLM_STATUS_CD             = '22'
  AND CLP_EXCL_RSN_CD               = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0')) <> 0
  AND 1 = ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
                  COUNT(*)
            FROM  CLARITY_TDL_TRAN
		          WHERE INVOICE_NUMBER = RTRIM(C1.CLP_CLM_SUBMTR_ID)
              AND DETAIL_TYPE    = 50 )
INNER JOIN
      &PLB.EVAL&PLB_TBL.EVAL
ON    PLB_ISA_FILE_ID               = ST_ISA_FILE_ID
  AND PLB_GS_GRP_SEQ_NO             = ST_GS_GRP_SEQ_NO
  AND PLB_ST_SEQ_NO                 = ST_SEQ_NO
  AND RTRIM(C1.CLP_CLM_SUBMTR_ID)   IN(SUBSTR(RTRIM(PLB_ADJ_ID1),4,LENGTH(RTRIM(PLB_ADJ_ID1)))
                                      ,SUBSTR(RTRIM(PLB_ADJ_ID2),4,LENGTH(RTRIM(PLB_ADJ_ID2)))
                                      ,SUBSTR(RTRIM(PLB_ADJ_ID3),4,LENGTH(RTRIM(PLB_ADJ_ID3))))
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C2
ON    C2.CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND C2.CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND C2.CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND C2.CLP_CLM_STATUS_CD          <> '22'
  AND C2.CLP_EXCL_RSN_CD            = '   '
  AND SUBSTR(C2.CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND RTRIM(C2.CLP_CLM_SUBMTR_ID)   = RTRIM(C1.CLP_CLM_SUBMTR_ID)
  AND TO_NUMBER(COALESCE(RTRIM(C2.CLP_CLM_PYMT_AMT),'0'))  <> 0
  AND TO_NUMBER(COALESCE(RTRIM(C1.CLP_CLM_PYMT_AMT),'0'))
    + TO_NUMBER(COALESCE(RTRIM(C2.CLP_CLM_PYMT_AMT),'0'))  <> 0
  AND TO_NUMBER(COALESCE(RTRIM(C1.CLP_CLM_PYMT_AMT),'0'))
         + TO_NUMBER(COALESCE(RTRIM(C2.CLP_CLM_PYMT_AMT),'0'))  <> 0
WHERE ST_EXCL_RSN_CD                = '   '
  AND TO_NUMBER(COALESCE(RTRIM(C1.CLP_CLM_PYMT_AMT),'0'))
         +TO_NUMBER(COALESCE(RTRIM(C2.CLP_CLM_PYMT_AMT),'0'))
      IN(TO_NUMBER(COALESCE(RTRIM(PLB_PRVDR_ADJ_AMT1),'0'))
	       ,TO_NUMBER(COALESCE(RTRIM(PLB_PRVDR_ADJ_AMT2),'0'))
	       ,TO_NUMBER(COALESCE(RTRIM(PLB_PRVDR_ADJ_AMT3),'0')))
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.CLP_ISA_FILE_ID            = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO          = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO              = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO              = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO             = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ            = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_MULTI_USE_AMOUNT       = COMBINED_PAYMENT
	    ,UT.CLP_EXCL_RSN_CD            = 'AAX'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Check at least one SVC was excluded or goto end
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &CLP.EVAL&CLP_TBL.EVAL
WHERE  CLP_EXCL_RSN_CD = 'AAX'
  AND  ROWNUM          < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark exact offsetting transactions as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      C1.CLP_ISA_FILE_ID
     ,C1.CLP_GS_GRP_SEQ_NO
     ,C1.CLP_ST_SEQ_NO
     ,C1.CLP_LX_SEQ_NO
     ,C1.CLP_CLM_SEQ_NO
	    ,C1.CLP_EPP_GEN_SEQ
	    ,C2.CLP_MULTI_USE_AMOUNT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID               = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO             = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO                 = ST_SEQ_NO
  AND CLP_CLM_STATUS_CD             NOT IN('22','19')
  AND CLP_EXCL_RSN_CD               = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C2
ON    C2.CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND C2.CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND C2.CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND C2.CLP_CLM_STATUS_CD          IN('22','19')
  AND C2.CLP_EXCL_RSN_CD            = 'AAX'
  AND RTRIM(C2.CLP_CLM_SUBMTR_ID)   = RTRIM(C1.CLP_CLM_SUBMTR_ID)
  AND SUBSTR(C2.CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND TO_NUMBER(COALESCE(RTRIM(C2.CLP_CLM_PYMT_AMT),'0'))  <> 0
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.CLP_ISA_FILE_ID            = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO          = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO              = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO              = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO             = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ            = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_MULTI_USE_AMOUNT       = ST.CLP_MULTI_USE_AMOUNT
     ,UT.CLP_EXCL_RSN_CD            = 'AAX'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL UT
USING (
SELECT DISTINCT
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
     ,CLP_CAS_SEQ_NO
     ,CLP_CAS_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CAS_CLM_ADJ_AMT1
	    ,CLP_CAS_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = 'AAX'
INNER JOIN
      &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
ON    CLP_CAS_ISA_FILE_ID       = CLP_ISA_FILE_ID
  AND CLP_CAS_GS_GRP_SEQ_NO     = CLP_GS_GRP_SEQ_NO
  AND CLP_CAS_ST_SEQ_NO         = CLP_ST_SEQ_NO
  AND CLP_CAS_LX_SEQ_NO         = CLP_LX_SEQ_NO
  AND CLP_CAS_CLP_CLM_SEQ_NO    = CLP_CLM_SEQ_NO
  AND CLP_CAS_EXCL_RSN_CD       = '   '
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1,2,3,4
) ST
ON  ( UT.CLP_CAS_ISA_FILE_ID    = ST.CLP_CAS_ISA_FILE_ID
  AND UT.CLP_CAS_GS_GRP_SEQ_NO  = ST.CLP_CAS_GS_GRP_SEQ_NO
  AND UT.CLP_CAS_ST_SEQ_NO      = ST.CLP_CAS_ST_SEQ_NO
  AND UT.CLP_CAS_LX_SEQ_NO      = ST.CLP_CAS_LX_SEQ_NO
  AND UT.CLP_CAS_CLP_CLM_SEQ_NO = ST.CLP_CAS_CLP_CLM_SEQ_NO
  AND UT.CLP_CAS_SEQ_NO         = ST.CLP_CAS_SEQ_NO
  AND UT.CLP_CAS_EPP_GEN_SEQ    = ST.CLP_CAS_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_CAS_EXCL_RSN_CD    = 'AAX'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL UT
USING (
SELECT DISTINCT
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
     ,CLP_CAS_SEQ_NO
     ,CLP_CAS_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CAS_CLM_ADJ_AMT1
	    ,CLP_CAS_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = 'AAX'
INNER JOIN
      &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
ON    CLP_CAS_ISA_FILE_ID       = CLP_ISA_FILE_ID
  AND CLP_CAS_GS_GRP_SEQ_NO     = CLP_GS_GRP_SEQ_NO
  AND CLP_CAS_ST_SEQ_NO         = CLP_ST_SEQ_NO
  AND CLP_CAS_LX_SEQ_NO         = CLP_LX_SEQ_NO
  AND CLP_CAS_CLP_CLM_SEQ_NO    = CLP_CLM_SEQ_NO
  AND CLP_CAS_EXCL_RSN_CD       = '   '
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1,2,3,4
) ST
ON  ( UT.CLP_CAS_ISA_FILE_ID    = ST.CLP_CAS_ISA_FILE_ID
  AND UT.CLP_CAS_GS_GRP_SEQ_NO  = ST.CLP_CAS_GS_GRP_SEQ_NO
  AND UT.CLP_CAS_ST_SEQ_NO      = ST.CLP_CAS_ST_SEQ_NO
  AND UT.CLP_CAS_LX_SEQ_NO      = ST.CLP_CAS_LX_SEQ_NO
  AND UT.CLP_CAS_CLP_CLM_SEQ_NO = ST.CLP_CAS_CLP_CLM_SEQ_NO
  AND UT.CLP_CAS_SEQ_NO         = ST.CLP_CAS_SEQ_NO
  AND UT.CLP_CAS_EPP_GEN_SEQ    = ST.CLP_CAS_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_CAS_EXCL_RSN_CD    = 'AAX'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO           = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD         = 'AAX'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD         = '   '
WHERE ST_EXCL_RSN_CD          = '   '
ORDER BY 1,2,3,4,5,6
) ST
ON  ( UT.SVC_ISA_FILE_ID      = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO    = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO        = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO        = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO   = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO           = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ      = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_EXCL_RSN_CD      = 'AAX'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CASE WHEN CLP_CLM_STATUS_CD IN('22','19')
	            THEN 0-ORIG_AMT
		   ELSE ORIG_AMT
      END                    AS CLP_TOT_CLM_CRG_AMT
     ,CLP_MULTI_USE_AMOUNT   AS CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,0                      AS CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'AAX'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID     = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO   = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO       = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD     = 'AAX'
  AND ((    CLP_CLM_STATUS_CD    IN('22','19')
        AND CLP_MULTI_USE_AMOUNT  < 0 )
    OR (    CLP_CLM_STATUS_CD    NOT IN('22','19')
        AND CLP_MULTI_USE_AMOUNT  > 0 ))
INNER JOIN
      CLARITY_TDL_TRAN
ON    INVOICE_NUMBER      = RTRIM(CLP_CLM_SUBMTR_ID)
  AND DETAIL_TYPE         = 50
WHERE ST_EXCL_RSN_CD      = '   '
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP008
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP008';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC segements
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,( SELECT MAX(SVC_SEQ_NO)+1
        FROM   &SVC.EVAL&SVC_TBL.EVAL S2
        WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
          AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
          AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
          AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
          AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO )
       +RANK()
        OVER ( PARTITION BY CLP_ISA_FILE_ID
                           ,CLP_GS_GRP_SEQ_NO
                           ,CLP_ST_SEQ_NO
                           ,CLP_LX_SEQ_NO
                           ,CLP_CLM_SEQ_NO
               ORDER BY     CLP_ISA_FILE_ID
                           ,CLP_GS_GRP_SEQ_NO
                           ,CLP_ST_SEQ_NO
                           ,CLP_LX_SEQ_NO
                           ,CLP_CLM_SEQ_NO
                           ,TX_ID )   AS SVC_SEQ_NO
     ,1                               AS SVC_EPP_GEN_SEQ
     ,':'                             AS SVC_COMP_SEPERATOR
     ,'HC'                            AS SVC_PROC1_SVC_ID_QLFR
     ,CPT_CODE                        AS SVC_PROC1_CD
     ,' '                             AS SVC_PROC1_MODF1
     ,' '                             AS SVC_PROC1_MODF2
     ,' '                             AS SVC_PROC1_MODF3
     ,' '                             AS SVC_PROC1_MODF4
     ,CASE WHEN CLP_CLM_STATUS_CD IN('22','19')
	            THEN 0-ORIG_AMT
		   ELSE ORIG_AMT
      END                             AS SVC_ORGLI_PRVDR_PYMT
     ,CLP_CLM_PYMT_AMT                AS SVC_LI_PRVDR_PYMT
     ,' '                             AS SVC_NTL_BILNG_REV_CD
     ,' '                             AS SVC_UNTS_SVC_PD_CNT
     ,' '                             AS SVC_PROC2_SVC_ID_QLFR
     ,' '                             AS SVC_PROC2_CD
     ,' '                             AS SVC_PROC2_MODF1
     ,' '                             AS SVC_PROC2_MODF2
     ,' '                             AS SVC_PROC2_MODF3
     ,' '                             AS SVC_PROC2_MODF4
     ,' '                             AS SVC_PROC2_CD_DESC
     ,' '                             AS SVC_ORG_UNTS_SVC_CNT
     ,TX_ID                           AS SVC_CLARITY_TX_ID
     ,'AAX'                           AS SVC_TX_ID_MATCH_TYPE
     ,'Y'                             AS SVC_CONTR_PAYOR_IND
     ,'N'                             AS SVC_DUP_PMT_IND
     ,'N'                             AS SVC_RVSD_INVC_NO
     ,0                               AS SVC_CURRENT_BALANCE
     ,0                               AS SVC_INS_AMOUNT_PAID
     ,0                               AS SVC_INS_AMOUNT_ADJ
     ,'N'                             AS SVC_CRG_IS_VOID_YN
     ,'N'                             AS SVC_PRIOR_DENIAL_YN
     ,0                               AS SVC_MULTI_USE_AMOUNT
     ,'X'                             AS SVC_SCENARIO
     ,'AAX'                           AS SVC_INCL_RSN_CD
     ,'   '                           AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_INCL_RSN_CD           = 'AAX'
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      CLARITY_TDL_TRAN
ON    INVOICE_NUMBER            = RTRIM(CLP_CLM_SUBMTR_ID)
  AND DETAIL_TYPE               = 50
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP009
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP009';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Insert one new SVS_DTM seg for each SVC seg inserted in Step004
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID        AS SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO      AS SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO          AS SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO          AS SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO     AS SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO             AS SVC_SEQ_NO
     ,1                      AS SVC_DTM_SEQ_NO
	    ,1                      AS SVC_DTM_EPP_GEN_SEQ
     ,'472'                  AS SVC_DTM_DTTM_QLFR
     ,TO_CHAR(ORIG_SERVICE_DATE, 'YYYYMMDD')
                             AS SVC_DTM_DATE
     ,' '                    AS SVC_DTM_TIME
     ,' '                    AS SVC_DTM_TIME_CD
     ,' '                    AS SVC_DTM_DTTM_PD_FMT_QLFR
     ,' '                    AS SVC_DTM_DTTM_PD
	    ,'AAX'                  AS SVC_DTM_INCL_RSN_CD
	    ,'   '                  AS SVC_DTM_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.TX_ID                = SVC_CLARITY_TX_ID
  AND A.DETAIL_TYPE          = 1
WHERE SVC_INCL_RSN_CD        = 'AAX'
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP010
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP010';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID          AS SVC_CAS_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO        AS SVC_CAS_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO            AS SVC_CAS_ST_SEQ_NO
     ,SVC_LX_SEQ_NO            AS SVC_CAS_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO       AS SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO               AS SVC_CAS_SVC_SEQ_NO
     ,COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)+1
                 FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                 WHERE  CC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
                   AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
                   AND  CC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
                   AND  CC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
                   AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
                   AND  CC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
                   AND  CC2.SVC_CAS_EXCL_RSN_CD    = '   ' ), 1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,'OA'                     AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,'23'                     AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
                               AS SVC_CAS_CLM_ADJ_AMT1
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY6
     ,'AAX'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,TO_NUMBER(SVC_ORGLI_PRVDR_PYMT) AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(SVC_LI_PRVDR_PYMT)    AS SVC_LI_PRVDR_PYMT
     ,SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')))
                                      AS TOT_SVC_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_INCL_RSN_CD        = 'AAX'
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'AAX'
  AND SVC_EXCL_RSN_CD        = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
)
WHERE (SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT) <> 0
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
