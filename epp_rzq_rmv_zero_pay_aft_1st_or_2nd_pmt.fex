-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL ***
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,C.TOTAL_MTCH_INS_AMT
     ,C.TOTAL_MTCH_INS_ADJ
FROM
(
SELECT /*+ ORDERED NO_UNNEST */
      TO_NUMBER(SVC_CLARITY_TX_ID)  AS SVC_CLARITY_TX_ID
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
		AND CLP_CLM_STATUS_CD         <> '22'
  AND CLP_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD            = '   '
  AND SVC_CLARITY_TX_ID         <> 0
-* ERA transaction payment amount is $0
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
  AND NOT EXISTS
-* No recoup transaction for this invoice - check first 10 digits only
( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
  FROM  &CLP.EVAL&CLP_TBL.EVAL C2
  WHERE SUBSTR(C2.CLP_CLM_SUBMTR_ID,1,10) = SUBSTR(C1.CLP_CLM_SUBMTR_ID,1,10)
    AND RTRIM(C2.CLP_CLM_STATUS_CD)       = '22'
    AND C2.CLP_EXCL_RSN_CD                = '   ' )
-* Matched charge has gt $0 balance
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD        = '   '
  AND RTRIM(SVC_CAS_CLM_ADJ_RSN_CD1)                       = '18'
  AND TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0')) = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
WHERE ST_EXCL_RSN_CD             = '   '
ORDER BY 1
)
INNER JOIN
      ARPB_TRANSACTIONS C
ON    C.TX_ID                    = SVC_CLARITY_TX_ID
  AND C.OUTSTANDING_AMT          > 0
  AND C.OUTSTANDING_AMT          < C.AMOUNT
  AND C.VOID_DATE                IS NULL
  AND C.AMOUNT                   = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
  AND 0                          > C.TOTAL_MTCH_INS_AMT-C.TOTAL_MTCH_INS_ADJ
WHERE EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN  A
      WHERE  A.TX_ID             = C.TX_ID
        AND  A.DETAIL_TYPE       = 20
        AND  A.INSURANCE_AMOUNT  < 0 )
ORDER BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
) ST
ON  ( UT.SVC_ISA_FILE_ID         = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO       = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO           = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO           = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO      = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO              = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ         = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_EXCL_RSN_CD         = 'RZQ'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'RZQ'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-*-STEP003
-*-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-*-----------------------------------------------------------------------------
-*-*SQL
-*-*DELETE
-*-*FROM  &ERD.EVAL&ERD_TBL.EVAL
-*-*WHERE ERD_IFCT_FILE_ID = (SELECT ISA_FILE_ID
-*-*                          FROM   &ISA.EVAL&ISA_TBL.EVAL )
-*-*;
-*-*COMMIT WORK;
-*-*END
-*-*-RUN
-*-*-----------------------------------------------------------------------------
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-*-TYPE -------------------------------------------------------------------------
-*-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-*-----------------------------------------------------------------------------
-*-STEP004
-*-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-*-----------------------------------------------------------------------------
-*SQL
-*INSERT INTO &ERD.EVAL&ERD_TBL.EVAL UT
-*SELECT
-*      FILE_ID
-*     ,SVC_EXCL_RSN_CD
-*     ,CLARITY_TX_ID
-*     ,RANK()OVER
-*     ( PARTITION BY CLARITY_TX_ID
-*       ORDER BY     CLARITY_TX_ID
-*                   ,FILE_ID
-*                   ,SVC_EXCL_RSN_CD
-*                   ,SVC_GS_GRP_SEQ_NO
-*                   ,SVC_ST_SEQ_NO
-*                   ,SVC_LX_SEQ_NO
-*                   ,SVC_CLP_CLM_SEQ_NO
-*                   ,SVC_SEQ_NO ) AS SEQ_NO
-*     ,REASON_CD
-*     ,PROCESS_DATE
-*     ,FILE_PAYOR
-*     ,INVOICE_NUMBER
-*     ,SUM(ADJUST_AMOUNT)         AS ADJUST_AMOUNT
-*FROM
-*(
-*SELECT
-*      SVC_EXCL_RSN_CD
-*     ,SVC_ISA_FILE_ID                AS FILE_ID
-*     ,SVC_GS_GRP_SEQ_NO
-*     ,SVC_ST_SEQ_NO
-*     ,SVC_LX_SEQ_NO
-*     ,SVC_CLP_CLM_SEQ_NO
-*     ,SVC_SEQ_NO
-*     ,SVC_CLARITY_TX_ID              AS CLARITY_TX_ID
-*     ,TRUNC(IFCT_STS_DT)             AS PROCESS_DATE
-*     ,IFCT_FILE_PAYER                AS FILE_PAYOR
-*     ,RTRIM(CLP_CLM_SUBMTR_ID)       AS INVOICE_NUMBER
-*     ,RTRIM(SVC_CAS_CLM_ADJ_GRP_CD1) AS SVC_CAS_CLM_ADJ_GRP_CD1
-*     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD1) AS SVC_CAS_CLM_ADJ_RSN_CD1
-*     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD2) AS SVC_CAS_CLM_ADJ_RSN_CD2
-*     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD3) AS SVC_CAS_CLM_ADJ_RSN_CD3
-*     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD4) AS SVC_CAS_CLM_ADJ_RSN_CD4
-*     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD5) AS SVC_CAS_CLM_ADJ_RSN_CD5
-*     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD6) AS SVC_CAS_CLM_ADJ_RSN_CD6
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0')) AS SVC_CAS_CLM_ADJ_AMT1
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY1),'0')) AS SVC_CAS_CLM_ADJ_QTY1
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0')) AS SVC_CAS_CLM_ADJ_AMT2
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY2),'0')) AS SVC_CAS_CLM_ADJ_QTY2
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0')) AS SVC_CAS_CLM_ADJ_AMT3
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY3),'0')) AS SVC_CAS_CLM_ADJ_QTY3
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0')) AS SVC_CAS_CLM_ADJ_AMT4
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY4),'0')) AS SVC_CAS_CLM_ADJ_QTY4
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0')) AS SVC_CAS_CLM_ADJ_AMT5
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY5),'0')) AS SVC_CAS_CLM_ADJ_QTY5
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')) AS SVC_CAS_CLM_ADJ_AMT6
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY6),'0')) AS SVC_CAS_CLM_ADJ_QTY6
-*FROM  &SVC.EVAL&SVC_TBL.EVAL
-*INNER JOIN
-*      &ST.EVAL&ST_TBL.EVAL
-*ON    ST_ISA_FILE_ID         = SVC_ISA_FILE_ID
-*  AND ST_GS_GRP_SEQ_NO       = SVC_GS_GRP_SEQ_NO
-*  AND ST_SEQ_NO              = SVC_ST_SEQ_NO
-*  AND ST_EXCL_RSN_CD         = '   '
-*INNER JOIN
-*      &IFCT.EVAL&IFCT_TBL.EVAL
-*ON    IFCT_FILE_ID           = SVC_ISA_FILE_ID
-*INNER JOIN
-*      &CLP.EVAL&CLP_TBL.EVAL
-*ON    CLP_ISA_FILE_ID        = SVC_ISA_FILE_ID
-*  AND CLP_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
-*  AND CLP_ST_SEQ_NO          = SVC_ST_SEQ_NO
-*  AND CLP_LX_SEQ_NO          = SVC_LX_SEQ_NO
-*  AND CLP_CLM_SEQ_NO         = SVC_CLP_CLM_SEQ_NO
-*  AND CLP_EXCL_RSN_CD        = '   '
-*INNER JOIN
-*      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
-*ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
-*  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
-*  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
-*  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
-*  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
-*  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
-*  AND SVC_CAS_EXCL_RSN_CD    = '   '
-*WHERE
-*     SVC_EXCL_RSN_CD         = 'RZQ'
-*        )
-*        UNPIVOT
-*        ((REASON_CD,ADJUST_AMOUNT)
-*               FOR RSN_CD
-*               IN
-*               ((SVC_CAS_CLM_ADJ_RSN_CD1,SVC_CAS_CLM_ADJ_AMT1) AS 1,
-*                (SVC_CAS_CLM_ADJ_RSN_CD2,SVC_CAS_CLM_ADJ_AMT2) AS 2,
-*                (SVC_CAS_CLM_ADJ_RSN_CD3,SVC_CAS_CLM_ADJ_AMT3) AS 3,
-*                (SVC_CAS_CLM_ADJ_RSN_CD4,SVC_CAS_CLM_ADJ_AMT4) AS 4,
-*                (SVC_CAS_CLM_ADJ_RSN_CD5,SVC_CAS_CLM_ADJ_AMT5) AS 5,
-*                (SVC_CAS_CLM_ADJ_RSN_CD6,SVC_CAS_CLM_ADJ_AMT6) AS 6)
-*        )
-*WHERE REASON_CD IS NOT NULL
-*GROUP BY
-*      FILE_ID
-*     ,SVC_EXCL_RSN_CD
-*     ,SVC_GS_GRP_SEQ_NO
-*     ,SVC_ST_SEQ_NO
-*     ,SVC_LX_SEQ_NO
-*     ,SVC_CLP_CLM_SEQ_NO
-*     ,SVC_SEQ_NO
-*     ,CLARITY_TX_ID
-*     ,PROCESS_DATE
-*     ,FILE_PAYOR
-*     ,INVOICE_NUMBER
-*     ,REASON_CD
-*ORDER BY 1,2,3,4,5
-*;
-*TABLEF FILE SQLOUT
-*LIST *
-*END
-*-RUN
-*-*-----------------------------------------------------------------------------
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-*-TYPE -------------------------------------------------------------------------
-*-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD     = 'RZQ' )
ORDER BY 1,2,3,4,5,6
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_EXCL_RSN_CD        = 'RZQ'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                            AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'RZQ'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO      = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD    = 'RZQ'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD     = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &ST.EVAL&ST_TBL.EVAL UT
USING (
SELECT
      ST_ISA_FILE_ID
     ,ST_GS_GRP_SEQ_NO
     ,ST_SEQ_NO
     ,ST_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
WHERE ST_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID   = ST_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO = ST_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO     = ST_SEQ_NO
        AND  SVC_EXCL_RSN_CD   = 'RZQ' )
  AND NOT EXISTS
    ( SELECT 1
      FROM   &CLP.EVAL&CLP_TBL.EVAL
      WHERE  CLP_ISA_FILE_ID   = ST_ISA_FILE_ID
        AND  CLP_GS_GRP_SEQ_NO = ST_GS_GRP_SEQ_NO
        AND  CLP_ST_SEQ_NO     = ST_SEQ_NO
        AND  CLP_EXCL_RSN_CD   = '   ' )
  AND NOT EXISTS
    ( SELECT 1
      FROM   &PLB.EVAL&PLB_TBL.EVAL
      WHERE  PLB_ISA_FILE_ID   = ST_ISA_FILE_ID
        AND  PLB_GS_GRP_SEQ_NO = ST_GS_GRP_SEQ_NO
        AND  PLB_ST_SEQ_NO     = ST_SEQ_NO )
ORDER BY 1,2,3,4
) ST
ON  (    ST.ST_ISA_FILE_ID     = UT.ST_ISA_FILE_ID
     AND ST.ST_GS_GRP_SEQ_NO   = UT.ST_GS_GRP_SEQ_NO
     AND ST.ST_SEQ_NO          = UT.ST_SEQ_NO )
WHEN MATCHED THEN
UPDATE SET
      UT.ST_EXCL_RSN_CD        = 'RZQ'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
