-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL UT
USING (
SELECT /*+ PARALLEL ORDERED NO_UNNEST */ DISTINCT
      C2.SVC_CAS_ISA_FILE_ID
     ,C2.SVC_CAS_GS_GRP_SEQ_NO
     ,C2.SVC_CAS_ST_SEQ_NO
     ,C2.SVC_CAS_LX_SEQ_NO
     ,C2.SVC_CAS_CLP_CLM_SEQ_NO
     ,C2.SVC_CAS_SVC_SEQ_NO
     ,C2.SVC_CAS_SEQ_NO
     ,C2.SVC_CAS_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL C1
ON    C1.SVC_CAS_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND C1.SVC_CAS_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND C1.SVC_CAS_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND C1.SVC_CAS_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND C1.SVC_CAS_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND C1.SVC_CAS_SVC_SEQ_NO      = SVC_SEQ_NO
  AND C1.SVC_CAS_EXCL_RSN_CD     = '   '
  AND TO_NUMBER(COALESCE(RTRIM(C1.SVC_CAS_CLM_ADJ_AMT1),'0')) <> 0
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL C2
ON    C2.SVC_CAS_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND C2.SVC_CAS_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND C2.SVC_CAS_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND C2.SVC_CAS_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND C2.SVC_CAS_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND C2.SVC_CAS_SVC_SEQ_NO      = SVC_SEQ_NO
  AND C2.SVC_CAS_SEQ_NO          > C1.SVC_CAS_SEQ_NO
  AND C2.SVC_CAS_EXCL_RSN_CD     = '   '
  AND C2.SVC_CAS_CLM_ADJ_AMT1    = C1.SVC_CAS_CLM_ADJ_AMT1
  AND NOT EXISTS
    ( SELECT 1
      FROM  &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL C3
      WHERE C3.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
        AND C3.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
        AND C3.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
        AND C3.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
        AND C3.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
        AND C3.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
        AND C3.SVC_CAS_SEQ_NO        <> C1.SVC_CAS_SEQ_NO
        AND C3.SVC_CAS_SEQ_NO        <> C2.SVC_CAS_SEQ_NO
        AND C3.SVC_CAS_EXCL_RSN_CD    = '   '
        AND C3.SVC_CAS_CLM_ADJ_AMT1   = 0-C1.SVC_CAS_CLM_ADJ_AMT1)
WHERE ST_EXCL_RSN_CD             = '   '
  AND 0 = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
        - TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
        - TO_NUMBER(COALESCE(RTRIM(C1.SVC_CAS_CLM_ADJ_AMT1),'0'))
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_CAS_ISA_FILE_ID     = UT.SVC_CAS_ISA_FILE_ID
  AND ST.SVC_CAS_GS_GRP_SEQ_NO   = UT.SVC_CAS_GS_GRP_SEQ_NO
  AND ST.SVC_CAS_ST_SEQ_NO       = UT.SVC_CAS_ST_SEQ_NO
  AND ST.SVC_CAS_LX_SEQ_NO       = UT.SVC_CAS_LX_SEQ_NO
  AND ST.SVC_CAS_CLP_CLM_SEQ_NO  = UT.SVC_CAS_CLP_CLM_SEQ_NO
  AND ST.SVC_CAS_SVC_SEQ_NO      = UT.SVC_CAS_SVC_SEQ_NO
  AND ST.SVC_CAS_SEQ_NO          = UT.SVC_CAS_SEQ_NO
  AND ST.SVC_CAS_EPP_GEN_SEQ     = UT.SVC_CAS_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_CAS_EXCL_RSN_CD     = 'DCS'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
