-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      T1.SVC_ISA_FILE_ID
     ,T1.SVC_GS_GRP_SEQ_NO
     ,T1.SVC_ST_SEQ_NO
     ,T1.SVC_LX_SEQ_NO
     ,T1.SVC_CLP_CLM_SEQ_NO
     ,T1.SVC_SEQ_NO
     ,T1.SVC_EPP_GEN_SEQ+1           AS SVC_EPP_GEN_SEQ
     ,T1.SVC_COMP_SEPERATOR
     ,T1.SVC_PROC1_SVC_ID_QLFR
     ,T3.CPT_CODE                    AS SVC_PROC1_CD
     ,T1.SVC_PROC1_MODF1
     ,T1.SVC_PROC1_MODF2
     ,T1.SVC_PROC1_MODF3
     ,T1.SVC_PROC1_MODF4
     ,T3.ORIG_AMT                    AS SVC_ORGLI_PRVDR_PYMT
     ,T1.SVC_LI_PRVDR_PYMT
     ,T1.SVC_NTL_BILNG_REV_CD
     ,T1.SVC_UNTS_SVC_PD_CNT
     ,' '                            AS SVC_PROC2_SVC_ID_QLFR
     ,' '                            AS SVC_PROC2_CD
     ,' '                            AS SVC_PROC2_MODF1
     ,' '                            AS SVC_PROC2_MODF2
     ,' '                            AS SVC_PROC2_MODF3
     ,' '                            AS SVC_PROC2_MODF4
     ,T1.SVC_PROC2_CD_DESC
     ,T1.SVC_ORG_UNTS_SVC_CNT
     ,T3.TX_ID                       AS SVC_CLARITY_TX_ID
     ,'FCO'                          AS SVC_TX_ID_MATCH_TYPE
     ,T1.SVC_CONTR_PAYOR_IND
     ,T1.SVC_DUP_PMT_IND
     ,T1.SVC_RVSD_INVC_NO
     ,T1.SVC_CURRENT_BALANCE
     ,T1.SVC_INS_AMOUNT_PAID
     ,T1.SVC_INS_AMOUNT_ADJ
     ,T1.SVC_CRG_IS_VOID_YN
     ,T1.SVC_PRIOR_DENIAL_YN
     ,T1.SVC_MULTI_USE_AMOUNT
     ,T1.SVC_SCENARIO
     ,'FCO'                          AS SVC_INCL_RSN_CD
     ,'   '                          AS SVC_EXCL_RSN_CD
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),' ')   AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                               AS SVC_LI_PRVDR_PYMT
     ,RANK()
      OVER ( PARTITION BY RTRIM(CLP_CLM_SUBMTR_ID)
                         ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
						 ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
						 ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
						 ,SVC_SEQ_NO )         AS T_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_COMP_SEPERATOR
     ,SVC_PROC1_SVC_ID_QLFR
     ,SVC_PROC1_CD
     ,SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4
     ,SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT
     ,SVC_PROC2_SVC_ID_QLFR
     ,SVC_PROC2_CD
     ,SVC_PROC2_MODF1
     ,SVC_PROC2_MODF2
     ,SVC_PROC2_MODF3
     ,SVC_PROC2_MODF4
     ,SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT
     ,SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND
     ,SVC_RVSD_INVC_NO
     ,SVC_CURRENT_BALANCE
     ,SVC_INS_AMOUNT_PAID
     ,SVC_INS_AMOUNT_ADJ
     ,SVC_CRG_IS_VOID_YN
     ,SVC_PRIOR_DENIAL_YN
     ,SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)    = 'EDC'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_PROC1_CD)       = 'ZZE01'
  AND RTRIM(SVC_CLARITY_TX_ID)  = '0'
  AND SVC_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID       = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO         = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO         = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO        = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR         IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD       = '   '
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1,2,3,4,5
) T1
INNER JOIN
(
SELECT 
      CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
	 ,TX_ID
     ,RANK()
      OVER ( PARTITION BY CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
						 ,SVC_ORGLI_PRVDR_PYMT
                         ,SVC_LI_PRVDR_PYMT
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
						 ,SVC_ORGLI_PRVDR_PYMT
                         ,SVC_LI_PRVDR_PYMT
						 ,TX_ID )              AS T_RANK
	 ,CPT_CODE
     ,ORIG_AMT 
	 ,OUTSTANDING_AMT  
	 ,PATIENT_AMOUNT 
FROM
(
SELECT 
      CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
	 ,A.TX_ID
	 ,A.CPT_CODE
	 ,A.ORIG_AMT
	 ,B.OUTSTANDING_AMT
	 ,SUM(C.PATIENT_AMOUNT)                    AS PATIENT_AMOUNT 
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),' ')   AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                               AS SVC_LI_PRVDR_PYMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)    = 'EDC'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_PROC1_CD)       = 'ZZE01'
  AND RTRIM(SVC_CLARITY_TX_ID)  = '0'
  AND SVC_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID       = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO         = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO         = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO        = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR         IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD       = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) > 0
ORDER BY 1,2,3,4
) T2
INNER JOIN
      CLARITY_TDL_TRAN  A
ON    INVOICE_NUMBER            = CLP_CLM_SUBMTR_ID
  AND ORIG_SERVICE_DATE         = SVC_DTM_DATE
  AND DETAIL_TYPE               = '50'
  AND ORIG_AMT                 >= SVC_ORGLI_PRVDR_PYMT
INNER JOIN
      ARPB_TRANSACTIONS B  
ON    B.TX_ID                   = A.TX_ID
LEFT OUTER JOIN
      CLARITY_TDL_TRAN  C
ON    C.TX_ID                   = A.TX_ID
  AND C.DETAIL_TYPE             = 20
GROUP BY
      CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
	 ,A.TX_ID
	 ,A.CPT_CODE
	 ,A.ORIG_AMT
	 ,B.OUTSTANDING_AMT
HAVING B.OUTSTANDING_AMT+SUM(COALESCE(0-C.PATIENT_AMOUNT,0)) <> 0
  AND ( SVC_ORGLI_PRVDR_PYMT    = B.OUTSTANDING_AMT+SUM(COALESCE(0-C.PATIENT_AMOUNT,0)) 
     OR SVC_LI_PRVDR_PYMT       = B.OUTSTANDING_AMT+SUM(COALESCE(0-C.PATIENT_AMOUNT,0))) 
)) T3
ON    T3.CLP_CLM_SUBMTR_ID      = T1.CLP_CLM_SUBMTR_ID
  AND T3.SVC_DTM_DATE           = T1.SVC_DTM_DATE
  AND T3.SVC_ORGLI_PRVDR_PYMT   = T1.SVC_ORGLI_PRVDR_PYMT
  AND T3.SVC_LI_PRVDR_PYMT      = T1.SVC_LI_PRVDR_PYMT
  AND T3.T_RANK                 = T1.T_RANK
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_INCL_RSN_CD  = 'FCO'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark row with bad CPT as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT
      B.SVC_ISA_FILE_ID
     ,B.SVC_GS_GRP_SEQ_NO
     ,B.SVC_ST_SEQ_NO
     ,B.SVC_LX_SEQ_NO
     ,B.SVC_CLP_CLM_SEQ_NO
     ,B.SVC_SEQ_NO
	 ,B.SVC_EPP_GEN_SEQ
FROM  &SVC.EVAL&SVC_TBL.EVAL A
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL B
ON    B.SVC_ISA_FILE_ID       = A.SVC_ISA_FILE_ID
  AND B.SVC_GS_GRP_SEQ_NO     = A.SVC_GS_GRP_SEQ_NO
  AND B.SVC_ST_SEQ_NO         = A.SVC_ST_SEQ_NO
  AND B.SVC_LX_SEQ_NO         = A.SVC_LX_SEQ_NO
  AND B.SVC_CLP_CLM_SEQ_NO    = A.SVC_CLP_CLM_SEQ_NO
  AND B.SVC_SEQ_NO            = A.SVC_SEQ_NO
  AND B.SVC_INCL_RSN_CD      <> 'FCO'
  AND B.SVC_EXCL_RSN_CD       = '   '
WHERE A.SVC_INCL_RSN_CD       = 'FCO'
) ST
ON  ( UT.SVC_ISA_FILE_ID      = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO    = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO        = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO        = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO   = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO           = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ      = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.SVC_EXCL_RSN_CD = 'FCO'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_INCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  SVC_EXCL_RSN_CD    = 'FCO' )
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.CLP_ISA_FILE_ID        = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO      = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO          = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO          = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO         = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ        = UT.CLP_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.CLP_EXCL_RSN_CD   = 'FCO'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1
     ,CLP_CLM_SUBMTR_ID
     ,'2'                                  AS CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(SVC_ORGLI_PRVDR_PYMT)) AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'FCO'                AS CLP_INCL_RSN_CD
     ,'   '                AS CLP_EXCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD    = 'FCO'
  AND SVC_EXCL_RSN_CD    = '   '
WHERE CLP_EXCL_RSN_CD    = 'FCO'
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-*-STEP005
-*-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-*-----------------------------------------------------------------------------
-*SQL
-*MERGE INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL UT
-*USING (
-*SELECT
-*      SVC_CAS_ISA_FILE_ID
-*     ,SVC_CAS_GS_GRP_SEQ_NO
-*     ,SVC_CAS_ST_SEQ_NO
-*     ,SVC_CAS_LX_SEQ_NO
-*     ,SVC_CAS_CLP_CLM_SEQ_NO
-*     ,SVC_CAS_SVC_SEQ_NO
-*     ,SVC_CAS_SEQ_NO
-*     ,SVC_CAS_EPP_GEN_SEQ
-*FROM  &ST.EVAL&ST_TBL.EVAL
-*INNER JOIN
-*      &CLP.EVAL&CLP_TBL.EVAL
-*ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
-*  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
-*  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
-*  AND CLP_EXCL_RSN_CD           = '   '
-*INNER JOIN
-*      &SVC.EVAL&SVC_TBL.EVAL
-*ON    SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
-*  AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
-*  AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
-*  AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
-*  AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
-*  AND SVC_INCL_RSN_CD           = 'FCO'
-*INNER JOIN
-*      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL SC1
-*ON    SVC_CAS_ISA_FILE_ID       = SVC_ISA_FILE_ID
-*  AND SVC_CAS_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
-*  AND SVC_CAS_ST_SEQ_NO         = SVC_ST_SEQ_NO
-*  AND SVC_CAS_LX_SEQ_NO         = SVC_LX_SEQ_NO
-*  AND SVC_CAS_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
-*  AND SVC_CAS_SVC_SEQ_NO        = SVC_SEQ_NO
-*  AND SVC_CAS_EXCL_RSN_CD       = '   '
-*WHERE ST_EXCL_RSN_CD            = '   '
-*ORDER BY 1,2,3,4,5,6,7,8
-*) ST
-*ON (  UT.SVC_CAS_ISA_FILE_ID    = ST.SVC_CAS_ISA_FILE_ID
-*  AND UT.SVC_CAS_GS_GRP_SEQ_NO  = ST.SVC_CAS_GS_GRP_SEQ_NO
-*  AND UT.SVC_CAS_ST_SEQ_NO      = ST.SVC_CAS_ST_SEQ_NO
-*  AND UT.SVC_CAS_LX_SEQ_NO      = ST.SVC_CAS_LX_SEQ_NO
-*  AND UT.SVC_CAS_CLP_CLM_SEQ_NO = ST.SVC_CAS_CLP_CLM_SEQ_NO
-*  AND UT.SVC_CAS_SVC_SEQ_NO     = ST.SVC_CAS_SVC_SEQ_NO
-*  AND UT.SVC_CAS_SEQ_NO         = ST.SVC_CAS_SEQ_NO
-*  AND UT.SVC_CAS_EPP_GEN_SEQ    = ST.SVC_CAS_EPP_GEN_SEQ )
-*WHEN MATCHED THEN
-*UPDATE SET
-*      UT.SVC_CAS_EXCL_RSN_CD    = 'FCO'
-*;
-*TABLEF FILE SQLOUT
-*LIST *
-*END
-*-RUN
-*-*-----------------------------------------------------------------------------
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-*-TYPE -------------------------------------------------------------------------
-*-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC_CAS segments
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      SVC_ISA_FILE_ID          AS SVC_CAS_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO        AS SVC_CAS_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO            AS SVC_CAS_ST_SEQ_NO
     ,SVC_LX_SEQ_NO            AS SVC_CAS_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO       AS SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO               AS SVC_CAS_SVC_SEQ_NO
     ,COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)+1
                 FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                 WHERE  CC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
                   AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
                   AND  CC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
                   AND  CC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
                   AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
                   AND  CC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
                   AND  CC2.SVC_CAS_EXCL_RSN_CD    = '   ' ), 1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,'OA'                     AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,'23'                     AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
                               AS SVC_CAS_CLM_ADJ_AMT1
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY6
     ,'FCC'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,TO_NUMBER(SVC_ORGLI_PRVDR_PYMT) AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(SVC_LI_PRVDR_PYMT)    AS SVC_LI_PRVDR_PYMT
     ,SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')))
                                      AS TOT_SVC_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'FCO'
  AND SVC_EXCL_RSN_CD        = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
)
WHERE (SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT) <> 0
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
