-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-TYPE Only EDC Files
-TYPE *************************************************************************
-IF  '&PAYER.EVAL' NE 'EDC' THEN GOTO THE_END;
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL - Mark claims as excluded when only one charge on
-TYPE &NOWTIME.EVAL &STEP.EVAL - the invoice
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID               = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)     = 'EDC'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD            = '   '
  AND CLP_TOT_CLM_CRG_AMT       <> 0
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0')) <> 0
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_PROC1_CD)        = 'ZZE01'
  AND SVC_EXCL_RSN_CD            = '   '
  AND TO_NUMBER(SVC_CLARITY_TX_ID) = 0
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
      = TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0'))
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN('472','150')
  AND SVC_DTM_EXCL_RSN_CD        = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER           = RTRIM(CLP_CLM_SUBMTR_ID)
  AND A.DETAIL_TYPE              = 50
  AND EXISTS
  ( SELECT 1
    FROM   &SVC.EVAL&SVC_TBL.EVAL         S2
          ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
    WHERE  S2.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
      AND  S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
      AND  S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
      AND  S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
      AND  S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
      AND  RTRIM(S2.SVC_PROC1_CD)    = A.CPT_CODE
      AND  D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
      AND  D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
      AND  D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
      AND  D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
      AND  D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
      AND  D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
      AND  D2.SVC_DTM_DTTM_QLFR      IN('472','150')
      AND  D2.SVC_DTM_EXCL_RSN_CD    = '   '
      AND  TO_DATE(D2.SVC_DTM_DATE,'YYYYMMDD')                     = A.ORIG_SERVICE_DATE
      AND  TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))    = 0
      AND  TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')) = A.ORIG_PRICE )
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                    = A.TX_ID
  AND B.OUTSTANDING_AMT         <> 0
WHERE ST_EXCL_RSN_CD             = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
HAVING
      SUM(ORIG_PRICE)           = CLP_TOT_CLM_CRG_AMT
  AND SUM(OUTSTANDING_AMT)      = CLP_CLM_PYMT_AMT
ORDER BY 1,2,3,4,5
) ST
ON  (    ST.SVC_ISA_FILE_ID      = UT.SVC_ISA_FILE_ID
     AND ST.SVC_GS_GRP_SEQ_NO    = UT.SVC_GS_GRP_SEQ_NO
     AND ST.SVC_ST_SEQ_NO        = UT.SVC_ST_SEQ_NO
     AND ST.SVC_LX_SEQ_NO        = UT.SVC_LX_SEQ_NO
     AND ST.SVC_CLP_CLM_SEQ_NO   = UT.SVC_CLP_CLM_SEQ_NO
     AND ST.SVC_SEQ_NO           = UT.SVC_SEQ_NO
     AND ST.SVC_EPP_GEN_SEQ      = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_EXCL_RSN_CD         = 'ES4'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'ES4'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC segements
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT
      T1.SVC_ISA_FILE_ID
     ,T1.SVC_GS_GRP_SEQ_NO
     ,T1.SVC_ST_SEQ_NO
     ,T1.SVC_LX_SEQ_NO
     ,T1.SVC_CLP_CLM_SEQ_NO
     ,T1.SVC_SEQ_NO
     ,T1.SVC_EPP_GEN_SEQ+1           AS SVC_EPP_GEN_SEQ
     ,T1.SVC_COMP_SEPERATOR
     ,T1.SVC_PROC1_SVC_ID_QLFR
     ,T1.SVC_PROC1_CD
     ,T1.SVC_PROC1_MODF1
     ,T1.SVC_PROC1_MODF2
     ,T1.SVC_PROC1_MODF3
     ,T1.SVC_PROC1_MODF4
     ,T1.SVC_ORGLI_PRVDR_PYMT
     ,T2.OUTSTANDING_AMT            AS SVC_LI_PRVDR_PYMT
     ,T1.SVC_NTL_BILNG_REV_CD
     ,T1.SVC_UNTS_SVC_PD_CNT
     ,T1.SVC_PROC2_SVC_ID_QLFR
     ,T1.SVC_PROC2_CD
     ,T1.SVC_PROC2_MODF1
     ,T1.SVC_PROC2_MODF2
     ,T1.SVC_PROC2_MODF3
     ,T1.SVC_PROC2_MODF4
     ,T1.SVC_PROC2_CD_DESC
     ,T1.SVC_ORG_UNTS_SVC_CNT
     ,T2.TX_ID                      AS SVC_CLARITY_TX_ID
     ,'ES4'                         AS SVC_TX_ID_MATCH_TYPE
     ,T1.SVC_CONTR_PAYOR_IND
     ,T1.SVC_DUP_PMT_IND
     ,T1.SVC_RVSD_INVC_NO
     ,T2.OUTSTANDING_AMT            AS SVC_CURRENT_BALANCE
     ,T2.TOTAL_MTCH_INS_AMT         AS SVC_INS_AMOUNT_PAID
     ,T2.TOTAL_MTCH_INS_ADJ         AS SVC_INS_AMOUNT_ADJ
     ,CASE WHEN T2.VOID_DATE IS NULL
                THEN 'N'
           ELSE 'Y'             END  AS SVC_CRG_IS_VOID_YN
     ,T1.SVC_PRIOR_DENIAL_YN
     ,T1.SVC_MULTI_USE_AMOUNT
     ,T1.SVC_SCENARIO
     ,'ES4'                          AS SVC_INCL_RSN_CD
     ,'   '                          AS SVC_EXCL_RSN_CD
FROM
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)       AS CLP_CLM_SUBMTR_ID
     ,RTRIM(CLP_CLM_STATUS_CD)       AS CLP_CLM_STATUS_CD
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
	                                 AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)            AS SVC_PROC1_CD
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
	                                 AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
	                                 AS SVC_LI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,DENSE_RANK()OVER ( PARTITION BY
	                            RTRIM(CLP_CLM_SUBMTR_ID)
                               ,RTRIM(CLP_CLM_STATUS_CD)
							   ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
                               ,RTRIM(SVC_PROC1_CD)
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                               ,SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,SVC_CLP_CLM_SEQ_NO
                   ORDER BY     RTRIM(CLP_CLM_SUBMTR_ID)
                               ,RTRIM(CLP_CLM_STATUS_CD)
							   ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
                               ,RTRIM(SVC_PROC1_CD)
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                               ,SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,SVC_CLP_CLM_SEQ_NO
                               ,SVC_SEQ_NO )
							         AS S_RANK
     ,SVC_EPP_GEN_SEQ+1              AS SVC_EPP_GEN_SEQ
     ,SVC_COMP_SEPERATOR
     ,SVC_PROC1_SVC_ID_QLFR
     ,SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4
     ,SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT
     ,SVC_PROC2_SVC_ID_QLFR
     ,SVC_PROC2_CD
     ,SVC_PROC2_MODF1
     ,SVC_PROC2_MODF2
     ,SVC_PROC2_MODF3
     ,SVC_PROC2_MODF4
     ,SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT
     ,SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND
     ,SVC_RVSD_INVC_NO
     ,SVC_PRIOR_DENIAL_YN
     ,SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL S2
      WHERE  S2.SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  S2.SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  S2.SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  S2.SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  S2.SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  S2.SVC_EXCL_RSN_CD    = 'ES4' )
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD            = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN('472','150')
  AND SVC_DTM_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD             = '   '
ORDER BY 1,2,3,4,5
) T1
INNER JOIN
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)            AS CLP_CLM_SUBMTR_ID
     ,RTRIM(CLP_CLM_STATUS_CD)            AS CLP_CLM_STATUS_CD
     ,TO_DATE(SVC_DTM_DATE,'YYYYMMDD')    AS SVC_DTM_DATE
	 ,RTRIM(SVC_PROC1_CD)                 AS SVC_PROC1_CD
	 ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
	                                      AS SVC_ORGLI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
	 ,DENSE_RANK()OVER ( PARTITION BY
	                            RTRIM(CLP_CLM_SUBMTR_ID)
	                           ,RTRIM(CLP_CLM_STATUS_CD)
                               ,TO_DATE(SVC_DTM_DATE,'YYYYMMDD')
	                           ,RTRIM(SVC_PROC1_CD)
	                           ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                               ,SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,SVC_CLP_CLM_SEQ_NO
                   ORDER BY     RTRIM(CLP_CLM_SUBMTR_ID)
	                           ,RTRIM(CLP_CLM_STATUS_CD)
                               ,TO_DATE(SVC_DTM_DATE,'YYYYMMDD')
	                           ,RTRIM(SVC_PROC1_CD)
	                           ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                               ,SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,SVC_CLP_CLM_SEQ_NO
							   ,SVC_SEQ_NO
                               ,A.TX_ID  ) AS T_RANK
	 ,A.TX_ID
	 ,B.VOID_DATE
     ,B.OUTSTANDING_AMT
     ,B.TOTAL_MTCH_INS_AMT
     ,B.TOTAL_MTCH_INS_ADJ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL S2
      WHERE  S2.SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  S2.SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  S2.SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  S2.SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  S2.SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  S2.SVC_EXCL_RSN_CD    = 'ES4' )
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD            = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN('472','150')
  AND SVC_DTM_EXCL_RSN_CD        = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER           = RTRIM(CLP_CLM_SUBMTR_ID)
  AND A.DETAIL_TYPE              = 50
  AND A.CPT_CODE                 = RTRIM(SVC_PROC1_CD)
  AND A.ORIG_SERVICE_DATE        = TO_DATE(SVC_DTM_DATE,'YYYYMMDD')
  AND A.ORIG_PRICE               = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                    = A.TX_ID
  AND B.OUTSTANDING_AMT         <> 0
WHERE ST_EXCL_RSN_CD             = '   '
ORDER BY 1,2,3,4,5
) T2
ON    T2.CLP_CLM_SUBMTR_ID       = T1.CLP_CLM_SUBMTR_ID
  AND T2.CLP_CLM_STATUS_CD       = T1.CLP_CLM_STATUS_CD
  AND T2.SVC_DTM_DATE            = T1.SVC_DTM_DATE
  AND T2.SVC_PROC1_CD            = T1.SVC_PROC1_CD
  AND T2.SVC_ORGLI_PRVDR_PYMT    = T1.SVC_ORGLI_PRVDR_PYMT
  AND T2.SVC_ISA_FILE_ID         = T1.SVC_ISA_FILE_ID
  AND T2.SVC_GS_GRP_SEQ_NO       = T1.SVC_GS_GRP_SEQ_NO
  AND T2.SVC_ST_SEQ_NO           = T1.SVC_ST_SEQ_NO
  AND T2.SVC_LX_SEQ_NO           = T1.SVC_LX_SEQ_NO
  AND T2.SVC_CLP_CLM_SEQ_NO      = T1.SVC_CLP_CLM_SEQ_NO
  AND T2.T_RANK                  = T1.S_RANK
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT
      B.SVC_ISA_FILE_ID
     ,B.SVC_GS_GRP_SEQ_NO
     ,B.SVC_ST_SEQ_NO
     ,B.SVC_LX_SEQ_NO
     ,B.SVC_CLP_CLM_SEQ_NO
     ,B.SVC_SEQ_NO
	 ,B.SVC_EPP_GEN_SEQ
FROM  &SVC.EVAL&SVC_TBL.EVAL A
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL B
ON    B.SVC_ISA_FILE_ID       = A.SVC_ISA_FILE_ID
  AND B.SVC_GS_GRP_SEQ_NO     = A.SVC_GS_GRP_SEQ_NO
  AND B.SVC_ST_SEQ_NO         = A.SVC_ST_SEQ_NO
  AND B.SVC_LX_SEQ_NO         = A.SVC_LX_SEQ_NO
  AND B.SVC_CLP_CLM_SEQ_NO    = A.SVC_CLP_CLM_SEQ_NO
  AND B.SVC_SEQ_NO            = A.SVC_SEQ_NO
  AND B.SVC_INCL_RSN_CD      <> 'ES4'
  AND B.SVC_EXCL_RSN_CD       = '   '
WHERE A.SVC_INCL_RSN_CD       = 'ES4'
  AND A.SVC_EXCL_RSN_CD       = '   '
) ST
ON  ( UT.SVC_ISA_FILE_ID      = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO    = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO        = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO        = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO   = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO           = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ      = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.SVC_EXCL_RSN_CD = 'ES4'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC_CAS segments
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      SVC_ISA_FILE_ID          AS SVC_CAS_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO        AS SVC_CAS_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO            AS SVC_CAS_ST_SEQ_NO
     ,SVC_LX_SEQ_NO            AS SVC_CAS_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO       AS SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO               AS SVC_CAS_SVC_SEQ_NO
     ,COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)+1
                 FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                 WHERE  CC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
                   AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
                   AND  CC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
                   AND  CC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
                   AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
                   AND  CC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
                   AND  CC2.SVC_CAS_EXCL_RSN_CD    = '   ' ), 1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,'OA'                     AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,'23'                     AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
                               AS SVC_CAS_CLM_ADJ_AMT1
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY6
     ,'ES4'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,TO_NUMBER(SVC_ORGLI_PRVDR_PYMT) AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(SVC_LI_PRVDR_PYMT)    AS SVC_LI_PRVDR_PYMT
     ,SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')))
                                      AS TOT_SVC_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'ES4'
  AND SVC_EXCL_RSN_CD        = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
)
WHERE (SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT) <> 0
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
