-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL - Mark 2nd occurence of payments to be combined
-TYPE &NOWTIME.EVAL &STEP.EVAL - as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      S1.SVC_ISA_FILE_ID
     ,S1.SVC_GS_GRP_SEQ_NO
     ,S1.SVC_ST_SEQ_NO
     ,S1.SVC_LX_SEQ_NO
     ,S1.SVC_CLP_CLM_SEQ_NO
     ,S1.SVC_SEQ_NO
     ,S1.SVC_EPP_GEN_SEQ
     ,RTRIM(CLP_CLM_SUBMTR_ID)
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND RTRIM(S1.SVC_PROC1_MODF1)  IS NOT NULL
  AND S1.SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO      = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD     = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO             <> S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)     = RTRIM(S1.SVC_PROC1_CD)
  AND RTRIM(S2.SVC_PROC1_MODF1)  = RTRIM(S1.SVC_PROC1_MODF1)
  AND S2.SVC_EXCL_RSN_CD         = '   '
  AND NOT EXISTS
    ( SELECT 1
	  FROM  &SVC.EVAL&SVC_TBL.EVAL S3
      WHERE S3.SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
        AND S3.SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
        AND S3.SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
        AND S3.SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
        AND S3.SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
        AND S3.SVC_SEQ_NO              NOT IN(S1.SVC_SEQ_NO,S2.SVC_SEQ_NO)
        AND RTRIM(S3.SVC_PROC1_CD)     = RTRIM(S1.SVC_PROC1_CD)
        AND S3.SVC_PROC1_MODF1         = S1.SVC_PROC1_MODF1
        AND S3.SVC_EXCL_RSN_CD         = '   ' )
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID     = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO   = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO       = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO       = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO  = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO      = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND D2.SVC_DTM_DATE            = D1.SVC_DTM_DATE
  AND D2.SVC_DTM_EXCL_RSN_CD     = '   '
INNER JOIN
      INV_CLM_LN_ADDL CL1
ON    INVOICE_NUM                = RTRIM(CLP_CLM_SUBMTR_ID)
  AND PROC_OR_REV_CODE           = RTRIM(S1.SVC_PROC1_CD)
  AND FROM_SVC_DATE              = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
  AND MODIFIER_ONE               = RTRIM(S1.SVC_PROC1_MODF1)
  AND CHARGE_AMOUNT              = TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                  +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
  AND NOT EXISTS
    ( SELECT 1
	  FROM  INV_CLM_LN_ADDL CL2
	  WHERE CL2.INVOICE_NUM      = RTRIM(CLP_CLM_SUBMTR_ID)
        AND CL2.PROC_OR_REV_CODE = RTRIM(S1.SVC_PROC1_CD)
        AND CL2.FROM_SVC_DATE    = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND CL2.MODIFIER_ONE     = RTRIM(S1.SVC_PROC1_MODF1)
		AND CL2.LINE            <> CL1.LINE )
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID        = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO      = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO          = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO          = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO     = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO             = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ        = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN UPDATE
SET   UT.SVC_EXCL_RSN_CD        = 'CTB'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'CTB'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,MAX(SVC_SEQ_NO)
     ,MAX(SVC_EPP_GEN_SEQ)+1     AS SVC_EPP_GEN_SEQ
     ,MAX(SVC_COMP_SEPERATOR)
     ,MAX(SVC_PROC1_SVC_ID_QLFR)
     ,RTRIM(SVC_PROC1_CD)        AS SVC_PROC1_CD
     ,RTRIM(SVC_PROC1_MODF1)     AS SVC_PROC1_MODF1
     ,MAX(SVC_PROC1_MODF2)
     ,MAX(SVC_PROC1_MODF3)
     ,MAX(SVC_PROC1_MODF4)
     ,SUM(SVC_ORGLI_PRVDR_PYMT)
     ,SUM(SVC_LI_PRVDR_PYMT)
     ,MAX(SVC_NTL_BILNG_REV_CD)
     ,MAX(SVC_UNTS_SVC_PD_CNT)
     ,MAX(SVC_PROC2_SVC_ID_QLFR)
     ,MAX(SVC_PROC2_CD)
     ,MAX(SVC_PROC2_MODF1)
     ,MAX(SVC_PROC2_MODF2)
     ,MAX(SVC_PROC2_MODF3)
     ,MAX(SVC_PROC2_MODF4)
     ,MAX(SVC_PROC2_CD_DESC)
     ,MAX(SVC_ORG_UNTS_SVC_CNT)
     ,SUM( CASE WHEN INSTR(TRANSACTION_LIST,',', 1, 1) = 0
	                 THEN TRANSACTION_LIST
                ELSE TO_CHAR(LINE)
           END )                 AS SVC_CLARITY_TX_ID
     ,MAX(SVC_TX_ID_MATCH_TYPE)
     ,MAX(SVC_CONTR_PAYOR_IND)
     ,MAX(SVC_DUP_PMT_IND)
     ,MAX(SVC_RVSD_INVC_NO)
     ,MAX(SVC_CURRENT_BALANCE)
     ,MAX(SVC_INS_AMOUNT_PAID)
     ,MAX(SVC_INS_AMOUNT_ADJ)
     ,MAX(SVC_CRG_IS_VOID_YN)
     ,MAX(SVC_PRIOR_DENIAL_YN)
     ,MAX(SVC_MULTI_USE_AMOUNT)
     ,MAX(SVC_SCENARIO)
     ,'CTB'                      AS SVC_INCL_RSN_CD
     ,'   '                      AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD        = 'CTB'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      INV_CLM_LN_ADDL CL1
ON    INVOICE_NUM            = RTRIM(CLP_CLM_SUBMTR_ID)
  AND PROC_OR_REV_CODE       = RTRIM(S1.SVC_PROC1_CD)
  AND FROM_SVC_DATE          = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
  AND MODIFIER_ONE           = RTRIM(S1.SVC_PROC1_MODF1)
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
	 ,RTRIM(SVC_PROC1_CD)
	 ,RTRIM(SVC_PROC1_MODF1)
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC_CAS segments
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID       AS SVC_CAS_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO     AS SVC_CAS_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO         AS SVC_CAS_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO         AS SVC_CAS_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO    AS SVC_CAS_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO            AS SVC_CAS_SVC_SEQ_NO
     ,RANK()
      OVER ( PARTITION BY  S2.SVC_ISA_FILE_ID
                          ,S2.SVC_GS_GRP_SEQ_NO
                          ,S2.SVC_ST_SEQ_NO
                          ,S2.SVC_LX_SEQ_NO
                          ,S2.SVC_CLP_CLM_SEQ_NO
                          ,S2.SVC_SEQ_NO
             ORDER BY      S2.SVC_ISA_FILE_ID
                          ,S2.SVC_GS_GRP_SEQ_NO
                          ,S2.SVC_ST_SEQ_NO
                          ,S2.SVC_LX_SEQ_NO
                          ,S2.SVC_CLP_CLM_SEQ_NO
                          ,S2.SVC_SEQ_NO
                          ,SVC_CAS_CLM_ADJ_GRP_CD1
                          ,SVC_CAS_CLM_ADJ_RSN_CD1 )
                           +COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)+1
                                       FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                                       WHERE  CC2.SVC_CAS_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
                                         AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
                                         AND  CC2.SVC_CAS_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
                                         AND  CC2.SVC_CAS_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
                                         AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
                                         AND  CC2.SVC_CAS_SVC_SEQ_NO     = S2.SVC_SEQ_NO ),1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,SVC_CAS_CLM_ADJ_GRP_CD1  AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD1  AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,SVC_CAS_CLM_ADJ_AMT1     AS SVC_CAS_CLM_ADJ_AMT1
     ,SVC_CAS_CLM_ADJ_QTY1     AS SVC_CAS_CLM_ADJ_QTY1
     ,SVC_CAS_CLM_ADJ_RSN_CD2  AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,SVC_CAS_CLM_ADJ_AMT2     AS SVC_CAS_CLM_ADJ_AMT2
     ,SVC_CAS_CLM_ADJ_QTY2     AS SVC_CAS_CLM_ADJ_QTY2
     ,SVC_CAS_CLM_ADJ_RSN_CD3  AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,SVC_CAS_CLM_ADJ_AMT3     AS SVC_CAS_CLM_ADJ_AMT3
     ,SVC_CAS_CLM_ADJ_QTY3     AS SVC_CAS_CLM_ADJ_QTY3
     ,SVC_CAS_CLM_ADJ_RSN_CD4  AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,SVC_CAS_CLM_ADJ_AMT4     AS SVC_CAS_CLM_ADJ_AMT4
     ,SVC_CAS_CLM_ADJ_QTY4     AS SVC_CAS_CLM_ADJ_QTY4
     ,SVC_CAS_CLM_ADJ_RSN_CD5  AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,SVC_CAS_CLM_ADJ_AMT5     AS SVC_CAS_CLM_ADJ_AMT5
     ,SVC_CAS_CLM_ADJ_QTY5     AS SVC_CAS_CLM_ADJ_QTY5
     ,SVC_CAS_CLM_ADJ_RSN_CD6  AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,SVC_CAS_CLM_ADJ_AMT6     AS SVC_CAS_CLM_ADJ_AMT6
     ,SVC_CAS_CLM_ADJ_QTY6     AS SVC_CAS_CLM_ADJ_QTY6
     ,'CTB'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD           = 'CTB'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID        = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = S1.SVC_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO            <> S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
  AND RTRIM(S2.SVC_PROC1_MODF1) = RTRIM(S1.SVC_PROC1_MODF1)
  AND S2.SVC_INCL_RSN_CD        = 'CTB'
  AND S2.SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_DATE           = D1.SVC_DTM_DATE
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID       = S1.SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO     = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO         = S1.SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO         = S1.SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO    = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO        = S1.SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD       = '   '
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
