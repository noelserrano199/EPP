-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP/EPP_EPP1_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CRG_TOT
					,SUM(CHARGE_AMOUNT)
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,SUM(SVC_ORGLI_PRVDR_PYMT) AS CRG_TOT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID             = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)   = 'ANTHEMBLUECROSS'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
		AND ( CLP_CLM_STATUS_CD     <> '22'
     OR 0                      = TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0')))
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD          = '   '
		AND NOT EXISTS
		  ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
				  FROM  &SVC.EVAL&SVC_TBL.EVAL S2
      WHERE S2.SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND S2.SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND S2.SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND S2.SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND S2.SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
								AND S2.SVC_SEQ_NO        <> S1.SVC_SEQ_NO
        AND S2.SVC_EXCL_RSN_CD    = '   ' )
WHERE ST_EXCL_RSN_CD           = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
HAVING COUNT(*)               = 1
) T1
INNER JOIN
      INV_CLM_LN_ADDL    A
ON    A.INVOICE_NUM           = CLP_CLM_SUBMTR_ID
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CRG_TOT
HAVING SUM(CHARGE_AMOUNT)     = ABS(CRG_TOT)
  AND  COUNT(*)               > 1
) ST
ON  ( UT.SVC_ISA_FILE_ID      = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO    = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO        = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO        = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO   = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO           = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ      = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_EXCL_RSN_CD      = 'CPU'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD = 'CPU'
  AND  ROWNUM          < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,( SELECT MAX(SVC_SEQ_NO)
        FROM   &SVC.EVAL&SVC_TBL.EVAL S4
        WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
          AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
          AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
          AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
          AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO )
     +RANK()
      OVER ( PARTITION BY SVC_ISA_FILE_ID
                         ,SVC_GS_GRP_SEQ_NO
                         ,SVC_ST_SEQ_NO
                         ,SVC_LX_SEQ_NO
                         ,SVC_CLP_CLM_SEQ_NO
             ORDER BY     SVC_ISA_FILE_ID
                         ,SVC_GS_GRP_SEQ_NO
                         ,SVC_ST_SEQ_NO
                         ,SVC_LX_SEQ_NO
                         ,SVC_CLP_CLM_SEQ_NO
                         ,A.CLM_LN ) AS SVC_SEQ_NO
     ,1                              AS SVC_EPP_GEN_SEQ
     ,':'                            AS SVC_COMP_SEPERATOR
     ,'HC'                           AS SVC_PROC1_SVC_ID_QLFR
     ,A.PROC_OR_REV_CODE             AS SVC_PROC1_CD
     ,SUBSTR(COALESCE(A.MODIFIER_ONE, '  '),1,2)
                                     AS SVC_PROC1_MODF1
     ,SUBSTR(COALESCE(A.MODIFIER_TWO, '  '),1,2)
                                     AS SVC_PROC1_MODF2
     ,SUBSTR(COALESCE(A.MODIFIER_THREE, '  '),1,2)
                                     AS SVC_PROC1_MODF3
     ,SUBSTR(COALESCE(A.MODIFIER_FOUR, '  '),1,2)
                                     AS SVC_PROC1_MODF4
     ,CASE WHEN CLP_CLM_STATUS_CD = '22'
					           THEN 0-CHARGE_AMOUNT
											ELSE CHARGE_AMOUNT
						END                            AS SVC_ORGLI_PRVDR_PYMT
     ,CAST((A.CHARGE_AMOUNT/TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
					       *TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) AS NUMBER(10,2))
					                                AS SVC_ORGLI_PRVDR_PYMT
     ,' '                            AS SVC_NTL_BILNG_REV_CD
     ,' '                            AS SVC_UNTS_SVC_PD_CNT
     ,' '                            AS SVC_PROC2_SVC_ID_QLFR
     ,' '                            AS SVC_PROC2_CD
     ,' '                            AS SVC_PROC2_MODF1
     ,' '                            AS SVC_PROC2_MODF2
     ,' '                            AS SVC_PROC2_MODF3
     ,' '                            AS SVC_PROC2_MODF4
     ,' '                            AS SVC_PROC2_CD_DESC
     ,' '                            AS SVC_ORG_UNTS_SVC_CNT
     ,CASE WHEN INSTR(A.TRANSACTION_LIST,',') = 0
					           THEN SVC_CLARITY_TX_ID
           ELSE TO_CHAR(A.CLM_LN)
      END                            AS SVC_CLARITY_TX_ID 
     ,'CPU'                          AS SVC_TX_ID_MATCH_TYPE
     ,'Y'                            AS SVC_CONTR_PAYOR_IND
     ,'N'                            AS SVC_DUP_PMT_IND
     ,CLP_CLM_SUBMTR_ID              AS SVC_RVSD_INVC_NO
     ,0                              AS SVC_CURRENT_BALANCE
     ,0                              AS SVC_INS_AMOUNT_PAID
     ,0                              AS SVC_INS_AMOUNT_ADJ
     ,'N'                            AS SVC_CRG_IS_VOID_YN
     ,'N'                            AS SVC_PRIOR_DENIAL_YN
     ,TO_NUMBER(TO_CHAR(FROM_SVC_DATE,'YYYYMMDD'))
					                                AS SVC_MULTI_USE_AMOUNT
     ,'X'                            AS SVC_SCENARIO
     ,'CPU'                          AS SVC_INCL_RSN_CD
     ,'   '                          AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD          = 'CPU'
INNER JOIN
      INV_CLM_LN_ADDL    A
ON    A.INVOICE_NUM     		   		= CLP_CLM_SUBMTR_ID
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT DISTINCT
      SVC_ISA_FILE_ID        AS SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO      AS SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO          AS SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO          AS SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO     AS SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO             AS SVC_SEQ_NO
     ,1                      AS SVC_DTM_SEQ_NO
   	 ,1                      AS SVC_DTM_EPP_GEN_SEQ
     ,'472'                  AS SVC_DTM_DTTM_QLFR
     ,TO_CHAR(CAST(SVC_MULTI_USE_AMOUNT AS INTEGER))
					                        AS SVC_DTM_DATE
     ,' '                    AS SVC_DTM_TIME
     ,' '                    AS SVC_DTM_TIME_CD
     ,' '                    AS SVC_DTM_DTTM_PD_FMT_QLFR
     ,' '                    AS SVC_DTM_DTTM_PD
   	 ,'CPU'                  AS SVC_DTM_INCL_RSN_CD
   	 ,'   '                  AS SVC_DTM_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'CPU'
  AND SVC_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD         = '   '
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,DENSE_RANK()
       OVER ( PARTITION BY  SVC_ISA_FILE_ID
                           ,SVC_GS_GRP_SEQ_NO
                           ,SVC_ST_SEQ_NO
                           ,SVC_LX_SEQ_NO
                           ,SVC_CLP_CLM_SEQ_NO
                           ,SVC_SEQ_NO
              ORDER BY      SVC_ISA_FILE_ID
                           ,SVC_GS_GRP_SEQ_NO
                           ,SVC_ST_SEQ_NO
                           ,SVC_LX_SEQ_NO
                           ,SVC_CLP_CLM_SEQ_NO
                           ,SVC_SEQ_NO
                           ,SVC_CAS_CLM_ADJ_GRP_CD1
                           ,SVC_CAS_CLM_ADJ_RSN_CD )
                           +COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)
                                       FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                                       WHERE  CC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
                                         AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
                                         AND  CC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
                                         AND  CC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
                                         AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
                                         AND  CC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO ),1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
					,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD   AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,SUM(SVC_CAS_CLM_ADJ_AMT) AS SVC_CAS_CLM_ADJ_AMT1
     ,SUM(SVC_CAS_CLM_ADJ_QTY) AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY6
     ,'CPU'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,RTRIM(SVC_CAS_CLM_ADJ_GRP_CD1) AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD1) AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD2) AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD3) AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD4) AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD5) AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD6) AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,SVC_CAS_CLM_ADJ_AMT1
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY1),'0')) AS SVC_CAS_CLM_ADJ_QTY1
     ,SVC_CAS_CLM_ADJ_AMT2
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY2),'0')) AS SVC_CAS_CLM_ADJ_QTY2
     ,SVC_CAS_CLM_ADJ_AMT3
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY3),'0')) AS SVC_CAS_CLM_ADJ_QTY3
     ,SVC_CAS_CLM_ADJ_AMT4
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY4),'0')) AS SVC_CAS_CLM_ADJ_QTY4
     ,SVC_CAS_CLM_ADJ_AMT5
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY5),'0')) AS SVC_CAS_CLM_ADJ_QTY5
     ,SVC_CAS_CLM_ADJ_AMT6
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY6),'0')) AS SVC_CAS_CLM_ADJ_QTY6
FROM
 
(
SELECT DISTINCT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD1
     ,CAST((TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))/TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
					      *TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0')) AS NUMBER(10,2))
												                   AS SVC_CAS_CLM_ADJ_AMT1
     ,SVC_CAS_CLM_ADJ_QTY1
     ,SVC_CAS_CLM_ADJ_RSN_CD2
     ,CAST((TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))/TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
					      *TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0')) AS NUMBER(10,2))
											                    AS SVC_CAS_CLM_ADJ_AMT2
     ,SVC_CAS_CLM_ADJ_QTY2
     ,SVC_CAS_CLM_ADJ_RSN_CD3
     ,CAST((TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))/TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
					      *TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0')) AS NUMBER(10,2))
											                    AS SVC_CAS_CLM_ADJ_AMT3
     ,SVC_CAS_CLM_ADJ_QTY3
     ,SVC_CAS_CLM_ADJ_RSN_CD4
     ,CAST((TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))/TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
					      *TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0')) AS NUMBER(10,2))
											                    AS SVC_CAS_CLM_ADJ_AMT4
     ,SVC_CAS_CLM_ADJ_QTY4
     ,SVC_CAS_CLM_ADJ_RSN_CD5
     ,CAST((TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))/TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
					      *TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0')) AS NUMBER(10,2))
											                    AS SVC_CAS_CLM_ADJ_AMT5
     ,SVC_CAS_CLM_ADJ_QTY5
     ,SVC_CAS_CLM_ADJ_RSN_CD6
     ,CAST((TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))/TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
					      *TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')) AS NUMBER(10,2))
											                    AS SVC_CAS_CLM_ADJ_AMT6
     ,SVC_CAS_CLM_ADJ_QTY6
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD     = 'CPU'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
  AND S2.SVC_INCL_RSN_CD     = 'CPU'
  AND S2.SVC_EXCL_RSN_CD     = '   '
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
ORDER BY 1,2,3,4
) T1
ORDER BY 1,2,3,4,5,6,7
        )
        UNPIVOT
        ((SVC_CAS_CLM_ADJ_RSN_CD,SVC_CAS_CLM_ADJ_AMT,SVC_CAS_CLM_ADJ_QTY)
               FOR RSN_CD
               IN
               ((SVC_CAS_CLM_ADJ_RSN_CD1,SVC_CAS_CLM_ADJ_AMT1,SVC_CAS_CLM_ADJ_QTY1) AS 1,
                (SVC_CAS_CLM_ADJ_RSN_CD2,SVC_CAS_CLM_ADJ_AMT2,SVC_CAS_CLM_ADJ_QTY2) AS 2,
                (SVC_CAS_CLM_ADJ_RSN_CD3,SVC_CAS_CLM_ADJ_AMT3,SVC_CAS_CLM_ADJ_QTY3) AS 3,
                (SVC_CAS_CLM_ADJ_RSN_CD4,SVC_CAS_CLM_ADJ_AMT4,SVC_CAS_CLM_ADJ_QTY4) AS 4,
                (SVC_CAS_CLM_ADJ_RSN_CD5,SVC_CAS_CLM_ADJ_AMT5,SVC_CAS_CLM_ADJ_QTY5) AS 5,
                (SVC_CAS_CLM_ADJ_RSN_CD6,SVC_CAS_CLM_ADJ_AMT6,SVC_CAS_CLM_ADJ_QTY6) AS 6)
        )
WHERE SVC_CAS_CLM_ADJ_RSN_CD IS NOT NULL
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Adjust SVC payment amount to match combined payment
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
					,OOB_AMOUNT
					,CUR_PMT_AMT
					,NEW_PMT_AMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
                               AS OOB_AMOUNT
     ,SVC_LI_PRVDR_PYMT        AS CUR_PMT_AMT
					,SVC_LI_PRVDR_PYMT+(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
					                          AS NEW_PMT_AMT
     ,DENSE_RANK()
       OVER ( PARTITION BY  SVC_ISA_FILE_ID
                           ,SVC_GS_GRP_SEQ_NO
                           ,SVC_ST_SEQ_NO
                           ,SVC_LX_SEQ_NO
                           ,SVC_CLP_CLM_SEQ_NO
              ORDER BY      SVC_ISA_FILE_ID
                           ,SVC_GS_GRP_SEQ_NO
                           ,SVC_ST_SEQ_NO
                           ,SVC_LX_SEQ_NO
                           ,SVC_CLP_CLM_SEQ_NO
                           ,SVC_SEQ_NO )  AS S_RANK
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,TO_NUMBER(SVC_ORGLI_PRVDR_PYMT) AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(SVC_LI_PRVDR_PYMT)    AS SVC_LI_PRVDR_PYMT
     ,SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')))
                                      AS TOT_SVC_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'CPU'
  AND SVC_EXCL_RSN_CD        = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
) T0
WHERE (SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT) <> 0
ORDER BY 1,2,3,4,5,6
) T1
INNER JOIN
(
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
					,TO_NUMBER(COALESCE(RTRIM(S1.SVC_LI_PRVDR_PYMT),'0'))
					                                       AS PMT_AMT
					,SUM(TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0')))
					                                       AS PRO_RATE_AMT
					,TO_NUMBER(COALESCE(RTRIM(S1.SVC_LI_PRVDR_PYMT),'0'))
					       - SUM(TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0')))
												                                AS PMT_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD     = 'CPU'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
  AND S2.SVC_INCL_RSN_CD     = 'CPU'
  AND S2.SVC_EXCL_RSN_CD     = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,TO_NUMBER(COALESCE(RTRIM(S1.SVC_LI_PRVDR_PYMT),'0'))
HAVING
      SUM(TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0')))
         <> TO_NUMBER(COALESCE(RTRIM(S1.SVC_LI_PRVDR_PYMT),'0'))
) T2
ON    T2.CLP_ISA_FILE_ID     = T1.SVC_ISA_FILE_ID
  AND T2.CLP_GS_GRP_SEQ_NO   = T1.SVC_GS_GRP_SEQ_NO
  AND T2.CLP_ST_SEQ_NO       = T1.SVC_ST_SEQ_NO
  AND T2.CLP_LX_SEQ_NO       = T1.SVC_LX_SEQ_NO
  AND T2.CLP_CLM_SEQ_NO      = T1.SVC_CLP_CLM_SEQ_NO
		AND T2.PMT_ADJ_AMT         = T1.OOB_AMOUNT
  AND T1.S_RANK              = 1
) ST
ON (  ST.SVC_ISA_FILE_ID     = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO   = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO       = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO       = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO  = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO          = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ     = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_LI_PRVDR_PYMT   = ST.NEW_PMT_AMT
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
-*      CLP_CLM_SUBMTR_ID
      SVC_ISA_FILE_ID          AS SVC_CAS_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO        AS SVC_CAS_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO            AS SVC_CAS_ST_SEQ_NO
     ,SVC_LX_SEQ_NO            AS SVC_CAS_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO       AS SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO               AS SVC_CAS_SVC_SEQ_NO
     ,COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)+1
                 FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                 WHERE  CC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
                   AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
                   AND  CC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
                   AND  CC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
                   AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
                   AND  CC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
                   AND  CC2.SVC_CAS_EXCL_RSN_CD    = '   ' ), 1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,'OA'                     AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,'23'                     AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
                               AS SVC_CAS_CLM_ADJ_AMT1
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY6
     ,'CPU'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,CLP_CLM_SUBMTR_ID
     ,TO_NUMBER(SVC_ORGLI_PRVDR_PYMT) AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(SVC_LI_PRVDR_PYMT)    AS SVC_LI_PRVDR_PYMT
     ,SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')))
                                      AS TOT_SVC_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'CPU'
  AND SVC_EXCL_RSN_CD        = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,CLP_CLM_SUBMTR_ID
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
)
WHERE (SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT) <> 0
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
