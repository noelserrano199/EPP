-******************************************************************************-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT  /*+ NOPARALLEL ORDERED NO_UNNEST */
      T0.SVC_ISA_FILE_ID
     ,T0.SVC_GS_GRP_SEQ_NO
     ,T0.SVC_ST_SEQ_NO
     ,T0.SVC_LX_SEQ_NO
     ,T0.SVC_CLP_CLM_SEQ_NO
     ,T0.SVC_SEQ_NO
     ,T0.SVC_EPP_GEN_SEQ
     ,TO_CHAR(TX_ID)                             AS CLARITY_TX_ID
     ,CRG_IS_VOID_YN
     ,T0.CLP_CLM_SUBMTR_ID
FROM
(
SELECT 
      RTRIM(CLP_CLM_SUBMTR_ID)                   AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_PROC1_CD)                        AS SVC_PROC1_CD
     ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')          AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                                 AS SVC_ORGLI_PRVDR_PYMT
     ,RANK()
      OVER ( PARTITION BY RTRIM(CLP_CLM_SUBMTR_ID)
                         ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
                         ,RTRIM(SVC_PROC1_CD)
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                         ,RTRIM(SVC_CLP_CLM_SEQ_NO)||RTRIM(SVC_SEQ_NO)) AS T_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_CLARITY_TX_ID
     ,SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND CLP_EXCL_RSN_CD            = '   '
-*
-*  AND RTRIM(CLP_CLM_SUBMTR_ID)   = 'P1055468490'
-*
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID)   = '0'
  AND SVC_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD             = '   '
ORDER BY 1,2,3,4,5
) T0
INNER JOIN
(
SELECT 
      CLP_CLM_SUBMTR_ID
	 ,SVC_PROC1_CD
	 ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,RANK()OVER ( PARTITION BY CLP_CLM_SUBMTR_ID
                               ,SVC_DTM_DATE
                               ,SVC_PROC1_CD
                               ,SVC_ORGLI_PRVDR_PYMT
                    ORDER BY    CLP_CLM_SUBMTR_ID
                               ,SVC_DTM_DATE
                               ,SVC_PROC1_CD
                               ,SVC_ORGLI_PRVDR_PYMT
                               ,A.TX_ID )      AS T_RANK
     ,CASE WHEN B.VOID_DATE IS NULL
                THEN 'N'
           ELSE 'Y'             END            AS CRG_IS_VOID_YN
     ,A.TX_ID
FROM
(
SELECT 
      RTRIM(CLP_CLM_SUBMTR_ID)                 AS CLP_CLM_SUBMTR_ID
 	 ,RTRIM(SVC_PROC1_CD)                      AS SVC_PROC1_CD
	 ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                               AS SVC_LI_PRVDR_PYMT
     ,IFCT_FILE_PAYER
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID            = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)  IN('ANTHEMBLUECROSS','CIGNA','MEDICARE','MEDICAL')
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO           = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD         = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
-*
-*  AND RTRIM(CLP_CLM_SUBMTR_ID)   = 'P1055468490'
-*
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID)= '0'
  AND SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD     = '   '
WHERE ST_EXCL_RSN_CD          = '   '
ORDER BY 1,2,3,4
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER        = CLP_CLM_SUBMTR_ID
  AND A.ORIG_SERVICE_DATE     = SVC_DTM_DATE
  AND A.DETAIL_TYPE           = '50'
  AND (   A.ORIG_PRICE        = SVC_ORGLI_PRVDR_PYMT
       OR A.BILL_CLAIM_AMOUNT = SVC_ORGLI_PRVDR_PYMT )
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL S2
      WHERE  TO_NUMBER(S2.SVC_CLARITY_TX_ID) = A.TX_ID )
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                 = A.TX_ID
INNER JOIN
      CLARITY_EPM C
ON    C.PAYOR_ID              = A.CUR_PAYOR_ID
  AND C.EPM_ALT_IDFR          IN('BC','CPUS','MCAL','MCR')
INNER JOIN
      CLARITY_EAP_ALTCOD AC
ON    AC.PROC_ID              = A.PROC_ID
  AND AC.EPM_ALT_IDFR         = C.EPM_ALT_IDFR
  AND AC.PROC_ALT_IDFR        = SVC_PROC1_CD
GROUP BY
      CLP_CLM_SUBMTR_ID
 	 ,SVC_PROC1_CD
	 ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,A.TX_ID
     ,B.VOID_DATE
ORDER BY 1,2,3,4,5
) T2
ON    T2.CLP_CLM_SUBMTR_ID    = T0.CLP_CLM_SUBMTR_ID
  AND T2.SVC_PROC1_CD         = T0.SVC_PROC1_CD
  AND T2.SVC_DTM_DATE         = T0.SVC_DTM_DATE
  AND T2.SVC_ORGLI_PRVDR_PYMT = T0.SVC_ORGLI_PRVDR_PYMT
  AND T2.T_RANK               = T0.T_RANK
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID      = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO    = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO        = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO        = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO   = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO           = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ      = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_CLARITY_TX_ID    = ST.CLARITY_TX_ID
     ,UT.SVC_TX_ID_MATCH_TYPE = 'MP6'
     ,UT.SVC_CRG_IS_VOID_YN   = ST.CRG_IS_VOID_YN
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
