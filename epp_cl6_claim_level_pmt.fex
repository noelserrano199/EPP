-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  '&PAYER.EVAL' NE 'ANTHEMBLUECROSS'
-AND '&PAYER.EVAL' NE 'MEDICAL'
-AND '&PAYER.EVAL' NE 'BOAMIXED'
-AND '&PAYER.EVAL' NE 'UNITEDHEALTHCARE'
-AND '&PAYER.EVAL' NE 'AARPUHC' THEN GOTO THE_END;
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL - Mark claims as excluded when only one charge on
-TYPE &NOWTIME.EVAL &STEP.EVAL - the invoice
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_TOT_CLM_CRG_AMT
     ,A.ORIG_PRICE         AS ORIG_PRICE
     ,B.OUTSTANDING_AMT    AS OUTSTANDING_AMT
FROM
(
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,RTRIM(CLP_CLM_SUBMTR_ID)             AS CLP_CLM_SUBMTR_ID
     ,RTRIM(CLP_CLM_STATUS_CD)             AS CLP_CLM_STATUS_CD
     ,TO_NUMBER(CLP_TOT_CLM_CRG_AMT)       AS CLP_TOT_CLM_CRG_AMT
     ,TO_DATE(D1.CLP_DTM_DATE, 'YYYYMMDD') AS FIRST_DOS
     ,TO_DATE(D2.CLP_DTM_DATE, 'YYYYMMDD') AS LAST_DOS
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_CL_TX_MATCH_TYPE      = '   '
  AND RTRIM(CLP_CLM_STATUS_CD)  <> '22'
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND CLP_INVC_CRG_COUNT        = 1
  AND CLP_EXCL_RSN_CD           = '   '
  AND NOT EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD     = '   ' )
INNER JOIN
      &CLP_DTM.EVAL&CLP_DTM_TBL.EVAL D1
ON    D1.CLP_DTM_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND D1.CLP_DTM_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND D1.CLP_DTM_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND D1.CLP_DTM_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND D1.CLP_DTM_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND D1.CLP_DTM_DTTM_QLFR      = '232'
  AND D1.CLP_DTM_EXCL_RSN_CD    = '   '
LEFT OUTER JOIN
      &CLP_DTM.EVAL&CLP_DTM_TBL.EVAL D2
ON    D2.CLP_DTM_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND D2.CLP_DTM_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND D2.CLP_DTM_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND D2.CLP_DTM_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND D2.CLP_DTM_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND D2.CLP_DTM_DTTM_QLFR      = '233'
  AND D2.CLP_DTM_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1
)
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER          = CLP_CLM_SUBMTR_ID
  AND A.DETAIL_TYPE             = 50
  AND ORIG_PRICE                IS NOT NULL
  AND (   ORIG_SERVICE_DATE     = FIRST_DOS
     OR ( ORIG_SERVICE_DATE     BETWEEN FIRST_DOS
                                    AND LAST_DOS ))
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID = A.TX_ID
ORDER BY 3,4,5,6,7,8
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_CL_TX_MATCH_TYPE   = 'CL6'
     ,UT.CLP_ORIG_PRICE         = ST.ORIG_PRICE
     ,UT.CLP_CURRENT_BALANCE    = ST.OUTSTANDING_AMT
     ,UT.CLP_EXCL_RSN_CD        = 'CL6'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &CLP.EVAL&CLP_TBL.EVAL
WHERE  CLP_EXCL_RSN_CD  = 'CL6'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Exclude CLP_CAS segs which belong to excluded CLPs
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
       CLP_CAS_ISA_FILE_ID
      ,CLP_CAS_GS_GRP_SEQ_NO
      ,CLP_CAS_ST_SEQ_NO
      ,CLP_CAS_LX_SEQ_NO
      ,CLP_CAS_CLP_CLM_SEQ_NO
      ,CLP_CAS_SEQ_NO
      ,CLP_CAS_EPP_GEN_SEQ
      ,CLP_CL_TX_MATCH_TYPE
FROM  &CLP.EVAL&CLP_TBL.EVAL
INNER JOIN
      &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
ON    CLP_CAS_ISA_FILE_ID       = CLP_ISA_FILE_ID
  AND CLP_CAS_GS_GRP_SEQ_NO     = CLP_GS_GRP_SEQ_NO
  AND CLP_CAS_ST_SEQ_NO         = CLP_ST_SEQ_NO
  AND CLP_CAS_LX_SEQ_NO         = CLP_LX_SEQ_NO
  AND CLP_CAS_CLP_CLM_SEQ_NO    = CLP_CLM_SEQ_NO
  AND CLP_CAS_EXCL_RSN_CD       = '   '
WHERE CLP_EXCL_RSN_CD           = 'CL6'
ORDER BY 1,2,3,4,5,6,7
) ST
ON
(     ST.CLP_CAS_ISA_FILE_ID    = UT.CLP_CAS_ISA_FILE_ID
  AND ST.CLP_CAS_GS_GRP_SEQ_NO  = UT.CLP_CAS_GS_GRP_SEQ_NO
  AND ST.CLP_CAS_ST_SEQ_NO      = UT.CLP_CAS_ST_SEQ_NO
  AND ST.CLP_CAS_LX_SEQ_NO      = UT.CLP_CAS_LX_SEQ_NO
  AND ST.CLP_CAS_CLP_CLM_SEQ_NO = UT.CLP_CAS_CLP_CLM_SEQ_NO
  AND ST.CLP_CAS_SEQ_NO         = UT.CLP_CAS_SEQ_NO
  AND ST.CLP_CAS_EPP_GEN_SEQ    = UT.CLP_CAS_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_CAS_EXCL_RSN_CD    = 'CL6'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC segements
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID                AS SVC_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO              AS SVC_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO                  AS SVC_ST_SEQ_NO
     ,CLP_LX_SEQ_NO                  AS SVC_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO                 AS SVC_CLP_CLM_SEQ_NO
     ,1                              AS SVC_SEQ_NO
     ,1                              AS SVC_EPP_GEN_SEQ
     ,':'                            AS SVC_COMP_SEPERATOR
     ,'HC'                           AS SVC_PROC1_SVC_ID_QLFR
     ,A.CPT_CODE                     AS SVC_PROC1_CD
     ,SUBSTR(COALESCE(A.MODIFIER_ONE, '  '),1,2)
                                     AS SVC_PROC1_MODF1
     ,SUBSTR(COALESCE(A.MODIFIER_TWO, '  '),1,2)
                                     AS SVC_PROC1_MODF2
     ,SUBSTR(COALESCE(A.MODIFIER_THREE, '  '),1,2)
                                     AS SVC_PROC1_MODF3
     ,SUBSTR(COALESCE(A.MODIFIER_FOUR, '  '),1,2)
                                     AS SVC_PROC1_MODF4
     ,CAST(A.ORIG_PRICE AS NUMBER(10,2))
                                     AS SVC_ORGLI_PRVDR_PYMT
     ,CAST(CLP_CLM_PYMT_AMT AS NUMBER(10,2))
                                     AS SVC_LI_PRVDR_PYMT
     ,' '                            AS SVC_NTL_BILNG_REV_CD
     ,' '                            AS SVC_UNTS_SVC_PD_CNT
     ,' '                            AS SVC_PROC2_SVC_ID_QLFR
     ,' '                            AS SVC_PROC2_CD
     ,' '                            AS SVC_PROC2_MODF1
     ,' '                            AS SVC_PROC2_MODF2
     ,' '                            AS SVC_PROC2_MODF3
     ,' '                            AS SVC_PROC2_MODF4
     ,' '                            AS SVC_PROC2_CD_DESC
     ,' '                            AS SVC_ORG_UNTS_SVC_CNT
     ,A.TX_ID                        AS SVC_CLARITY_TX_ID
     ,'CL6'                          AS SVC_TX_ID_MATCH_TYPE
     ,'Y'                            AS SVC_CONTR_PAYOR_IND
     ,'N'                            AS SVC_DUP_PMT_IND
     ,'N'                            AS SVC_RVSD_INVC_NO
     ,B.OUTSTANDING_AMT              AS SVC_CURRENT_BALANCE
     ,B.TOTAL_MTCH_INS_AMT           AS SVC_INS_AMOUNT_PAID
     ,B.TOTAL_MTCH_INS_ADJ           AS SVC_INS_AMOUNT_ADJ
     ,CASE WHEN B.VOID_DATE IS NULL
                THEN 'N'
           ELSE 'Y'            END   AS SVC_CRG_IS_VOID_YN
     ,'N'                            AS SVC_PRIOR_DENIAL_YN
     ,0                              AS SVC_MULTI_USE_AMOUNT
     ,'X'                            AS SVC_SCENARIO
     ,'CL6'                          AS SVC_INCL_RSN_CD
     ,'   '                          AS SVC_EXCL_RSN_CD
FROM
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)       AS CLP_CLM_SUBMTR_ID
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,TO_NUMBER(CLP_TOT_CLM_CRG_AMT) AS CLP_TOT_CLM_CRG_AMT
     ,TO_NUMBER(CLP_CLM_PYMT_AMT)    AS CLP_CLM_PYMT_AMT
     ,CLP_CURRENT_BALANCE
     ,TO_DATE(D1.CLP_DTM_DATE, 'YYYYMMDD') AS FIRST_DOS
     ,TO_DATE(D2.CLP_DTM_DATE, 'YYYYMMDD') AS LAST_DOS
FROM  &CLP.EVAL&CLP_TBL.EVAL
INNER JOIN
      &CLP_DTM.EVAL&CLP_DTM_TBL.EVAL D1
ON    D1.CLP_DTM_ISA_FILE_ID      = CLP_ISA_FILE_ID
  AND D1.CLP_DTM_GS_GRP_SEQ_NO    = CLP_GS_GRP_SEQ_NO
  AND D1.CLP_DTM_ST_SEQ_NO        = CLP_ST_SEQ_NO
  AND D1.CLP_DTM_LX_SEQ_NO        = CLP_LX_SEQ_NO
  AND D1.CLP_DTM_CLP_CLM_SEQ_NO   = CLP_CLM_SEQ_NO
  AND D1.CLP_DTM_DTTM_QLFR        = '232'
  AND D1.CLP_DTM_EXCL_RSN_CD      = '   '
LEFT OUTER JOIN
      &CLP_DTM.EVAL&CLP_DTM_TBL.EVAL D2
ON    D2.CLP_DTM_ISA_FILE_ID      = CLP_ISA_FILE_ID
  AND D2.CLP_DTM_GS_GRP_SEQ_NO    = CLP_GS_GRP_SEQ_NO
  AND D2.CLP_DTM_ST_SEQ_NO        = CLP_ST_SEQ_NO
  AND D2.CLP_DTM_LX_SEQ_NO        = CLP_LX_SEQ_NO
  AND D2.CLP_DTM_CLP_CLM_SEQ_NO   = CLP_CLM_SEQ_NO
  AND D2.CLP_DTM_DTTM_QLFR        = '233'
  AND D2.CLP_DTM_EXCL_RSN_CD      = '   '
WHERE CLP_CL_TX_MATCH_TYPE        = 'CL6'
  AND RTRIM(CLP_CLM_STATUS_CD)   <> '22'
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND CLP_INVC_CRG_COUNT          = 1
  AND CLP_EXCL_RSN_CD             = 'CL6'
)
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER            = CLP_CLM_SUBMTR_ID
  AND A.DETAIL_TYPE               = 50
  AND ORIG_PRICE                  IS NOT NULL
  AND (   ORIG_SERVICE_DATE       = FIRST_DOS
     OR ( ORIG_SERVICE_DATE       BETWEEN FIRST_DOS
                                      AND LAST_DOS ))
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID = A.TX_ID
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Adjust SVC payment amount to match Claim total
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                            AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,'CL6'                 AS CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'CL6'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO      = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD    = 'CL6'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD    = 'CL6'
  AND SVC_EXCL_RSN_CD    = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Insert one new SVC_DTM seg for each SVC seg inserted in Step004
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID        AS SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO      AS SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO          AS SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO          AS SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO     AS SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO             AS SVC_SEQ_NO
     ,1                      AS SVC_DTM_SEQ_NO
	 ,1                      AS SVC_DTM_EPP_GEN_SEQ
     ,'472'                  AS SVC_DTM_DTTM_QLFR
     ,TO_CHAR(ORIG_SERVICE_DATE, 'YYYYMMDD')
                             AS SVC_DTM_DATE
     ,' '                    AS SVC_DTM_TIME
     ,' '                    AS SVC_DTM_TIME_CD
     ,' '                    AS SVC_DTM_DTTM_PD_FMT_QLFR
     ,' '                    AS SVC_DTM_DTTM_PD
	 ,'CL6'                  AS SVC_DTM_INCL_RSN_CD
	 ,'   '                  AS SVC_DTM_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.TX_ID                = SVC_CLARITY_TX_ID
  AND A.DETAIL_TYPE          = 1
WHERE SVC_INCL_RSN_CD        = 'CL6'
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC_CAS segments
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_CAS_ISA_FILE_ID      AS SVC_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO    AS SVC_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO        AS SVC_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO        AS SVC_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO   AS SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO               AS SVC_CAS_SEQ_NO
     ,CLP_CAS_SEQ_NO           AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,CLP_CAS_CLM_ADJ_GRP_CD1  AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,CLP_CAS_CLM_ADJ_RSN_CD1  AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,CLP_CAS_CLM_ADJ_AMT1     AS SVC_CAS_CLM_ADJ_AMT1
     ,CLP_CAS_CLM_ADJ_QTY1     AS SVC_CAS_CLM_ADJ_QTY1
     ,CLP_CAS_CLM_ADJ_RSN_CD2  AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,CLP_CAS_CLM_ADJ_AMT2     AS SVC_CAS_CLM_ADJ_AMT2
     ,CLP_CAS_CLM_ADJ_QTY2     AS SVC_CAS_CLM_ADJ_QTY2
     ,CLP_CAS_CLM_ADJ_RSN_CD3  AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,CLP_CAS_CLM_ADJ_AMT3     AS SVC_CAS_CLM_ADJ_AMT3
     ,CLP_CAS_CLM_ADJ_QTY3     AS SVC_CAS_CLM_ADJ_QTY3
     ,CLP_CAS_CLM_ADJ_RSN_CD4  AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,CLP_CAS_CLM_ADJ_AMT4     AS SVC_CAS_CLM_ADJ_AMT4
     ,CLP_CAS_CLM_ADJ_QTY4     AS SVC_CAS_CLM_ADJ_QTY4
     ,CLP_CAS_CLM_ADJ_RSN_CD5  AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,CLP_CAS_CLM_ADJ_AMT5     AS SVC_CAS_CLM_ADJ_AMT5
     ,CLP_CAS_CLM_ADJ_QTY5     AS SVC_CAS_CLM_ADJ_QTY5
     ,CLP_CAS_CLM_ADJ_RSN_CD6  AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,CLP_CAS_CLM_ADJ_AMT6     AS SVC_CAS_CLM_ADJ_AMT6
     ,CLP_CAS_CLM_ADJ_QTY6     AS SVC_CAS_CLM_ADJ_QTY6
     ,CLP_CL_TX_MATCH_TYPE     AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM  &CLP.EVAL&CLP_TBL.EVAL
INNER JOIN
      &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
ON    CLP_CAS_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND CLP_CAS_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND CLP_CAS_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND CLP_CAS_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND CLP_CAS_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND CLP_CAS_EXCL_RSN_CD    = 'CL6'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'CL6'
  AND SVC_EXCL_RSN_CD        = '   '
WHERE CLP_INCL_RSN_CD        = 'CL6'
  AND NOT
    ( CLP_CAS_CLM_ADJ_GRP_CD1        = 'CO'
  AND RTRIM(CLP_CAS_CLM_ADJ_RSN_CD1) = '45'
  AND TO_NUMBER(COALESCE(RTRIM(CLP_CAS_CLM_ADJ_AMT1),'0'))
        = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
ORDER BY 1,2,3,4,5,6,7,8
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID          AS SVC_CAS_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO        AS SVC_CAS_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO            AS SVC_CAS_ST_SEQ_NO
     ,SVC_LX_SEQ_NO            AS SVC_CAS_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO       AS SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO               AS SVC_CAS_SVC_SEQ_NO
     ,COALESCE(( SELECT MAX(SVC_CAS_SEQ_NO)+1
                 FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL CC2
                 WHERE  CC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
                   AND  CC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
                   AND  CC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
                   AND  CC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
                   AND  CC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
                   AND  CC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
                   AND  CC2.SVC_CAS_EXCL_RSN_CD    = '   ' ), 1)
                               AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,'OA'                     AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,'23'                     AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,(SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT)
                               AS SVC_CAS_CLM_ADJ_AMT1
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                      AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                      AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                      AS SVC_CAS_CLM_ADJ_QTY6
     ,'CL6'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,TO_NUMBER(SVC_ORGLI_PRVDR_PYMT) AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(SVC_LI_PRVDR_PYMT)    AS SVC_LI_PRVDR_PYMT
     ,SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
          +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')))
                                      AS TOT_SVC_ADJ_AMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_CL_TX_MATCH_TYPE   = 'CL6'
  AND CLP_INCL_RSN_CD        = 'CL6'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD        = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
-*HAVING SUM( TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
-*            +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))
-*            +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))
-*            +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))
-*            +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))
-*            +TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0'))) <> 0
)
WHERE (SVC_ORGLI_PRVDR_PYMT-SVC_LI_PRVDR_PYMT-TOT_SVC_ADJ_AMT) <> 0
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
