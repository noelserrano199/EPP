-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-TYPE Only BLUESHIELD Files
-TYPE *************************************************************************
-IF  '&PAYER.EVAL' NE 'BLUESHIELD' THEN GOTO THE_END;
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL - Mark 2nd occurence of payments to be combined
-TYPE &NOWTIME.EVAL &STEP.EVAL - as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      S1.SVC_ISA_FILE_ID
     ,S1.SVC_GS_GRP_SEQ_NO
     ,S1.SVC_ST_SEQ_NO
     ,S1.SVC_LX_SEQ_NO
     ,S1.SVC_CLP_CLM_SEQ_NO
     ,S1.SVC_SEQ_NO
     ,S1.SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,A.TX_ID
FROM  &IFCT.EVAL&IFCT_TBL.EVAL
INNER JOIN
      &ST.EVAL&ST_TBL.EVAL
ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
  AND ST_EXCL_RSN_CD            = '   '
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  INV_CLM_LN_ADDL
      WHERE INVOICE_NUM         = RTRIM(CLP_CLM_SUBMTR_ID)
        AND PROC_OR_REV_CODE    = RTRIM(S1.SVC_PROC1_CD)
        AND FROM_SVC_DATE       = TO_DATE(D1.SVC_DTM_DATE, 'yyyymmdd')
        AND CHARGE_AMOUNT       = ABS(TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))))
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO             > S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
  AND S2.SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_DATE           = D1.SVC_DTM_DATE
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER          = RTRIM(CLP_CLM_SUBMTR_ID)
  AND A.ORIG_SERVICE_DATE       = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
  AND A.CPT_CODE                = RTRIM(S1.SVC_PROC1_CD)
  AND A.DETAIL_TYPE             = 50
  AND A.ORIG_PRICE             >= ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
  AND A.ORIG_PRICE             >= ABS( TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
  AND A.ORIG_PRICE              = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                        +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
INNER JOIN
      ARPB_TRANSACTIONS C
ON    C.TX_ID                    = A.TX_ID
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN B
      WHERE  B.INVOICE_NUMBER    = RTRIM(CLP_CLM_SUBMTR_ID)
        AND  B.DETAIL_TYPE       = 50
        AND  B.ORIG_SERVICE_DATE = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND  B.CPT_CODE          = RTRIM(S1.SVC_PROC1_CD)
        AND  B.ORIG_PRICE        = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))))
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN B
      WHERE  B.INVOICE_NUMBER    = RTRIM(CLP_CLM_SUBMTR_ID)
        AND  B.DETAIL_TYPE       = 50
        AND  B.ORIG_SERVICE_DATE = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND  B.CPT_CODE          = RTRIM(S1.SVC_PROC1_CD)
        AND  B.ORIG_PRICE       >= ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.ORIG_PRICE       >= ABS( TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.ORIG_PRICE        = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                       +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.TX_ID            <> A.TX_ID )
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID        = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO      = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO          = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO          = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO     = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO             = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ        = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN UPDATE
SET   UT.SVC_CLARITY_TX_ID      = ST.TX_ID
     ,UT.SVC_TX_ID_MATCH_TYPE   = 'CT2'
     ,UT.SVC_EXCL_RSN_CD        = 'CT2'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'CT2'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL - Mark 2nd occurence of payments to be combined
-TYPE &NOWTIME.EVAL &STEP.EVAL - as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      T1.SVC_ISA_FILE_ID
     ,T1.SVC_GS_GRP_SEQ_NO
     ,T1.SVC_ST_SEQ_NO
     ,T1.SVC_LX_SEQ_NO
     ,T1.SVC_CLP_CLM_SEQ_NO
     ,T1.SVC_SEQ_NO
     ,T1.SVC_EPP_GEN_SEQ
     ,T1.CLP_CLM_SUBMTR_ID
     ,T1.TX_ID
FROM
(
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,S2.SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,A.TX_ID
FROM  &IFCT.EVAL&IFCT_TBL.EVAL
INNER JOIN
      &ST.EVAL&ST_TBL.EVAL
ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
  AND ST_EXCL_RSN_CD            = '   '
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD        = 'CT2'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO             < S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
  AND S2.SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_DATE           = D1.SVC_DTM_DATE
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER          = RTRIM(CLP_CLM_SUBMTR_ID)
  AND A.ORIG_SERVICE_DATE       = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
  AND A.CPT_CODE                = RTRIM(S1.SVC_PROC1_CD)
  AND A.DETAIL_TYPE             = 50
  AND A.ORIG_PRICE             >= ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
  AND A.ORIG_PRICE             >= ABS( TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
  AND A.ORIG_PRICE              = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                        +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
INNER JOIN
      ARPB_TRANSACTIONS C
ON    C.TX_ID                    = A.TX_ID
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN B
      WHERE  B.INVOICE_NUMBER    = RTRIM(CLP_CLM_SUBMTR_ID)
        AND  B.DETAIL_TYPE       = 50
        AND  B.ORIG_SERVICE_DATE = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND  B.CPT_CODE          = RTRIM(S1.SVC_PROC1_CD)
        AND  B.ORIG_PRICE        = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))))
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN B
      WHERE  B.INVOICE_NUMBER    = RTRIM(CLP_CLM_SUBMTR_ID)
        AND  B.DETAIL_TYPE       = 50
        AND  B.ORIG_SERVICE_DATE = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND  B.CPT_CODE          = RTRIM(S1.SVC_PROC1_CD)
        AND  B.ORIG_PRICE       >= ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.ORIG_PRICE       >= ABS( TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.ORIG_PRICE        = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                       +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.TX_ID            <> A.TX_ID )
ORDER BY 1,2,3,4,5,6,7
) T1
INNER JOIN
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,MIN(S2.SVC_SEQ_NO)     AS SVC_SEQ_NO
FROM  &IFCT.EVAL&IFCT_TBL.EVAL
INNER JOIN
      &ST.EVAL&ST_TBL.EVAL
ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
  AND ST_EXCL_RSN_CD            = '   '
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD        = 'CT2'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO             < S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
  AND S2.SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_DATE           = D1.SVC_DTM_DATE
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER          = RTRIM(CLP_CLM_SUBMTR_ID)
  AND A.ORIG_SERVICE_DATE       = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
  AND A.CPT_CODE                = RTRIM(S1.SVC_PROC1_CD)
  AND A.DETAIL_TYPE             = 50
  AND A.ORIG_PRICE             >= ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
  AND A.ORIG_PRICE             >= ABS( TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
  AND A.ORIG_PRICE              = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                        +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
INNER JOIN
      ARPB_TRANSACTIONS C
ON    C.TX_ID                    = A.TX_ID
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN B
      WHERE  B.INVOICE_NUMBER    = RTRIM(CLP_CLM_SUBMTR_ID)
        AND  B.DETAIL_TYPE       = 50
        AND  B.ORIG_SERVICE_DATE = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND  B.CPT_CODE          = RTRIM(S1.SVC_PROC1_CD)
        AND  B.ORIG_PRICE        = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))))
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_TDL_TRAN B
      WHERE  B.INVOICE_NUMBER    = RTRIM(CLP_CLM_SUBMTR_ID)
        AND  B.DETAIL_TYPE       = 50
        AND  B.ORIG_SERVICE_DATE = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
        AND  B.CPT_CODE          = RTRIM(S1.SVC_PROC1_CD)
        AND  B.ORIG_PRICE       >= ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.ORIG_PRICE       >= ABS( TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.ORIG_PRICE        = ABS( TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
                                       +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
        AND  B.TX_ID            <> A.TX_ID )
GROUP BY
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
ORDER BY 1,2,3,4,5
) T2
ON    T2.SVC_ISA_FILE_ID        = T1.SVC_ISA_FILE_ID
  AND T2.SVC_GS_GRP_SEQ_NO      = T1.SVC_GS_GRP_SEQ_NO
  AND T2.SVC_ST_SEQ_NO          = T1.SVC_ST_SEQ_NO
  AND T2.SVC_LX_SEQ_NO          = T1.SVC_LX_SEQ_NO
  AND T2.SVC_CLP_CLM_SEQ_NO     = T1.SVC_CLP_CLM_SEQ_NO
  AND T2.SVC_SEQ_NO             = T1.SVC_SEQ_NO
) ST
ON  ( ST.SVC_ISA_FILE_ID        = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO      = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO          = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO          = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO     = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO             = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ        = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN UPDATE
SET   UT.SVC_CLARITY_TX_ID      = ST.TX_ID
     ,UT.SVC_TX_ID_MATCH_TYPE   = 'CT2'
     ,UT.SVC_EXCL_RSN_CD        = 'CT2'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT
-*      CLP_CLM_SUBMTR_ID
      S1.SVC_ISA_FILE_ID
     ,S1.SVC_GS_GRP_SEQ_NO
     ,S1.SVC_ST_SEQ_NO
     ,S1.SVC_LX_SEQ_NO
     ,S1.SVC_CLP_CLM_SEQ_NO
     ,S1.SVC_SEQ_NO
     ,S1.SVC_EPP_GEN_SEQ+1       AS SVC_EPP_GEN_SEQ
     ,S1.SVC_COMP_SEPERATOR
     ,S1.SVC_PROC1_SVC_ID_QLFR
     ,S1.SVC_PROC1_CD
     ,S1.SVC_PROC1_MODF1
     ,S1.SVC_PROC1_MODF2
     ,S1.SVC_PROC1_MODF3
     ,S1.SVC_PROC1_MODF4
     ,TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
       +TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                 AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(S1.SVC_LI_PRVDR_PYMT),'0'))
       +TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))
                                 AS SVC_LI_PRVDR_PYMT
     ,S1.SVC_NTL_BILNG_REV_CD
     ,S1.SVC_UNTS_SVC_PD_CNT
     ,S1.SVC_PROC2_SVC_ID_QLFR
     ,S1.SVC_PROC2_CD
     ,S1.SVC_PROC2_MODF1
     ,S1.SVC_PROC2_MODF2
     ,S1.SVC_PROC2_MODF3
     ,S1.SVC_PROC2_MODF4
     ,S1.SVC_PROC2_CD_DESC
     ,S1.SVC_ORG_UNTS_SVC_CNT
     ,S1.SVC_CLARITY_TX_ID
     ,S1.SVC_TX_ID_MATCH_TYPE
     ,S1.SVC_CONTR_PAYOR_IND
     ,S1.SVC_DUP_PMT_IND
     ,S1.SVC_RVSD_INVC_NO
     ,S1.SVC_CURRENT_BALANCE
     ,S1.SVC_INS_AMOUNT_PAID
     ,S1.SVC_INS_AMOUNT_ADJ
     ,S1.SVC_CRG_IS_VOID_YN
     ,S1.SVC_PRIOR_DENIAL_YN
     ,S1.SVC_MULTI_USE_AMOUNT
     ,S1.SVC_SCENARIO
     ,'CT2'                      AS SVC_INCL_RSN_CD
     ,'   '                      AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
-*INNER JOIN
-*      &IFCT.EVAL&IFCT_TBL.EVAL
-*ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
-*  AND RTRIM(IFCT_FILE_PAYER)    IN('BLUESHIELD')
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    S1.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD        = 'CT2'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO             < S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
  AND S2.SVC_EXCL_RSN_CD        = 'CT2'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_DATE           = D1.SVC_DTM_DATE
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC_CAS segments
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      SVC_CAS_ISA_FILE_ID
     ,SVC_CAS_GS_GRP_SEQ_NO
     ,SVC_CAS_ST_SEQ_NO
     ,SVC_CAS_LX_SEQ_NO
     ,SVC_CAS_CLP_CLM_SEQ_NO
     ,SVC_CAS_SVC_SEQ_NO
     ,MAX_SVC_CAS_SEQ_NO+SVC_CAS_SEQ_NO AS SVC_CAS_SEQ_NO
     ,SVC_CAS_EPP_GEN_SEQ
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD1
     ,SVC_CAS_CLM_ADJ_AMT1
     ,SVC_CAS_CLM_ADJ_QTY1
     ,SVC_CAS_CLM_ADJ_RSN_CD2
     ,SVC_CAS_CLM_ADJ_AMT2
     ,SVC_CAS_CLM_ADJ_QTY2
     ,SVC_CAS_CLM_ADJ_RSN_CD3
     ,SVC_CAS_CLM_ADJ_AMT3
     ,SVC_CAS_CLM_ADJ_QTY3
     ,SVC_CAS_CLM_ADJ_RSN_CD4
     ,SVC_CAS_CLM_ADJ_AMT4
     ,SVC_CAS_CLM_ADJ_QTY4
     ,SVC_CAS_CLM_ADJ_RSN_CD5
     ,SVC_CAS_CLM_ADJ_AMT5
     ,SVC_CAS_CLM_ADJ_QTY5
     ,SVC_CAS_CLM_ADJ_RSN_CD6
     ,SVC_CAS_CLM_ADJ_AMT6
     ,SVC_CAS_CLM_ADJ_QTY6
     ,SVC_CAS_INCL_RSN_CD
     ,SVC_CAS_EXCL_RSN_CD
     ,SVC_CAS_PATIENT_PYMT
FROM
(
SELECT
      S2.SVC_ISA_FILE_ID       AS SVC_CAS_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO     AS SVC_CAS_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO         AS SVC_CAS_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO         AS SVC_CAS_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO    AS SVC_CAS_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO            AS SVC_CAS_SVC_SEQ_NO
     ,SVC_CAS_SEQ_NO           AS SVC_CAS_SEQ_NO
     ,1                        AS SVC_CAS_EPP_GEN_SEQ
     ,SVC_CAS_CLM_ADJ_GRP_CD1  AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD1  AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,SVC_CAS_CLM_ADJ_AMT1     AS SVC_CAS_CLM_ADJ_AMT1
     ,SVC_CAS_CLM_ADJ_QTY1     AS SVC_CAS_CLM_ADJ_QTY1
     ,SVC_CAS_CLM_ADJ_RSN_CD2  AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,SVC_CAS_CLM_ADJ_AMT2     AS SVC_CAS_CLM_ADJ_AMT2
     ,SVC_CAS_CLM_ADJ_QTY2     AS SVC_CAS_CLM_ADJ_QTY2
     ,SVC_CAS_CLM_ADJ_RSN_CD3  AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,SVC_CAS_CLM_ADJ_AMT3     AS SVC_CAS_CLM_ADJ_AMT3
     ,SVC_CAS_CLM_ADJ_QTY3     AS SVC_CAS_CLM_ADJ_QTY3
     ,SVC_CAS_CLM_ADJ_RSN_CD4  AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,SVC_CAS_CLM_ADJ_AMT4     AS SVC_CAS_CLM_ADJ_AMT4
     ,SVC_CAS_CLM_ADJ_QTY4     AS SVC_CAS_CLM_ADJ_QTY4
     ,SVC_CAS_CLM_ADJ_RSN_CD5  AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,SVC_CAS_CLM_ADJ_AMT5     AS SVC_CAS_CLM_ADJ_AMT5
     ,SVC_CAS_CLM_ADJ_QTY5     AS SVC_CAS_CLM_ADJ_QTY5
     ,SVC_CAS_CLM_ADJ_RSN_CD6  AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,SVC_CAS_CLM_ADJ_AMT6     AS SVC_CAS_CLM_ADJ_AMT6
     ,SVC_CAS_CLM_ADJ_QTY6     AS SVC_CAS_CLM_ADJ_QTY6
     ,'CT2'                    AS SVC_CAS_INCL_RSN_CD
     ,'   '                    AS SVC_CAS_EXCL_RSN_CD
     ,0                        AS SVC_CAS_PATIENT_PYMT
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO   = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO          <> S1.SVC_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)  = RTRIM(S1.SVC_PROC1_CD)
  AND S2.SVC_INCL_RSN_CD      = 'CT2'
  AND S2.SVC_EXCL_RSN_CD      = '   '
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO      = S1.SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD     = '   '
WHERE S1.SVC_TX_ID_MATCH_TYPE = 'CT2'
  AND S1.SVC_EXCL_RSN_CD      = 'CT2'
  AND NOT EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL S3
      WHERE  S3.SVC_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
        AND  S3.SVC_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
        AND  S3.SVC_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
        AND  S3.SVC_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
        AND  S3.SVC_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
        AND  S3.SVC_SEQ_NO          = S1.SVC_SEQ_NO
        AND  S3.SVC_EXCL_RSN_CD     = '   ' )
ORDER BY 1,2,3,4,5,6
) T1
INNER JOIN
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,MAX(SVC_CAS_SEQ_NO)       AS MAX_SVC_CAS_SEQ_NO
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO      = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD     = '   '
WHERE S1.SVC_TX_ID_MATCH_TYPE = 'CT2'
  AND S1.SVC_INCL_RSN_CD      = 'CT2'
  AND S1.SVC_EXCL_RSN_CD      = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
ORDER BY 1,2,3,4,5,6
) T2
ON    T2.SVC_ISA_FILE_ID      = T1.SVC_CAS_ISA_FILE_ID
  AND T2.SVC_GS_GRP_SEQ_NO    = T1.SVC_CAS_GS_GRP_SEQ_NO
  AND T2.SVC_ST_SEQ_NO        = T1.SVC_CAS_ST_SEQ_NO
  AND T2.SVC_LX_SEQ_NO        = T1.SVC_CAS_LX_SEQ_NO
  AND T2.SVC_CLP_CLM_SEQ_NO   = T1.SVC_CAS_CLP_CLM_SEQ_NO
  AND T2.SVC_SEQ_NO           = T1.SVC_CAS_SVC_SEQ_NO
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD     = 'CT2' )
ORDER BY 1,2,3,4,5,6
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_EXCL_RSN_CD        = 'CT2'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                            AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'CT2'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO      = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD    = 'CT2'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD    = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
