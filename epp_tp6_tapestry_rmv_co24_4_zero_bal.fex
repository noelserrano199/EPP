-TYPE *************************************************************************-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,TX_ID
     ,'TP4'                                      AS EXCL_RSN_CD
FROM
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)                   AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')          AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)                        AS SVC_PROC1_CD
     ,RANK()
      OVER ( PARTITION BY RTRIM(CLP_CLM_SUBMTR_ID)
                         ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
                         ,RTRIM(SVC_PROC1_CD)
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
                         ,SVC_SEQ_NO )           AS T_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_CLARITY_TX_ID
     ,SVC_EXCL_RSN_CD
	 ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) AS SVC_LI_PRVDR_PYMT
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD2
     ,SVC_CAS_CLM_ADJ_RSN_CD3
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND RTRIM(CLP_CLM_STATUS_CD)  <> '22'
  AND CLP_EXCL_RSN_CD           = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID)  = '0'
  AND SVC_EXCL_RSN_CD           = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID       = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO         = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO         = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO        = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR         IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD       = '   '
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID       = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO         = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO         = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO        = SVC_SEQ_NO
  AND RTRIM(SVC_CAS_CLM_ADJ_GRP_CD1)= 'CO'
  AND '24' IN( RTRIM(SVC_CAS_CLM_ADJ_RSN_CD1),
               RTRIM(SVC_CAS_CLM_ADJ_RSN_CD2),
               RTRIM(SVC_CAS_CLM_ADJ_RSN_CD3))
  AND SVC_CAS_EXCL_RSN_CD       = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND NOT
    ( RTRIM(CLP_CLM_STATUS_CD)  = 1
      AND EXISTS
        ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
          FROM   &CLP.EVAL&CLP_TBL.EVAL C2
          WHERE  C2.CLP_ISA_FILE_ID   = C1.CLP_ISA_FILE_ID
            AND  C2.CLP_GS_GRP_SEQ_NO = C1.CLP_GS_GRP_SEQ_NO
            AND  C2.CLP_ST_SEQ_NO     = C1.CLP_ST_SEQ_NO
            AND  C2.CLP_LX_SEQ_NO     = C1.CLP_LX_SEQ_NO
            AND  C2.CLP_CLM_SEQ_NO   <> C1.CLP_CLM_SEQ_NO
            AND  RTRIM(C2.CLP_CLM_STATUS_CD)   = '22'
    		AND  ( RTRIM(C2.CLP_CLM_SUBMTR_ID) = RTRIM(C1.CLP_CLM_SUBMTR_ID)
			  OR   SUBSTR( C2.CLP_CLM_SUBMTR_ID, 1, LENGTH(RTRIM(C2.CLP_CLM_SUBMTR_ID))-1)
			      =SUBSTR( C1.CLP_CLM_SUBMTR_ID, 1, LENGTH(RTRIM(C1.CLP_CLM_SUBMTR_ID))-1))))
) T0
INNER JOIN
(
SELECT
      CLP_CLM_SUBMTR_ID
	 ,SVC_DTM_DATE
	 ,SVC_PROC1_CD
     ,RANK()
      OVER ( PARTITION BY CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
                         ,TX_ID )               AS T_RANK
     ,TX_ID
	 ,ZERO_BALANCE_YN
     ,INSURANCE_AMT
FROM
(
SELECT
      CLP_CLM_SUBMTR_ID
	 ,SVC_DTM_DATE
	 ,SVC_PROC1_CD
     ,T2.TX_ID
     ,ZERO_BALANCE_YN
     ,INSURANCE_AMT
FROM
(
SELECT 
      CLP_CLM_SUBMTR_ID
	 ,SVC_DTM_DATE
	 ,SVC_PROC1_CD
     ,SVC_LI_PRVDR_PYMT
     ,TRN_CHECK_NO
     ,A.TX_ID
	 ,ZERO_BALANCE_YN
     ,INSURANCE_AMT
FROM
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)                 AS CLP_CLM_SUBMTR_ID
 	 ,RTRIM(SVC_PROC1_CD)                      AS SVC_PROC1_CD
	 ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,RTRIM(SVC_ORGLI_PRVDR_PYMT)              AS SVC_ORGLI_PRVDR_PYMT
     ,RTRIM(TRN_CHECK_NO)                      AS TRN_CHECK_NO
     ,RTRIM(SVC_LI_PRVDR_PYMT)                 AS SVC_LI_PRVDR_PYMT
     ,ST_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1)= 'P'
  AND RTRIM(CLP_CLM_STATUS_CD) <> '22'
  AND CLP_EXCL_RSN_CD          = '   '
INNER JOIN
      &TRN.EVAL&TRN_TBL.EVAL
ON    TRN_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND TRN_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND TRN_ST_SEQ_NO            = ST_SEQ_NO
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID) = '0'
  AND SVC_EXCL_RSN_CD          = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
WHERE ST_EXCL_RSN_CD           = '   '
  AND NOT
    ( RTRIM(CLP_CLM_STATUS_CD) = 1
      AND EXISTS
        ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
          FROM   &CLP.EVAL&CLP_TBL.EVAL C2
          WHERE  C2.CLP_ISA_FILE_ID    = C1.CLP_ISA_FILE_ID
            AND  C2.CLP_GS_GRP_SEQ_NO  = C1.CLP_GS_GRP_SEQ_NO
            AND  C2.CLP_ST_SEQ_NO      = C1.CLP_ST_SEQ_NO
            AND  C2.CLP_LX_SEQ_NO      = C1.CLP_LX_SEQ_NO
            AND  C2.CLP_CLM_SEQ_NO     <> C1.CLP_CLM_SEQ_NO
            AND  RTRIM(C2.CLP_CLM_STATUS_CD) = '22'
    		AND  ( RTRIM(C2.CLP_CLM_SUBMTR_ID) = RTRIM(C1.CLP_CLM_SUBMTR_ID)
			  OR   SUBSTR( C2.CLP_CLM_SUBMTR_ID, 1, LENGTH(RTRIM(C2.CLP_CLM_SUBMTR_ID))-1)
			      =SUBSTR( C1.CLP_CLM_SUBMTR_ID, 1, LENGTH(RTRIM(C1.CLP_CLM_SUBMTR_ID))-1))))
ORDER BY 1,2,3
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER         = CLP_CLM_SUBMTR_ID
  AND A.CPT_CODE               = SVC_PROC1_CD
  AND A.ORIG_SERVICE_DATE      = SVC_DTM_DATE
  AND A.DETAIL_TYPE            = '50'
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                  = A.TX_ID
  AND B.INSURANCE_AMT          <= 0
GROUP BY
      CLP_CLM_SUBMTR_ID
	 ,SVC_DTM_DATE
     ,SVC_PROC1_CD
     ,SVC_LI_PRVDR_PYMT
     ,TRN_CHECK_NO
     ,ZERO_BALANCE_YN
     ,INSURANCE_AMT
     ,A.TX_ID
) T2
GROUP BY
      CLP_CLM_SUBMTR_ID
	 ,SVC_DTM_DATE
	 ,SVC_PROC1_CD
     ,ZERO_BALANCE_YN
     ,INSURANCE_AMT
     ,T2.TX_ID
ORDER BY 1,2,3,4
)
) T3
ON    T3.CLP_CLM_SUBMTR_ID     = T0.CLP_CLM_SUBMTR_ID
  AND T3.SVC_DTM_DATE          = T0.SVC_DTM_DATE
  AND T3.SVC_PROC1_CD          = T0.SVC_PROC1_CD
  AND T3.T_RANK                = T0.T_RANK
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.SVC_ISA_FILE_ID       = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO     = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO         = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO         = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO    = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO            = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ       = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.SVC_EXCL_RSN_CD  = 'TP6'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
