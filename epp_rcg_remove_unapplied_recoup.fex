-***************************************************************************************************
-* Program: EPP_RO2_REMOVE_OFFSET_SVC                                                              *
-* Title:   Remove recoup half of offsetting transaction pair ? recoup of previous denial and new  *
-*          denial with different group/reason code                                                *
-* Purpose: When a payor has denied a claim and the reason for that denial has been resolved it is *
-*          not uncommon for the same payor to then deny the claim for a second reason.  When this *
-*          happens the payor will send a recoup of the original denial and also a denial for the  *
-*          new reason with the appropriate reason code.  Denials are added/posted to the charge?s *
-*          transaction record, but the denial amount is not applied to the charge balance.  So a  *
-*          recoup of a denial is not a significant or required transaction as the original denial *
-*          did not impact the charge balance.  Also, a new denial with a different reason code    *
-*          implies the original denial has been resolved.  This module removes recoup denial      *
-*          transactions in order to minimize the clutter of non-essential transactions in a       *
-*          charge?s transaction history.                                                          *
-***************************************************************************************************
-* Tables Accessed:                                                                                *
-* Tables Updated:                                                                                 *
-***************************************************************************************************
-* Include/EX Files:                                                                               *
-***************************************************************************************************
-* Files Allocated:                                                                                *
-***************************************************************************************************
-* Change History:                                                                                 *
-*    Programmer          Date         Description of Change                                       *
-* ------------------  ----------   -------------------------------                                *
-*       WLS           02/18/2016   Original Version                                               *
-***************************************************************************************************
-*-SET &ECHO = ALL;
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-RUN
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP/EPP_EPP1_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark exact offsetting transactions as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
FROM
(
SELECT
      SVC_CLARITY_TX_ID
     ,CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_PROC1_CD
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,LISTAGG(SVC_CAS_CLM_ADJ_RSN_CD, ',')
      WITHIN GROUP (ORDER BY CLP_CLM_SUBMTR_ID
                            ,SVC_ISA_FILE_ID
                            ,SVC_GS_GRP_SEQ_NO
                            ,SVC_ST_SEQ_NO
                            ,SVC_LX_SEQ_NO
                            ,SVC_CLP_CLM_SEQ_NO
                            ,SVC_SEQ_NO
                            ,SVC_EPP_GEN_SEQ
                            ,SVC_CAS_CLM_ADJ_GRP_CD ) AS RSN_CD_LIST
FROM
(
SELECT
      SVC_CLARITY_TX_ID
     ,CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_PROC1_CD
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_CAS_CLM_ADJ_GRP_CD
     ,SVC_CAS_CLM_ADJ_RSN_CD
     ,SUM(SVC_CAS_CLM_ADJ_AMT)  AS SVC_CAS_CLM_ADJ_AMT
FROM
(
SELECT
      SVC_CLARITY_TX_ID
     ,RTRIM(CLP_CLM_SUBMTR_ID)  AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_DTM_DATE)       AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)       AS SVC_PROC1_CD
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                AS SVC_ORGLI_PRVDR_PYMT
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                AS SVC_LI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,COALESCE(RTRIM(SVC_CAS_CLM_ADJ_GRP_CD1),'  ')             AS SVC_CAS_CLM_ADJ_GRP_CD
	    ,''''||COALESCE(RTRIM(SVC_CAS_CLM_ADJ_RSN_CD1),'  ')||'''' AS SVC_CAS_CLM_ADJ_RSN_CD1
	    ,''''||COALESCE(RTRIM(SVC_CAS_CLM_ADJ_RSN_CD2),'  ')||'''' AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,''''||COALESCE(RTRIM(SVC_CAS_CLM_ADJ_RSN_CD3),'  ')||'''' AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,''''||COALESCE(RTRIM(SVC_CAS_CLM_ADJ_RSN_CD4),'  ')||'''' AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,''''||COALESCE(RTRIM(SVC_CAS_CLM_ADJ_RSN_CD5),'  ')||'''' AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,''''||COALESCE(RTRIM(SVC_CAS_CLM_ADJ_RSN_CD6),'  ')||'''' AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,ABS(TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))) AS SVC_CAS_CLM_ADJ_AMT1
     ,ABS(TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0'))) AS SVC_CAS_CLM_ADJ_AMT2
     ,ABS(TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0'))) AS SVC_CAS_CLM_ADJ_AMT3
     ,ABS(TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0'))) AS SVC_CAS_CLM_ADJ_AMT4
     ,ABS(TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0'))) AS SVC_CAS_CLM_ADJ_AMT5
     ,ABS(TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0'))) AS SVC_CAS_CLM_ADJ_AMT6
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_CLM_STATUS_CD      = '22'
  AND CLP_EXCL_RSN_CD        = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
-*  AND CLP_CLM_SUBMTR_ID = 'P1323728220'
  AND NOT EXISTS
    ( SELECT 1
      FROM   &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
      WHERE  CLP_CAS_ISA_FILE_ID      = CLP_ISA_FILE_ID
        AND  CLP_CAS_GS_GRP_SEQ_NO    = CLP_GS_GRP_SEQ_NO
        AND  CLP_CAS_ST_SEQ_NO        = CLP_ST_SEQ_NO
        AND  CLP_CAS_LX_SEQ_NO        = CLP_LX_SEQ_NO
        AND  CLP_CAS_CLP_CLM_SEQ_NO   = CLP_CLM_SEQ_NO
        AND  CLP_CAS_EXCL_RSN_CD      = '   ' )
  AND EXISTS
    ( SELECT 1
      FROM   &CLP.EVAL&CLP_TBL.EVAL C2
      WHERE  C2.CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
        AND  C2.CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
        AND  C2.CLP_ST_SEQ_NO      = ST_SEQ_NO
        AND  C2.CLP_EXCL_RSN_CD    = '   '
        AND  RTRIM(C2.CLP_CLM_STATUS_CD) <> '22'
        AND  RTRIM(C2.CLP_CLM_SUBMTR_ID) = RTRIM(C1.CLP_CLM_SUBMTR_ID))
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD        = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    SVC_DTM_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD    = '   '
LEFT OUTER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
  AND NOT EXISTS
  ( SELECT 1
    FROM  &SVC.EVAL&SVC_TBL.EVAL S2
         ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
    WHERE S2.SVC_ISA_FILE_ID        = C1.CLP_ISA_FILE_ID
      AND S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
      AND S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
      AND S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
      AND S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
      AND S2.SVC_SEQ_NO            <> S1.SVC_SEQ_NO
      AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
      AND S2.SVC_EXCL_RSN_CD        = '   '
      AND ABS(TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0')))
                                    = ABS(TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0')))
      AND D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
      AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
      AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
      AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
      AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
      AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
      AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
      AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
      AND RTRIM(D2.SVC_DTM_DATE)    = RTRIM(D1.SVC_DTM_DATE) )
  AND NOT EXISTS
    ( SELECT 1
      FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL SC2
      WHERE  SC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
        AND  SC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
        AND  SC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
        AND  SC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
        AND  SC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
        AND  SC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
        AND  SC2.SVC_CAS_EXCL_RSN_CD    = '   '
        AND '45' IN( RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD1)
                    ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2)
                    ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD3)
                    ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD4)
                    ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD5)
                    ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD6)))
  AND NOT EXISTS
    ( SELECT 1
      FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL SC2
      WHERE  SC2.SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
        AND  SC2.SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
        AND  SC2.SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
        AND  SC2.SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
        AND  SC2.SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
        AND  SC2.SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
        AND  SC2.SVC_CAS_EXCL_RSN_CD    = '   '
        AND '253' IN( RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD1)
                     ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2)
                     ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD3)
                     ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD4)
                     ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD5)
                     ,RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD6)))
ORDER BY
      1,2,3,4,5,6,7,8
)
      UNPIVOT
(     (SVC_CAS_CLM_ADJ_RSN_CD,SVC_CAS_CLM_ADJ_AMT)
       FOR RSN_CD IN
         ((SVC_CAS_CLM_ADJ_RSN_CD1,SVC_CAS_CLM_ADJ_AMT1) AS 1,
          (SVC_CAS_CLM_ADJ_RSN_CD2,SVC_CAS_CLM_ADJ_AMT2) AS 2,
          (SVC_CAS_CLM_ADJ_RSN_CD3,SVC_CAS_CLM_ADJ_AMT3) AS 3,
          (SVC_CAS_CLM_ADJ_RSN_CD4,SVC_CAS_CLM_ADJ_AMT4) AS 4,
          (SVC_CAS_CLM_ADJ_RSN_CD5,SVC_CAS_CLM_ADJ_AMT5) AS 5,
          (SVC_CAS_CLM_ADJ_RSN_CD6,SVC_CAS_CLM_ADJ_AMT6) AS 6)
         )
WHERE RTRIM(SVC_CAS_CLM_ADJ_RSN_CD) IS NOT NULL
  AND SVC_CAS_CLM_ADJ_RSN_CD <> ''''||'  '||''''
GROUP BY
      SVC_CLARITY_TX_ID
     ,CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_PROC1_CD
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_CAS_CLM_ADJ_GRP_CD
     ,SVC_CAS_CLM_ADJ_RSN_CD
ORDER BY 1,2,3,4,5,6,7
)
GROUP BY
      SVC_CLARITY_TX_ID
     ,CLP_CLM_SUBMTR_ID
     ,SVC_DTM_DATE
     ,SVC_PROC1_CD
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
ORDER BY 1,2,3,4,5,6,7
)
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  CLARITY_TDL_TRAN   A
           ,PMT_EOB_INFO_I     C
           ,PMT_EOB_INFO_II    D
      WHERE A.TX_ID             = SVC_CLARITY_TX_ID
        AND A.DETAIL_TYPE       = 20
        AND C.TX_ID             = A.MATCH_TRX_ID
        AND C.TDL_ID            = A.TDL_ID
        AND D.TX_ID             = C.TX_ID
        AND D.EOB_I_LINE_NUMBER = C.LINE
        AND D.EOB_CODES         IN(RSN_CD_LIST)
        AND D.AMOUNT            < 0
        AND COALESCE(D.PEOB_EOB_AMOUNT,0) <> 0 )
) ST
ON  ( ST.SVC_ISA_FILE_ID        = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO      = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO          = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO          = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO     = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO             = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ        = UT.SVC_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_EXCL_RSN_CD        = 'RCG'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Check at least one SVC was excluded or goto end
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'RCG'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD     = 'RCG' )
ORDER BY 1,2,3,4,5,6
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_EXCL_RSN_CD        = 'RCG'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                            AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'RCG'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO      = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD    = 'RCG'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD     = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
