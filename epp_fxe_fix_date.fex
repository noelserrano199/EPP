-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Fix date on 835 when Invoice and CPT code match
-**** Write new record first -then mark old record as excluded in next step
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_DTM_ISA_FILE_ID
     ,SVC_DTM_GS_GRP_SEQ_NO
     ,SVC_DTM_ST_SEQ_NO
     ,SVC_DTM_LX_SEQ_NO
     ,SVC_DTM_CLP_CLM_SEQ_NO
     ,SVC_DTM_SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ+1                    AS SVC_DTM_EPP_GEN_SEQ
     ,SVC_DTM_DTTM_QLFR
     ,TO_CHAR(C.FROM_SVC_DATE, 'YYYYMMDD')     AS SVC_DTM_DATE
     ,SVC_DTM_TIME
     ,SVC_DTM_TIME_CD
     ,SVC_DTM_DTTM_PD_FMT_QLFR
     ,SVC_DTM_DTTM_PD
	 ,'FXE'                                    AS SVC_DTM_INCL_RSN_CD
	 ,'   '                                    AS SVC_DTM_EXCL_RSN_CD
FROM
(
SELECT
      RTRIM(SVC_CLARITY_TX_ID)                 AS SVC_CLARITY_TX_ID 
 	 ,RTRIM(SVC_PROC1_CD)                      AS SVC_PROC1_CD
	 ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,RTRIM(CLP_CLM_SUBMTR_ID)                 AS CLP_CLM_SUBMTR_ID
     ,SVC_DTM_ISA_FILE_ID
     ,SVC_DTM_GS_GRP_SEQ_NO
     ,SVC_DTM_ST_SEQ_NO
     ,SVC_DTM_LX_SEQ_NO
     ,SVC_DTM_CLP_CLM_SEQ_NO
     ,SVC_DTM_SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ
     ,SVC_DTM_DTTM_QLFR
     ,SVC_DTM_TIME
     ,SVC_DTM_TIME_CD
     ,SVC_DTM_DTTM_PD_FMT_QLFR
     ,SVC_DTM_DTTM_PD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD          = '   '
  AND RTRIM(SVC_CLARITY_TX_ID)<> 0 
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
WHERE ST_EXCL_RSN_CD           = '   '
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.TX_ID                  = TO_NUMBER(SVC_CLARITY_TX_ID)
  AND A.CPT_CODE               = SVC_PROC1_CD
  AND A.ORIG_SERVICE_DATE      = SVC_DTM_DATE
  AND A.INVOICE_NUMBER         = CLP_CLM_SUBMTR_ID
  AND DETAIL_TYPE              = '50'
INNER JOIN
      TX_INVOICES      B
ON    B.TX_ID                  = A.TX_ID
  AND B.INVOICE_NUM            = A.INVOICE_NUMBER
INNER JOIN
      INV_CLM_LN_ADDL  C
ON    C.INVOICE_ID             = B.INVOICE_ID
  AND C.INV_NUM_GRP100LN       = B.LINE
  AND SVC_CLARITY_TX_ID       IN(C.TRANSACTION_LIST)
  AND C.FROM_SVC_DATE          <> A.ORIG_SERVICE_DATE
  AND C.PROC_OR_REV_CODE       = A.CPT_CODE
  AND C.INVOICE_NUM            = A.INVOICE_NUMBER
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark original SVC_DTM with bad date for exclusion
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL UT
USING (
SELECT
      B.SVC_DTM_ISA_FILE_ID
     ,B.SVC_DTM_GS_GRP_SEQ_NO
     ,B.SVC_DTM_ST_SEQ_NO
     ,B.SVC_DTM_LX_SEQ_NO
     ,B.SVC_DTM_CLP_CLM_SEQ_NO
     ,B.SVC_DTM_SVC_SEQ_NO
     ,B.SVC_DTM_SEQ_NO
	 ,B.SVC_DTM_EPP_GEN_SEQ
FROM  &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL A
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL B
ON    B.SVC_DTM_ISA_FILE_ID     = A.SVC_DTM_ISA_FILE_ID
  AND B.SVC_DTM_GS_GRP_SEQ_NO   = A.SVC_DTM_GS_GRP_SEQ_NO
  AND B.SVC_DTM_ST_SEQ_NO       = A.SVC_DTM_ST_SEQ_NO
  AND B.SVC_DTM_LX_SEQ_NO       = A.SVC_DTM_LX_SEQ_NO
  AND B.SVC_DTM_CLP_CLM_SEQ_NO  = A.SVC_DTM_CLP_CLM_SEQ_NO
  AND B.SVC_DTM_SVC_SEQ_NO      = A.SVC_DTM_SVC_SEQ_NO
  AND B.SVC_DTM_SEQ_NO          = A.SVC_DTM_SEQ_NO
  AND B.SVC_DTM_INCL_RSN_CD    <> 'FXE'
  AND B.SVC_DTM_EXCL_RSN_CD     = '   '
WHERE A.SVC_DTM_INCL_RSN_CD     = 'FXE'
  AND A.SVC_DTM_EXCL_RSN_CD     = '   '
) ST
ON  ( UT.SVC_DTM_ISA_FILE_ID    = ST.SVC_DTM_ISA_FILE_ID
  AND UT.SVC_DTM_GS_GRP_SEQ_NO  = ST.SVC_DTM_GS_GRP_SEQ_NO
  AND UT.SVC_DTM_ST_SEQ_NO      = ST.SVC_DTM_ST_SEQ_NO
  AND UT.SVC_DTM_LX_SEQ_NO      = ST.SVC_DTM_LX_SEQ_NO
  AND UT.SVC_DTM_CLP_CLM_SEQ_NO = ST.SVC_DTM_CLP_CLM_SEQ_NO
  AND UT.SVC_DTM_SVC_SEQ_NO     = ST.SVC_DTM_SVC_SEQ_NO
  AND UT.SVC_DTM_SEQ_NO         = ST.SVC_DTM_SEQ_NO
  AND UT.SVC_DTM_EPP_GEN_SEQ    = ST.SVC_DTM_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET 
      UT.SVC_DTM_EXCL_RSN_CD    = 'FXE'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
