-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-TYPE *************************************************************************
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,T0.ERA_CPT
     ,CLM_LN
     ,TO_CHAR(FROM_SVC_DATE, 'YYYYMMDD') AS NEW_DOS
     ,TRANSACTION_LIST
FROM
(
SELECT
      ERA_INV
     ,ERA_CPT
     ,ERA_DOS
 	 ,ERA_CRG
     ,DENSE_RANK()
      OVER ( PARTITION BY ERA_INV
                         ,ERA_CPT
                         ,ERA_DOS
                         ,ERA_CRG
             ORDER BY     ERA_INV
                         ,ERA_CPT
                         ,ERA_DOS
                         ,ERA_CRG
                         ,CLM_LN
                         ,FROM_SVC_DATE)   AS S_RANK
     ,FROM_SVC_DATE
     ,CLM_LN
     ,TRANSACTION_LIST
FROM
(
SELECT DISTINCT
      RTRIM(CLP_CLM_SUBMTR_ID)             AS ERA_INV
     ,RTRIM(S2.SVC_PROC1_CD)               AS ERA_CPT
     ,TO_DATE(D2.SVC_DTM_DATE, 'YYYYMMDD') AS ERA_DOS
 	 ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                           AS ERA_CRG
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL          S1
ON    S1.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL  D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL          S2
ON    S2.SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO             > S1.SVC_SEQ_NO
  AND S2.SVC_EXCL_RSN_CD        = '   '
  AND RTRIM(S2.SVC_PROC1_CD)    = RTRIM(S1.SVC_PROC1_CD)
  AND TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                      = TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL  D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
  AND TO_DATE(D2.SVC_DTM_DATE, 'YYYYMMDD')
                                = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
WHERE ST_EXCL_RSN_CD            = '   '
)
INNER JOIN
      INV_CLM_LN_ADDL
ON    INVOICE_NUM               = ERA_INV
  AND PROC_OR_REV_CODE          = ERA_CPT
  AND FROM_SVC_DATE            <> ERA_DOS
  AND CHARGE_AMOUNT             = ERA_CRG
  AND QUANTITY                  = 1
  AND 0                         = INSTR(TRANSACTION_LIST,',')
ORDER BY 1,2,3,4,5,6
) T0
INNER JOIN
(
SELECT DISTINCT
      ERA_INV
     ,ERA_CPT
     ,ERA_DOS
 	 ,ERA_CRG
     ,DENSE_RANK()
      OVER ( PARTITION BY ERA_INV
                         ,ERA_CPT
                         ,ERA_DOS
                         ,ERA_CRG
             ORDER BY     ERA_INV
                         ,ERA_CPT
                         ,ERA_DOS
                         ,ERA_CRG
                         ,SVC_CLP_CLM_SEQ_NO
                         ,SVC_SEQ_NO )       AS T_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM
(
SELECT
      ERA_INV
     ,ERA_CPT
     ,ERA_DOS
 	 ,ERA_CRG
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,COUNT(*)
FROM
(
SELECT DISTINCT
      RTRIM(CLP_CLM_SUBMTR_ID)             AS ERA_INV
     ,RTRIM(S2.SVC_PROC1_CD)               AS ERA_CPT
     ,TO_DATE(D2.SVC_DTM_DATE, 'YYYYMMDD') AS ERA_DOS
 	 ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                           AS ERA_CRG
     ,S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,S2.SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL          S1
ON    S1.SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND S1.SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND S1.SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND S1.SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND S1.SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND S1.SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL  D1
ON    D1.SVC_DTM_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO      = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD     = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL          S2
ON    S2.SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND S2.SVC_SEQ_NO              > S1.SVC_SEQ_NO
  AND S2.SVC_EXCL_RSN_CD         = '   '
  AND RTRIM(S2.SVC_PROC1_CD)     = RTRIM(S1.SVC_PROC1_CD)
  AND TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                      = TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL  D2
ON    D2.SVC_DTM_ISA_FILE_ID     = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO   = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO       = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO       = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO  = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO      = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND D2.SVC_DTM_EXCL_RSN_CD     = '   '
  AND TO_DATE(D2.SVC_DTM_DATE, 'YYYYMMDD')
                                 = TO_DATE(D1.SVC_DTM_DATE, 'YYYYMMDD')
WHERE ST_EXCL_RSN_CD             = '   '
) T1
LEFT
OUTER JOIN
      INV_CLM_LN_ADDL
ON    INVOICE_NUM                = ERA_INV
  AND PROC_OR_REV_CODE           = ERA_CPT
  AND FROM_SVC_DATE              = ERA_DOS
  AND CHARGE_AMOUNT              = ERA_CRG
  AND QUANTITY                   = 1
GROUP BY
      ERA_INV
     ,ERA_CPT
     ,ERA_DOS
 	 ,ERA_CRG
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
HAVING COUNT(*) = 1
   AND SUM(COALESCE(QUANTITY,1)) = 1
ORDER BY 1,2,3,4,5
) T2
INNER JOIN
      INV_CLM_LN_ADDL
ON    INVOICE_NUM                = ERA_INV
  AND PROC_OR_REV_CODE           = ERA_CPT
  AND FROM_SVC_DATE             <> ERA_DOS
  AND CHARGE_AMOUNT              = ERA_CRG
  AND QUANTITY                   = 1
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL          S3
           ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL  D3
      WHERE S3.SVC_ISA_FILE_ID        = T2.SVC_ISA_FILE_ID
        AND S3.SVC_GS_GRP_SEQ_NO      = T2.SVC_GS_GRP_SEQ_NO
        AND S3.SVC_ST_SEQ_NO          = T2.SVC_ST_SEQ_NO
        AND S3.SVC_LX_SEQ_NO          = T2.SVC_LX_SEQ_NO
        AND S3.SVC_CLP_CLM_SEQ_NO     = T2.SVC_CLP_CLM_SEQ_NO
        AND S3.SVC_EXCL_RSN_CD        = '   '
        AND RTRIM(S3.SVC_PROC1_CD)    = PROC_OR_REV_CODE
        AND D3.SVC_DTM_ISA_FILE_ID    = S3.SVC_ISA_FILE_ID
        AND D3.SVC_DTM_GS_GRP_SEQ_NO  = S3.SVC_GS_GRP_SEQ_NO
        AND D3.SVC_DTM_ST_SEQ_NO      = S3.SVC_ST_SEQ_NO
        AND D3.SVC_DTM_LX_SEQ_NO      = S3.SVC_LX_SEQ_NO
        AND D3.SVC_DTM_CLP_CLM_SEQ_NO = S3.SVC_CLP_CLM_SEQ_NO
        AND D3.SVC_DTM_SVC_SEQ_NO     = S3.SVC_SEQ_NO
        AND D3.SVC_DTM_DTTM_QLFR      IN( '472','150' )
        AND D3.SVC_DTM_EXCL_RSN_CD    = '   '
        AND TO_DATE(D3.SVC_DTM_DATE, 'YYYYMMDD') = FROM_SVC_DATE )
ORDER BY 1,2,3,4,5
) T2
ON    T2.ERA_INV              = T0.ERA_INV
  AND T2.ERA_DOS              = T0.ERA_DOS
  AND T2.ERA_CPT              = T0.ERA_CPT
  AND T2.ERA_CRG              = T0.ERA_CRG
  AND T2.T_RANK               = T0.S_RANK
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID      = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO    = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO        = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO        = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO   = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO           = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ      = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE
  SET UT.SVC_TX_ID_MATCH_TYPE = 'FD1'
     ,UT.SVC_CLARITY_TX_ID    = ST.TRANSACTION_LIST
     ,UT.SVC_MULTI_USE_AMOUNT = ST.CLM_LN
     ,UT.SVC_RVSD_INVC_NO     = ST.NEW_DOS
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_TX_ID_MATCH_TYPE = 'FD1'
  AND  ROWNUM               < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_DTM_ISA_FILE_ID
     ,SVC_DTM_GS_GRP_SEQ_NO
     ,SVC_DTM_ST_SEQ_NO
     ,SVC_DTM_LX_SEQ_NO
     ,SVC_DTM_CLP_CLM_SEQ_NO
     ,SVC_DTM_SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ
FROM  &SVC.EVAL&SVC_TBL.EVAL
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID       = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO         = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO         = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO        = SVC_SEQ_NO
  AND SVC_DTM_EXCL_RSN_CD       = '   '
WHERE SVC_EXCL_RSN_CD           = '   '
  AND SVC_TX_ID_MATCH_TYPE      = 'FD1'
) ST
ON  ( UT.SVC_DTM_ISA_FILE_ID    = ST.SVC_DTM_ISA_FILE_ID
  AND UT.SVC_DTM_GS_GRP_SEQ_NO  = ST.SVC_DTM_GS_GRP_SEQ_NO
  AND UT.SVC_DTM_ST_SEQ_NO      = ST.SVC_DTM_ST_SEQ_NO
  AND UT.SVC_DTM_LX_SEQ_NO      = ST.SVC_DTM_LX_SEQ_NO
  AND UT.SVC_DTM_CLP_CLM_SEQ_NO = ST.SVC_DTM_CLP_CLM_SEQ_NO
  AND UT.SVC_DTM_SVC_SEQ_NO     = ST.SVC_DTM_SVC_SEQ_NO
  AND UT.SVC_DTM_SEQ_NO         = ST.SVC_DTM_SEQ_NO
  AND UT.SVC_DTM_EPP_GEN_SEQ    = ST.SVC_DTM_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_DTM_EXCL_RSN_CD    = 'FD1'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_DTM_ISA_FILE_ID
     ,SVC_DTM_GS_GRP_SEQ_NO
     ,SVC_DTM_ST_SEQ_NO
     ,SVC_DTM_LX_SEQ_NO
     ,SVC_DTM_CLP_CLM_SEQ_NO
     ,SVC_DTM_SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,TO_CHAR(SVC_DTM_EPP_GEN_SEQ+1) AS SVC_DTM_EPP_GEN_SEQ
     ,SVC_DTM_DTTM_QLFR
     ,SVC_RVSD_INVC_NO               AS SVC_DTM_DATE
     ,SVC_DTM_TIME
     ,SVC_DTM_TIME_CD
     ,SVC_DTM_DTTM_PD_FMT_QLFR
     ,SVC_DTM_DTTM_PD
	 ,'FD1'                          AS SVC_DTM_INCL_RSN_CD
	 ,'   '                          AS SVC_DTM_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID       = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO     = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO         = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO         = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO    = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO        = SVC_SEQ_NO
  AND SVC_DTM_EXCL_RSN_CD       = 'FD1'
WHERE SVC_EXCL_RSN_CD           = '   '
  AND SVC_TX_ID_MATCH_TYPE      = 'FD1'
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
