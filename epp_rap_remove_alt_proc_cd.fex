-TYPE *************************************************************************-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT  /*+ NOPARALLEL ORDERED NO_UNNEST */
      T0.SVC_ISA_FILE_ID
     ,T0.SVC_GS_GRP_SEQ_NO
     ,T0.SVC_ST_SEQ_NO
     ,T0.SVC_LX_SEQ_NO
     ,T0.SVC_CLP_CLM_SEQ_NO
     ,T0.SVC_SEQ_NO
     ,T0.SVC_EPP_GEN_SEQ
     ,T0.CLP_CLM_SUBMTR_ID
     ,TO_CHAR(T2.TX_ID)                          AS CLARITY_TX_ID
     ,T2.CPT_CODE
     ,T0.SVC_PROC1_CD
     ,CUR_PAYOR_ID
FROM
(
SELECT 
      RTRIM(CLP_CLM_SUBMTR_ID)                   AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_PROC1_CD)                        AS SVC_PROC1_CD
     ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')          AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                                 AS SVC_ORGLI_PRVDR_PYMT
     ,RANK()
      OVER ( PARTITION BY RTRIM(CLP_CLM_SUBMTR_ID)
                         ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
                         ,RTRIM(SVC_PROC1_CD)
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                         ,RTRIM(SVC_CLP_CLM_SEQ_NO)||RTRIM(SVC_SEQ_NO)) AS T_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_CLARITY_TX_ID
     ,SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID            = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)  IN('EDC','BOAMIXED')
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO           = ST_SEQ_NO
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND CLP_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID)= '0'
  AND SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD     = '   '
WHERE ST_EXCL_RSN_CD          = '   '
ORDER BY 1,2,3,4,5
) T0
INNER JOIN
(
SELECT 
      CLP_CLM_SUBMTR_ID
	 ,SVC_PROC1_CD
	 ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,RANK()OVER ( PARTITION BY CLP_CLM_SUBMTR_ID
                               ,SVC_DTM_DATE
                               ,SVC_PROC1_CD
                               ,SVC_ORGLI_PRVDR_PYMT
                    ORDER BY    CLP_CLM_SUBMTR_ID
                               ,SVC_DTM_DATE
                               ,SVC_PROC1_CD
                               ,SVC_ORGLI_PRVDR_PYMT
                               ,A.TX_ID )      AS T_RANK
     ,A.TX_ID
     ,A.CPT_CODE
     ,A.CUR_PAYOR_ID
FROM
(
SELECT 
      RTRIM(CLP_CLM_SUBMTR_ID)                 AS CLP_CLM_SUBMTR_ID
 	 ,RTRIM(SVC_PROC1_CD)                      AS SVC_PROC1_CD
	 ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                               AS SVC_LI_PRVDR_PYMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO           = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD         = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID)= '0'
  AND SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD     = '   '
WHERE ST_EXCL_RSN_CD          = '   '
ORDER BY 1,2,3,4
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER        = CLP_CLM_SUBMTR_ID
  AND A.CPT_CODE             <> 'Q4006'
  AND A.ORIG_SERVICE_DATE     = SVC_DTM_DATE
  AND A.DETAIL_TYPE           = '50'
  AND (   A.ORIG_PRICE        = SVC_ORGLI_PRVDR_PYMT
       OR A.BILL_CLAIM_AMOUNT = SVC_ORGLI_PRVDR_PYMT )
INNER JOIN
      CLARITY_EAP_ALTCOD AC
ON    AC.PROC_ID              = A.PROC_ID
  AND AC.PROC_ALT_IDFR        = SVC_PROC1_CD
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   CLARITY_EPM C
      WHERE  C.PAYOR_ID       = A.CUR_PAYOR_ID
        AND  C.EPM_ALT_IDFR   = AC.EPM_ALT_IDFR )
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   INV_CLM_LN_ADDL
      WHERE  INVOICE_NUM      = CLP_CLM_SUBMTR_ID
        AND  PROC_OR_REV_CODE = SVC_PROC1_CD )
GROUP BY
      CLP_CLM_SUBMTR_ID
 	 ,SVC_PROC1_CD
	 ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,A.TX_ID
     ,A.CPT_CODE
-*     ,B.VOID_DATE
     ,A.CUR_PAYOR_ID
ORDER BY 1,2,3,4,5
) T2
ON    T2.CLP_CLM_SUBMTR_ID    = T0.CLP_CLM_SUBMTR_ID
  AND T2.SVC_PROC1_CD         = T0.SVC_PROC1_CD
  AND T2.SVC_DTM_DATE         = T0.SVC_DTM_DATE
  AND T2.SVC_ORGLI_PRVDR_PYMT = T0.SVC_ORGLI_PRVDR_PYMT
  AND T2.T_RANK               = T0.T_RANK
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID      = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO    = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO        = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO        = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO   = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO           = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ      = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_CLARITY_TX_ID    = ST.CLARITY_TX_ID
     ,UT.SVC_RVSD_INVC_NO     = ST.CPT_CODE
     ,UT.SVC_TX_ID_MATCH_TYPE = 'RAP'
     ,UT.SVC_EXCL_RSN_CD      = 'RAP'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ+1          AS SVC_EPP_GEN_SEQ
     ,':'                        AS SVC_COMP_SEPERATOR
     ,'HC'                       AS SVC_PROC1_SVC_ID_QLFR
     ,SVC_RVSD_INVC_NO           AS SVC_PROC1_CD
     ,SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT
     ,SVC_PROC2_SVC_ID_QLFR
     ,SVC_PROC2_CD
     ,SVC_PROC2_MODF1
     ,SVC_PROC2_MODF2
     ,SVC_PROC2_MODF3
     ,SVC_PROC2_MODF4
     ,SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT
     ,SVC_CLARITY_TX_ID
     ,SVC_TX_ID_MATCH_TYPE
     ,SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND
     ,SVC_RVSD_INVC_NO
     ,SVC_CURRENT_BALANCE
     ,SVC_INS_AMOUNT_PAID
     ,SVC_INS_AMOUNT_ADJ
     ,SVC_CRG_IS_VOID_YN
     ,SVC_PRIOR_DENIAL_YN
     ,SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO
     ,'RAP'                       AS SVC_INCL_RSN_CD
     ,'   '                       AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD          = 'RAP'
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
