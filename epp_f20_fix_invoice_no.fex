-******************************************************************************
-* Program:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP/EPP_EPP1_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Match on Name, DOS, Price and CPT Code
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
	    ,CLP_CLM_SUBMTR_ID
     ,PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,NM1_PT_LST_NM
     ,NM1_PT_FST_NM
     ,MIN(INVOICE_NUMBER)                    AS INVOICE_NUMBER
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST INDEX(A CLARITY_TDL_TRAN_PAT_ID) INDEX(B IDX_INV_NUM_CLM_ADDL) */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
	    ,CLP_CLM_SUBMTR_ID
     ,PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,NM1_PT_LST_NM
     ,NM1_PT_FST_NM
     ,INVOICE_ID
     ,MIN(INVOICE_NUMBER)   AS INVOICE_NUMBER
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      PAT_ID
     ,UPPER(PAT_LAST_NAME)                   AS PAT_LAST_NAME
     ,UPPER(PAT_FIRST_NAME)                  AS PAT_FIRST_NAME
     ,UPPER(RTRIM(NM1_PT_LST_NM))            AS NM1_PT_LST_NM
     ,UPPER(RTRIM(NM1_PT_FST_NM))            AS NM1_PT_FST_NM
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')      AS DOS
     ,COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                                             AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_PROC1_CD)                    AS CPT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                             AS PRICE
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
-*  AND CLP_CLM_SUBMTR_ID = '7044733'
  AND NOT EXISTS
    ( SELECT /*+ INDEX(Z IDX_INV_NUM_CLM_ADDL) NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  CLARITY_TDL_TRAN Z
      WHERE INVOICE_NUMBER     = CLP_CLM_SUBMTR_ID)
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_CLARITY_TX_ID        = 0
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID     = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR       IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD     = '   '
INNER JOIN
      &NM1.EVAL&NM1_TBL.EVAL
ON    NM1_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND NM1_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND NM1_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND NM1_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND NM1_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND RTRIM(NM1_ENTITY_ID_CD) = 'QC'
  AND RTRIM(NM1_PT_FST_NM)   <> 'CASH'
INNER JOIN
      PATIENT P
ON  ( INSTR(RTRIM(PAT_LAST_NAME),' ')                             <> 0
   OR INSTR(RTRIM(PAT_LAST_NAME),'-')                             <> 0 )
  AND INSTR(UPPER(PAT_LAST_NAME),UPPER(RTRIM(NM1_PT_LST_NM)),1,1) <> 0
  AND UPPER(PAT_FIRST_NAME)                                        = UPPER(RTRIM(NM1_PT_FST_NM))
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1
) T1
INNER JOIN
      CLARITY_TDL_TRAN   A
ON    A.INT_PAT_ID             = T1.PAT_ID
  AND A.CPT_CODE               = CPT
  AND A.ORIG_SERVICE_DATE      = DOS
  AND A.ORIG_AMT               = ABS(PRICE)
  AND A.DETAIL_TYPE            = 50
INNER JOIN
      INV_CLM_LN_ADDL   B
ON    B.INVOICE_NUM            = A.INVOICE_NUMBER
  AND A.TX_ID                  IN(B.TRANSACTION_LIST)
  AND (  B.CLAIM_STATUS_C      = 1
    OR ( B.CLAIM_STATUS_C      = 2
    AND NOT EXISTS
      ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST INDEX(D PK_TX_INVOICES) */ 1
        FROM  TX_INVOICES     D
             ,INV_CLM_LN_ADDL E
        WHERE D.TX_ID          = A.TX_ID
          AND D.INVOICE_NUM   <> A.INVOICE_NUMBER
          AND E.INVOICE_ID     = D.INVOICE_ID
          AND TO_CHAR(A.TX_ID) IN(E.TRANSACTION_LIST)
          AND E.CLAIM_STATUS_C = 1 )))
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
	    ,CLP_CLM_SUBMTR_ID
     ,PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,NM1_PT_LST_NM
     ,NM1_PT_FST_NM
     ,INVOICE_ID
ORDER BY 1,2,3,4,5,6
) T2
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
	    ,CLP_CLM_SUBMTR_ID
     ,PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,NM1_PT_LST_NM
     ,NM1_PT_FST_NM
HAVING COUNT(*) = 1
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.CLP_ISA_FILE_ID       = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO     = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO         = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO         = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO        = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ       = UT.CLP_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_EXCL_RSN_CD       = 'F20'
     ,UT.CLP_RVSD_INVC_NO      = ST.INVOICE_NUMBER
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP011
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP011';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1                AS CLP_EPP_GEN_SEQ
     ,CLP_RVSD_INVC_NO                 AS CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,'F20'                            AS CLP_CL_TX_MATCH_TYPE
     ,CLP_CLM_SUBMTR_ID                AS CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,'N'                              AS CLP_IS_TAKEBACK_YN
     ,'F20'                            AS CLP_INCL_RSN_CD
     ,'   '                            AS CLP_EXCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD      = 'F20'
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
