-******************************************************************************-* Program:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-GOTO THE_END;
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Match on Name, DOS, Price and CPT Code
-*-----------------------------------------------------------------------------
SQL
-*MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
-*USING (
-*SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
-*      CLP_ISA_FILE_ID
-*     ,CLP_GS_GRP_SEQ_NO
-*     ,CLP_ST_SEQ_NO
-*     ,CLP_LX_SEQ_NO
-*     ,CLP_CLM_SEQ_NO
-*     ,CLP_EPP_GEN_SEQ
-*     ,MIN(INVOICE_NUMBER)                    AS INVOICE_NUMBER
-*FROM
-*(
-*SELECT /*+ INDEX( A CLARITY_TDL_TRAN_PAT_ID) */
-*      CLP_ISA_FILE_ID
-*     ,CLP_GS_GRP_SEQ_NO
-*     ,CLP_ST_SEQ_NO
-*     ,CLP_LX_SEQ_NO
-*     ,CLP_CLM_SEQ_NO
-*     ,CLP_EPP_GEN_SEQ
-*     ,INVOICE_NUMBER
-*     ,TX_ID
-*-*     ,COALESCE(B.INVOICE_NUM,C.INVOICE_NUM)  AS INVOICE_NUMBER
-*FROM
-*(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      PAT_ID
     ,UPPER(RTRIM(NM1_PT_LST_NM))            AS NM1_PT_LST_NM
     ,UPPER(RTRIM(NM1_PT_FST_NM))            AS NM1_PT_FST_NM
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')      AS DOS
     ,COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                                             AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_PROC1_CD)                    AS CPT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                             AS PRICE
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND NOT EXISTS
    ( SELECT 1
      FROM  CLARITY_TDL_TRAN
      WHERE INVOICE_NUMBER     = RTRIM(CLP_CLM_SUBMTR_ID))
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID) = '0'
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
INNER JOIN
      &NM1.EVAL&NM1_TBL.EVAL
ON    NM1_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND NM1_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND NM1_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND NM1_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND NM1_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(NM1_ENTITY_ID_CD)  = 'QC'
  AND RTRIM(NM1_PT_FST_NM)    <> 'CASH'
INNER JOIN
      PATIENT P
ON    UPPER(PAT_LAST_NAME)     = UPPER(RTRIM(NM1_PT_LST_NM))
  AND UPPER(PAT_FIRST_NAME)    = UPPER(RTRIM(NM1_PT_FST_NM))
INNER JOIN
      ARPB_TRANSACTIONS A
ON    A.SERVICE_DATE           = TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
  AND A.PATIENT_ID             = PAT_ID
  AND A.TX_TYPE_C              = 1
  AND A.CPT_CODE               = RTRIM(SVC_PROC1_CD)
  AND A.AMOUNT                 = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
  AND A.VOID_DATE              IS NULL
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1
-*) T1
-*INNER JOIN
-*      CLARITY_TDL_TRAN   A
-*ON    A.INT_PAT_ID             = T1.PAT_ID
-*  AND A.CPT_CODE               = CPT
-*  AND A.ORIG_SERVICE_DATE      = DOS
-*  AND A.ORIG_PRICE             = PRICE
-*  AND A.DETAIL_TYPE            = 50
-*LEFT OUTER JOIN
-*      INV_CLM_LN_ADDL   B
-*ON    B.INVOICE_NUM            = A.INVOICE_NUMBER
-*  AND A.TX_ID                  IN(B.TRANSACTION_LIST)
-*  AND B.CLAIM_STATUS_C         = 1
-*LEFT OUTER JOIN
-*      INV_CLM_LN_ADDL   C
-*ON    C.INVOICE_NUM            = A.INVOICE_NUMBER
-*  AND A.TX_ID                  IN(C.TRANSACTION_LIST)
-*  AND C.CLAIM_STATUS_C         = 2
-*GROUP BY
-*      CLP_ISA_FILE_ID
-*     ,CLP_GS_GRP_SEQ_NO
-*     ,CLP_ST_SEQ_NO
-*     ,CLP_LX_SEQ_NO
-*     ,CLP_CLM_SEQ_NO
-*     ,CLP_EPP_GEN_SEQ
-*     ,INVOICE_NUMBER
-*     ,TX_ID
-*-*     ,COALESCE(B.INVOICE_NUM,C.INVOICE_NUM)
-*ORDER BY 1,2,3,4,5,6
-*) T2
-*INNER JOIN
-*      INV_CLM_LN_ADDL   C
-*ON    C.INVOICE_NUM            = T2.INVOICE_NUMBER
-*  AND T2.TX_ID                 IN(C.TRANSACTION_LIST)
-*  AND C.CLAIM_STATUS_C         = 1
-*-*    OR ( C.CLAIM_STATUS_C      = 2
-*-*    AND NOT EXISTS
-*-*      ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
-*-*        FROM  TX_INVOICES     D
-*-*             ,INV_CLM_LN_ADDL E
-*-*        WHERE D.TX_ID           = T2.TX_ID
-*-*          AND D.INVOICE_NUM     <> T2.INVOICE_NUMBER
-*-*          AND E.INVOICE_ID      = D.INVOICE_ID
-*-*          AND TO_CHAR(T2.TX_ID) IN(E.TRANSACTION_LIST)
-*-*          AND E.CLAIM_STATUS_C  = 1 )))
-*GROUP BY
-*      CLP_ISA_FILE_ID
-*     ,CLP_GS_GRP_SEQ_NO
-*     ,CLP_ST_SEQ_NO
-*     ,CLP_LX_SEQ_NO
-*     ,CLP_CLM_SEQ_NO
-*     ,CLP_EPP_GEN_SEQ
-*ORDER BY 1,2,3,4,5,6,7
-*) ST
-*ON  ( ST.CLP_ISA_FILE_ID       = UT.CLP_ISA_FILE_ID
-*  AND ST.CLP_GS_GRP_SEQ_NO     = UT.CLP_GS_GRP_SEQ_NO
-*  AND ST.CLP_ST_SEQ_NO         = UT.CLP_ST_SEQ_NO
-*  AND ST.CLP_LX_SEQ_NO         = UT.CLP_LX_SEQ_NO
-*  AND ST.CLP_CLM_SEQ_NO        = UT.CLP_CLM_SEQ_NO
-*  AND ST.CLP_EPP_GEN_SEQ       = UT.CLP_EPP_GEN_SEQ )
-*WHEN MATCHED THEN
-*UPDATE SET
-*      UT.CLP_EXCL_RSN_CD       = 'F18'
-*     ,UT.CLP_RVSD_INVC_NO      = ST.INVOICE_NUMBER
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-EXIT
-*-----------------------------------------------------------------------------
-STEP011
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP011';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1                AS CLP_EPP_GEN_SEQ
     ,CLP_RVSD_INVC_NO                 AS CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,'F18'                            AS CLP_CL_TX_MATCH_TYPE
     ,CLP_CLM_SUBMTR_ID                AS CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,'N'                              AS CLP_IS_TAKEBACK_YN
     ,'F18'                            AS CLP_INCL_RSN_CD
     ,'   '                            AS CLP_EXCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD      = 'F18'
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
