-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-RUN
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CP.EVAL&CP_TBL.EVAL
SELECT ERA_NEIC_ID
FROM
(
SELECT
      RTRIM(NA_N1_ID_CD)       AS ERA_NEIC_ID
FROM  &ISA.EVAL&ISA_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID               = ISA_FILE_ID
INNER JOIN
      &NA.EVAL&NA_TBL.EVAL
ON     NA_ISA_FILE_ID            = ISA_FILE_ID
  AND  RTRIM(NA_N1_ENTITY_ID_CD) = 'PR'
WHERE  RTRIM(IFCT_FILE_PAYER) NOT IN('EDC')
GROUP BY
       RTRIM(NA_N1_ID_CD)
)
WHERE NOT EXISTS
    ( SELECT 1
      FROM   &CP.EVAL&CP_TBL.EVAL
      WHERE  CP_NEIC_ID             = ERA_NEIC_ID)
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM
(
SELECT DISTINCT
      TO_NUMBER(SVC_CLARITY_TX_ID)  AS SVC_CLARITY_TX_ID
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID               = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO             = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO                 = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD               = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID               = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO             = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO                 = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO                 = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO            = CLP_CLM_SEQ_NO
  AND (    RTRIM(SVC_CLARITY_TX_ID)<> '0'
        OR RTRIM(SVC_CLARITY_TX_ID) IS NOT NULL )
  AND SVC_EXCL_RSN_CD               = '   '
INNER JOIN
      &NA.EVAL&NA_TBL.EVAL
ON    NA_ISA_FILE_ID                = ST_ISA_FILE_ID
  AND NA_GS_GRP_SEQ_NO              = ST_GS_GRP_SEQ_NO
  AND NA_ST_SEQ_NO                  = ST_SEQ_NO
  AND RTRIM(NA_N1_ENTITY_ID_CD)     = 'PR'
  AND RTRIM(NA_N1_ENTITY_NAME)      NOT IN('MEDISHARE','MANU LIFE','EUROP ASSISTANCE')
WHERE ST_EXCL_RSN_CD                = '   '
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   &CP.EVAL&CP_TBL.EVAL
      WHERE  CP_NEIC_ID             = RTRIM(NA_N1_ID_CD))
ORDER BY 1
)
INNER JOIN
      CLARITY_TDL_TRAN A
ON    TX_ID                         = SVC_CLARITY_TX_ID
  AND DETAIL_TYPE                   = '50'
INNER JOIN
      CLARITY_EPM_2    B
ON    PAYOR_ID                      = CUR_PAYOR_ID
  AND RPT_GRP_FOURTEEN_C            = '1'
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( UT.SVC_ISA_FILE_ID            = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO          = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO              = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO              = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO         = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO                 = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ            = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.SVC_CONTR_PAYOR_IND   = 'N'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT  /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLARITY_TX_ID
FROM
(
SELECT DISTINCT
      RTRIM(CLP_CLM_SUBMTR_ID)                   AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')          AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)                        AS SVC_PROC1_CD
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                                 AS SVC_ORGLI_PRVDR_PYMT
     ,RANK()
      OVER ( PARTITION BY RTRIM(CLP_CLM_SUBMTR_ID)
                         ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')
                         ,RTRIM(SVC_PROC1_CD)
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,RTRIM(SVC_PROC1_CD)
                         ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                         ,SVC_SEQ_NO )           AS T_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &NA.EVAL&NA_TBL.EVAL
ON    NA_ISA_FILE_ID             = ST_ISA_FILE_ID
  AND NA_GS_GRP_SEQ_NO           = ST_GS_GRP_SEQ_NO
  AND NA_ST_SEQ_NO               = ST_SEQ_NO
  AND RTRIM(NA_N1_ENTITY_ID_CD)  = 'PR'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD            = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND SVC_CONTR_PAYOR_IND       <> 'N'
  AND (    RTRIM(SVC_CLARITY_TX_ID) = '0'
        OR RTRIM(SVC_CLARITY_TX_ID) IS NULL )
  AND SVC_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD             = '   '
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   &CP.EVAL&CP_TBL.EVAL
      WHERE  CP_NEIC_ID          = RTRIM(NA_N1_ID_CD))
ORDER BY 1,2,3,4
) T0
INNER JOIN
(
SELECT DISTINCT
      CLP_CLM_SUBMTR_ID
	 ,SVC_DTM_DATE
	 ,SVC_PROC1_CD
     ,SVC_ORGLI_PRVDR_PYMT
     ,RANK()
      OVER ( PARTITION BY CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
                         ,SVC_ORGLI_PRVDR_PYMT
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,SVC_DTM_DATE
                         ,SVC_PROC1_CD
                         ,SVC_ORGLI_PRVDR_PYMT
                         ,TX_ID  )             AS T_RANK
     ,COALESCE( TX_ID, 0 )                     AS CLARITY_TX_ID
FROM
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)                 AS CLP_CLM_SUBMTR_ID
 	 ,RTRIM(SVC_PROC1_CD)                      AS SVC_PROC1_CD
	 ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')        AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,SVC_SEQ_NO
     ,RTRIM(NA_N1_ID_CD)                       AS NA_N1_ID_CD
FROM &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &NA.EVAL&NA_TBL.EVAL
ON    NA_ISA_FILE_ID             = ST_ISA_FILE_ID
  AND NA_GS_GRP_SEQ_NO           = ST_GS_GRP_SEQ_NO
  AND NA_ST_SEQ_NO               = ST_SEQ_NO
  AND RTRIM(NA_N1_ENTITY_ID_CD)  = 'PR'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD            = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND SVC_CONTR_PAYOR_IND       <> 'N'
  AND (    RTRIM(SVC_CLARITY_TX_ID) = '0'
        OR RTRIM(SVC_CLARITY_TX_ID) IS NULL )
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD             = '   '
ORDER BY 1,2,3
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    INVOICE_NUMBER             = CLP_CLM_SUBMTR_ID
  AND CPT_CODE                   = SVC_PROC1_CD
  AND ORIG_SERVICE_DATE          = SVC_DTM_DATE
  AND DETAIL_TYPE                = '50'
  AND (    ORIG_AMT              = SVC_ORGLI_PRVDR_PYMT
        OR ORIG_AMT              = 0-SVC_ORGLI_PRVDR_PYMT )
LEFT
OUTER JOIN
      CLARITY_EPM_2    B
ON    PAYOR_ID                   = CUR_PAYOR_ID
  AND RPT_GRP_FOURTEEN_C         = '1'
WHERE NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   &CP.EVAL&CP_TBL.EVAL
      WHERE  CP_NEIC_ID          = NA_N1_ID_CD)
ORDER BY 1,2,3,4
) T1
ON    T1.CLP_CLM_SUBMTR_ID       = T0.CLP_CLM_SUBMTR_ID
  AND T1.SVC_DTM_DATE            = T0.SVC_DTM_DATE
  AND T1.SVC_PROC1_CD            = T0.SVC_PROC1_CD
  AND T1.SVC_ORGLI_PRVDR_PYMT    = T0.SVC_ORGLI_PRVDR_PYMT
  AND T1.T_RANK                  = T0.T_RANK
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.SVC_ISA_FILE_ID         = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO       = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO           = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO           = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO      = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO              = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ         = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE
SET   UT.SVC_CLARITY_TX_ID       = ST.CLARITY_TX_ID
     ,UT.SVC_CONTR_PAYOR_IND     = 'N'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
