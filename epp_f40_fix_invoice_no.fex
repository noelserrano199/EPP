-******************************************************************************
-* Program:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP1/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT  /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,T4.INVOICE_NUMBER
     ,T4.TOT_PRICE
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      UPPER(RTRIM(NM1_PT_LST_NM))               AS NM1_PT_LST_NM
     ,UPPER(RTRIM(NM1_PT_FST_NM))               AS NM1_PT_FST_NM
     ,COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                                                AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')         AS DOS
     ,RTRIM(SVC_PROC1_CD)                       AS CPT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                                AS PRICE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                                AS PAYMENT
     ,RANK()OVER ( PARTITION BY UPPER(RTRIM(NM1_PT_LST_NM))
                               ,UPPER(RTRIM(NM1_PT_FST_NM))
                               ,COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                               ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
                               ,RTRIM(SVC_PROC1_CD)
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                   ORDER BY     UPPER(RTRIM(NM1_PT_LST_NM))
                               ,UPPER(RTRIM(NM1_PT_FST_NM))
                               ,COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                               ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
                               ,RTRIM(SVC_PROC1_CD)
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                               ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                               ,SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,SVC_CLP_CLM_SEQ_NO
                               ,SVC_SEQ_NO )     AS S_RANK
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND RTRIM(CLP_CLM_STATUS_CD)<> '22'
INNER JOIN
      &NM1.EVAL&NM1_TBL.EVAL
ON    NM1_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND NM1_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND NM1_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND NM1_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND NM1_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(NM1_ENTITY_ID_CD)  = 'QC'
  AND RTRIM(NM1_PT_LST_NM) NOT IN('POSTING','IMAGE','PARTNERS MEDICAL GRO','HEALTHCARE INS CO','DOE')
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_CLARITY_TX_ID        = 0
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1,2,3,4,5,6,7
) T0
INNER JOIN
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      UPPER(PAT_LAST_NAME)   AS PAT_LAST_NAME
     ,UPPER(PAT_FIRST_NAME)  AS PAT_FIRST_NAME
     ,CLP_CLM_SUBMTR_ID
     ,DOS
     ,CPT
     ,PRICE
     ,PAYMENT
     ,RANK()OVER ( PARTITION BY PAT_LAST_NAME
                               ,PAT_FIRST_NAME
                               ,CLP_CLM_SUBMTR_ID
                               ,DOS
                               ,CPT
                               ,PAYMENT
                   ORDER BY     PAT_LAST_NAME
                               ,PAT_FIRST_NAME
                               ,CLP_CLM_SUBMTR_ID
                               ,DOS
                               ,CPT
                               ,PAYMENT
                               ,INVOICE_NUMBER
                               ,PMT_PCT DESC ) AS T_RANK
     ,INVOICE_NUMBER
     ,TOT_PRICE
     ,TOT_OUTSTANDING
     ,PMT_PCT
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,CLP_CLM_SUBMTR_ID
     ,DOS
     ,CPT
     ,PRICE
     ,PAYMENT
     ,INVOICE_NUMBER
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CUR_FIN_CLASS
     ,SUM(XORIG_PRICE)      AS TOT_PRICE
     ,SUM(OUTSTANDING_AMT)  AS TOT_OUTSTANDING
     ,PAYMENT/SUM(OUTSTANDING_AMT)
                            AS PMT_PCT
FROM
(
SELECT /*+ INDEX(A CLARITY_TDL_TRAN_PAT_ID) NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,CLP_CLM_SUBMTR_ID
     ,ORIG_SERVICE_DATE
     ,DOS
     ,A.CPT_CODE
     ,CPT
     ,PRICE
     ,PAYMENT
     ,OUTSTANDING_AMT
     ,MIN(A.INVOICE_NUMBER) AS INVOICE_NUMBER
     ,A.TX_ID
     ,A.CPT_CODE
     ,CASE WHEN A.BILL_CLAIM_AMOUNT = A.ORIG_AMT
                THEN CAST(A.BILL_CLAIM_AMOUNT AS NUMBER(10,2))
           ELSE CAST(A.ORIG_PRICE AS NUMBER(10,2))
      END                                       AS XORIG_PRICE
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,A.CUR_FIN_CLASS
FROM
(
SELECT /*+ INDEX(P IND_PATIENT_NAME P2 IND_PATIENT_NAME) NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      PAT_ID
     ,PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,NM1_PT_LST_NM
     ,NM1_PT_FST_NM
     ,CLP_CLM_SUBMTR_ID
     ,DOS
     ,CPT
     ,PRICE
     ,PAYMENT
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      UPPER(RTRIM(NM1_PT_LST_NM))               AS NM1_PT_LST_NM
     ,UPPER(RTRIM(NM1_PT_FST_NM))               AS NM1_PT_FST_NM
     ,COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                                                AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')         AS DOS
     ,RTRIM(SVC_PROC1_CD)                       AS CPT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                                AS PRICE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                                AS PAYMENT
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID             = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)   = 'EDC'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND RTRIM(CLP_CLM_STATUS_CD)<> '22'
  AND NOT EXISTS
    ( SELECT /*+ INDEX(X IDX_CLARITY_TDL_TRAN_INV_C) NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM CLARITY_TDL_TRAN X
      WHERE X.INVOICE_NUMBER = COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999'))
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_CLARITY_TX_ID        = 0
  AND RTRIM(SVC_PROC1_CD)      = 'ZZE01'
  AND SVC_EXCL_RSN_CD          = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) > 0
  AND NOT EXISTS
    ( SELECT /*+ INDEX(S2 &SVC_PK.EVAL) NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL S2
      WHERE S2.SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND S2.SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND S2.SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND S2.SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND S2.SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND S2.SVC_EXCL_RSN_CD    = '   '
        AND S2.SVC_SEQ_NO        <> S1.SVC_SEQ_NO )
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
INNER JOIN
      &NM1.EVAL&NM1_TBL.EVAL
ON    NM1_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND NM1_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND NM1_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND NM1_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND NM1_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(NM1_ENTITY_ID_CD)  = 'QC'
  AND RTRIM(NM1_PT_LST_NM) NOT IN('POSTING','IMAGE','PARTNERS MEDICAL GRO','HEALTHCARE INS CO','DOE')
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1,2,3
)
INNER JOIN
      PATIENT P
ON    UPPER(PAT_LAST_NAME)  = NM1_PT_LST_NM
  AND ((UPPER(PAT_FIRST_NAME) = NM1_PT_FST_NM)
    OR (  UPPER(SUBSTR(PAT_FIRST_NAME,1,4)) = SUBSTR(NM1_PT_FST_NM,1,4)
      AND NOT EXISTS
        ( SELECT 1
          FROM  PATIENT P2
          WHERE UPPER(PAT_LAST_NAME)  = NM1_PT_LST_NM
            AND UPPER(PAT_FIRST_NAME) = NM1_PT_FST_NM)))
ORDER BY
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,DOS DESC
) T1
INNER JOIN
      CLARITY_TDL_TRAN  A
ON    A.INT_PAT_ID        = T1.PAT_ID
  AND A.DETAIL_TYPE       = 50
  AND A.ORIG_SERVICE_DATE = DOS
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID               = A.TX_ID
  AND B.OUTSTANDING_AMT     > 0
GROUP BY
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,CLP_CLM_SUBMTR_ID
     ,ORIG_SERVICE_DATE
     ,DOS
     ,A.CPT_CODE
     ,CPT
     ,PRICE
     ,PAYMENT
     ,OUTSTANDING_AMT
     ,A.TX_ID
     ,A.CPT_CODE
     ,CASE WHEN A.BILL_CLAIM_AMOUNT = A.ORIG_AMT
                THEN CAST(A.BILL_CLAIM_AMOUNT AS NUMBER(10,2))
           ELSE CAST(A.ORIG_PRICE AS NUMBER(10,2))  END
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,A.CUR_FIN_CLASS
ORDER BY
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,DOS DESC
) T2
GROUP BY
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,CLP_CLM_SUBMTR_ID
     ,INVOICE_NUMBER
     ,DOS
     ,CPT
     ,PAYMENT
     ,PRICE
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CUR_FIN_CLASS
HAVING  PAYMENT/SUM(OUTSTANDING_AMT) BETWEEN .20  AND 1
  OR (  PAYMENT/SUM(OUTSTANDING_AMT) BETWEEN .169 AND 1
    AND CUR_FIN_CLASS = 5 )
ORDER BY
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,INVOICE_NUMBER
     ,DOS
     ,CPT
     ,PAYMENT
     ,PAYMENT/SUM(OUTSTANDING_AMT) DESC
) T3
ORDER BY
      PAT_LAST_NAME
     ,PAT_FIRST_NAME
     ,INVOICE_NUMBER
) T4
ON    T4.PAT_LAST_NAME     = NM1_PT_LST_NM
  AND T4.PAT_FIRST_NAME    = NM1_PT_FST_NM
  AND T4.CLP_CLM_SUBMTR_ID = T0.CLP_CLM_SUBMTR_ID
  AND T4.DOS               = T0.DOS
  AND T4.CPT               = T0.CPT
  AND T4.PRICE             = T0.PRICE
  AND T4.PAYMENT           = T0.PAYMENT
  AND T4.T_RANK            = T0.S_RANK
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID       = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO     = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO         = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO         = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO    = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO            = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ       = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_RVSD_INVC_NO      = ST.INVOICE_NUMBER
     ,UT.SVC_MULTI_USE_AMOUNT  = ST.TOT_PRICE
     ,UT.SVC_EXCL_RSN_CD       = 'F40'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'F40'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Write a new SVC which will be connected to a new CLP - different invoice
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,RANK()OVER ( PARTITION BY SVC_RVSD_INVC_NO
                   ORDER BY     SVC_RVSD_INVC_NO
                               ,A.TX_ID )+2
                                AS SVC_SEQ_NO
     ,1                         AS SVC_EPP_GEN_SEQ
     ,SVC_COMP_SEPERATOR
     ,SVC_PROC1_SVC_ID_QLFR
     ,A.CPT_CODE                AS SVC_PROC1_CD
     ,SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4
     ,A.ORIG_AMT                AS SVC_ORGLI_PRVDR_PYMT
     ,CAST(SVC_LI_PRVDR_PYMT*(A.ORIG_AMT/CAST(SVC_MULTI_USE_AMOUNT AS NUMBER(10,2))) AS NUMBER(10,2))
                                AS SVC_LI_PRVDR_PYMT
     ,SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT
     ,' '                       AS SVC_PROC2_SVC_ID_QLFR
     ,' '                       AS SVC_PROC2_CD
     ,' '                       AS SVC_PROC2_MODF1
     ,' '                       AS SVC_PROC2_MODF2
     ,' '                       AS SVC_PROC2_MODF3
     ,' '                       AS SVC_PROC2_MODF4
     ,' '                       AS SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT
     ,A.TX_ID                   AS SVC_CLARITY_TX_ID
     ,'F40'                     AS SVC_TX_ID_MATCH_TYPE
     ,SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND
     ,SVC_RVSD_INVC_NO
     ,B.OUTSTANDING_AMT         AS SVC_CURRENT_BALANCE
     ,SVC_INS_AMOUNT_PAID
     ,SVC_INS_AMOUNT_ADJ
     ,SVC_CRG_IS_VOID_YN
     ,SVC_PRIOR_DENIAL_YN
     ,SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO
     ,'F40'                     AS SVC_INCL_RSN_CD
     ,'   '                     AS SVC_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER         = SVC_RVSD_INVC_NO
  AND A.ORIG_SERVICE_DATE      = TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                  = A.TX_ID
  AND B.OUTSTANDING_AMT        > 0
WHERE SVC_EXCL_RSN_CD          = 'F40'
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ+1
     ,SVC_DTM_DTTM_QLFR
     ,SVC_DTM_DATE
     ,SVC_DTM_TIME
     ,SVC_DTM_TIME_CD
     ,SVC_DTM_DTTM_PD_FMT_QLFR
     ,SVC_DTM_DTTM_PD
	 ,'F40'                                          AS SVC_DTM_INCL_RSN_CD
	 ,'   '                                          AS SVC_DTM_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO   = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F40'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = S1.SVC_SEQ_NO
  AND SVC_DTM_EXCL_RSN_CD     = '   '
WHERE S1.SVC_EXCL_RSN_CD      = 'F40'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,1                         AS SVC_CAS_SEQ_NO
     ,1                         AS SVC_CAS_EPP_GEN_SEQ
     ,'CO'                      AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,'45'                      AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
         -TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))
                                AS SVC_CAS_CLM_ADJ_AMT1
     ,' '                       AS SVC_CAS_CLM_ADJ_QTY1
     ,' '                       AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,' '                       AS SVC_CAS_CLM_ADJ_AMT2
     ,' '                       AS SVC_CAS_CLM_ADJ_QTY2
     ,' '                       AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,' '                       AS SVC_CAS_CLM_ADJ_AMT3
     ,' '                       AS SVC_CAS_CLM_ADJ_QTY3
     ,' '                       AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,' '                       AS SVC_CAS_CLM_ADJ_AMT4
     ,' '                       AS SVC_CAS_CLM_ADJ_QTY4
     ,' '                       AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,' '                       AS SVC_CAS_CLM_ADJ_AMT5
     ,' '                       AS SVC_CAS_CLM_ADJ_QTY5
     ,' '                       AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,' '                       AS SVC_CAS_CLM_ADJ_AMT6
     ,' '                       AS SVC_CAS_CLM_ADJ_QTY6
     ,'F40'                     AS SVC_CAS_INCL_RSN_CD
     ,'   '                     AS SVC_CAS_EXCL_RSN_CD
     ,0                         AS SVC_CAS_PATIENT_PYMT
FROM
      &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO   = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F40'
WHERE S1.SVC_EXCL_RSN_CD      = 'F40'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_INCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  SVC_EXCL_RSN_CD    = 'F40' )
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.CLP_ISA_FILE_ID        = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO      = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO          = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO          = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO         = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ        = UT.CLP_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.CLP_EXCL_RSN_CD   = 'F40'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Add a new CLP for each different invoice needed
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID                  AS CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO                AS CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO                    AS CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO                    AS CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO                   AS CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1                AS CLP_EPP_GEN_SEQ
     ,S1.SVC_RVSD_INVC_NO              AS CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(S2.SVC_ORGLI_PRVDR_PYMT))
                                       AS CLP_TOT_CLM_CRG_AMT
     ,SUM(TO_NUMBER(S2.SVC_LI_PRVDR_PYMT))
                                       AS CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,'F40'                            AS CLP_CL_TX_MATCH_TYPE
     ,CLP_CLM_SUBMTR_ID                AS CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,0                                AS CLP_INVC_CRG_COUNT
     ,0                                AS CLP_MATCHED_CRG_CNT
     ,0                                AS CLP_ORIG_PRICE
     ,0                                AS CLP_CURRENT_BALANCE
     ,CLP_CLM_SEQ_NO                   AS CLP_MULTI_USE_AMOUNT
     ,'N'                              AS CLP_IS_TAKEBACK_YN
     ,'F40'                            AS CLP_INCL_RSN_CD
     ,'   '                            AS CLP_EXCL_RSN_CD
FROM
      &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO   = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F40'
  AND S2.SVC_EXCL_RSN_CD      = '   '
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID         = S1.SVC_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO       = S1.SVC_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO           = S1.SVC_ST_SEQ_NO
  AND CLP_LX_SEQ_NO           = S1.SVC_LX_SEQ_NO
  AND CLP_CLM_SEQ_NO          = S1.SVC_CLP_CLM_SEQ_NO
  AND CLP_EXCL_RSN_CD         = 'F40'
WHERE S1.SVC_EXCL_RSN_CD      = 'F40'
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1
     ,S1.SVC_RVSD_INVC_NO
     ,CLP_CLM_STATUS_CD
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CLM_SUBMTR_ID
     ,CLP_INVC_FIN_CLASS
     ,CLP_CLM_SEQ_NO
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
