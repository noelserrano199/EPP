-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP/EPP_EPP3_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Match payment to charge by Invoice, DOS, CPT and Price
-TYPE &NOWTIME.EVAL *** CLARITY_TDL_TRAN.BILL_CLAIM_AMOUNT = SVC_ORGLI_PRVDR_PYMT
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT  /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,S2.SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
	    ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                             AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))
                             AS SVC_LI_PRVDR_PYMT
	    ,RTRIM(S2.SVC_PROC1_CD)
     ,MIN(LINE)              AS LINE
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,SVC_PROC1_CD
	    ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,LINE
FROM
(
SELECT /*+ INDEX(A IDX_CLARITY_TDL_TRAN_INV_C) INDEX(C PK_TX_INVOICES) INDEX(D PK_INV_CLM_LN_ADDL) NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
   	 ,D.PROC_OR_REV_CODE                 AS SVC_PROC1_CD
	    ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,CASE WHEN INSTR(D.TRANSACTION_LIST,',', 1, 1) = 0
                THEN TO_NUMBER(D.TRANSACTION_LIST)
           ELSE C.LINE
      END                                AS LINE
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      RTRIM(CLP_CLM_SUBMTR_ID)           AS CLP_CLM_SUBMTR_ID
   	 ,RTRIM(SVC_PROC1_CD)                AS SVC_PROC1_CD
   	 ,TO_DATE(SVC_DTM_DATE, 'yyyymmdd')  AS SVC_DTM_DATE
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                         AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                         AS SVC_LI_PRVDR_PYMT
     ,CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID            = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO          = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO              = ST_SEQ_NO
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
  AND CLP_EXCL_RSN_CD            = '   '
-*
-*  AND RTRIM(CLP_CLM_SUBMTR_ID)   = 'P1047836541'
-*
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID            = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO          = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO              = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO              = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO         = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID)   = '0'
  AND SVC_EXCL_RSN_CD            = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD             = '   '
ORDER BY 1,2,3,4
) T1
INNER JOIN
      CLARITY_TDL_TRAN  A
ON    A.INVOICE_NUMBER           = CLP_CLM_SUBMTR_ID
  AND A.CPT_CODE                 = SVC_PROC1_CD
  AND A.ORIG_SERVICE_DATE        = SVC_DTM_DATE
  AND A.DETAIL_TYPE              = '50'
INNER JOIN
      TX_INVOICES C
ON    C.TX_ID                    = A.TX_ID
  AND C.INVOICE_NUM              = A.INVOICE_NUMBER
INNER JOIN
      INV_CLM_LN_ADDL D
ON    D.INVOICE_ID               = C.INVOICE_ID
  AND D.LINE                     = C.LINE
  AND D.PROC_OR_REV_CODE         = A.CPT_CODE
  AND D.FROM_SVC_DATE            = A.ORIG_SERVICE_DATE
  AND D.QUANTITY                 > 1
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
   	 ,D.PROC_OR_REV_CODE
   	 ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,D.TRANSACTION_LIST
     ,C.LINE
HAVING SVC_ORGLI_PRVDR_PYMT = SUM(A.ORIG_PRICE)
    OR SVC_ORGLI_PRVDR_PYMT = SUM(A.BILL_CLAIM_AMOUNT)
)
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
   	 ,SVC_PROC1_CD
   	 ,SVC_DTM_DATE
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,LINE
ORDER BY 1,2,3,4,5,6
) T1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID        = T1.CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO      = T1.CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO          = T1.CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO          = T1.CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO     = T1.CLP_CLM_SEQ_NO
  AND S2.SVC_LI_PRVDR_PYMT      = T1.SVC_LI_PRVDR_PYMT
  AND RTRIM(SVC_CLARITY_TX_ID)  = '0'
  AND RTRIM(S2.SVC_PROC1_CD)    = T1.SVC_PROC1_CD
  AND TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                = T1.SVC_ORGLI_PRVDR_PYMT
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID    = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO  = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO      = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO      = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO     = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D2.SVC_DTM_EXCL_RSN_CD    = '   '
  AND TO_DATE(D2.SVC_DTM_DATE, 'YYYYMMDD') = T1.SVC_DTM_DATE
GROUP BY
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,S2.SVC_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
	    ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
     ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))
	    ,RTRIM(S2.SVC_PROC1_CD)
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( UT.SVC_ISA_FILE_ID        = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO      = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO          = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO          = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO     = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO             = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ        = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_TX_ID_MATCH_TYPE   = 'MP7'
     ,UT.SVC_CLARITY_TX_ID      = ST.LINE
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_TX_ID_MATCH_TYPE  = 'MP7'
  AND  ROWNUM                < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Mark Zero Balance/Unvoided Charges as Excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID              = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO            = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO                = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD              = '   '
  AND RTRIM(CLP_CLM_STATUS_CD)    <> '22'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID              = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO            = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO                = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO                = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO           = CLP_CLM_SEQ_NO
  AND SVC_TX_ID_MATCH_TYPE         = 'MP7'
  AND SVC_CRG_IS_VOID_YN           = 'Y'
  AND SVC_EXCL_RSN_CD              = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
) ST
ON  ( ST.SVC_ISA_FILE_ID         = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO       = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO           = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO           = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO      = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO              = UT.SVC_SEQ_NO )
WHEN MATCHED THEN
UPDATE SET UT.SVC_EXCL_RSN_CD    = 'MP7'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD = '   '
  AND EXISTS
   (  SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  SVC_EXCL_RSN_CD    = 'MP7' )
ORDER BY 1,2,3,4,5,6
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET UT.CLP_EXCL_RSN_CD   = 'MP7'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &RETCODE.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Add a new CLP for each different invoice needed
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1                       AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(SVC_ORGLI_PRVDR_PYMT))    AS CLP_TOT_CLM_CRG_AMT
     ,SUM(TO_NUMBER(SVC_LI_PRVDR_PYMT))       AS CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'MP7'                            AS CLP_INCL_RSN_CD
     ,'   '                            AS CLP_EXCL_RSN_CD
FROM
      &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID      = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO    = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO        = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD      = 'MP7'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID      = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO    = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO        = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO        = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO   = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD      = '   '
WHERE ST_EXCL_RSN_CD       = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
