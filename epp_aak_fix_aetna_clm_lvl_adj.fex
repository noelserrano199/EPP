-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-TYPE Only Aetna Files
-TYPE *************************************************************************
-*-IF  '&PAYER.EVAL' NE 'AETNA' THEN GOTO THE_END;
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
-*MERGE INTO &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL UT
-*USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
     ,CLP_CAS_SEQ_NO
     ,CLP_CAS_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,SUM(B.OUTSTANDING_AMT)
FROM
(
SELECT
      RTRIM(CLP_CLM_SUBMTR_ID)   AS CLP_CLM_SUBMTR_ID
     ,CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
     ,CLP_CAS_SEQ_NO
     ,CLP_CAS_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL CC1
ON    CLP_CAS_ISA_FILE_ID       = CLP_ISA_FILE_ID
  AND CLP_CAS_GS_GRP_SEQ_NO     = CLP_GS_GRP_SEQ_NO
  AND CLP_CAS_ST_SEQ_NO         = CLP_ST_SEQ_NO
  AND CLP_CAS_LX_SEQ_NO         = CLP_LX_SEQ_NO
  AND CLP_CAS_CLP_CLM_SEQ_NO    = CLP_CLM_SEQ_NO
  AND CLP_CAS_EXCL_RSN_CD       = '   '
  AND RTRIM(CLP_CAS_CLM_ADJ_AMT2)     IS NULL
  AND RTRIM(CLP_CAS_CLM_ADJ_RSN_CD1)  IN('18','97')
  AND TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0')) = 0
WHERE ST_EXCL_RSN_CD            = '   '
  AND NOT EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD           = '   ' )
  AND NOT EXISTS
    ( SELECT 1
      FROM  &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL CC2
      WHERE CC2.CLP_CAS_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND CC2.CLP_CAS_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND CC2.CLP_CAS_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND CC2.CLP_CAS_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND CC2.CLP_CAS_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND CC2.CLP_CAS_SEQ_NO        <> CC1.CLP_CAS_SEQ_NO )
ORDER BY 1
)
INNER JOIN
      CLARITY_TDL_TRAN  A
ON    A.INVOICE_NUMBER          = CLP_CLM_SUBMTR_ID
  AND A.DETAIL_TYPE             = 50
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                   = A.TX_ID
GROUP BY
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
     ,CLP_CAS_SEQ_NO
     ,CLP_CAS_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
HAVING SUM(B.OUTSTANDING_AMT)   = 0
ORDER BY 1,2,3,4,5,6,7
-*) ST
-*ON  ( UT.CLP_CAS_ISA_FILE_ID    = ST.CLP_CAS_ISA_FILE_ID
-*  AND UT.CLP_CAS_GS_GRP_SEQ_NO  = ST.CLP_CAS_GS_GRP_SEQ_NO
-*  AND UT.CLP_CAS_ST_SEQ_NO      = ST.CLP_CAS_ST_SEQ_NO
-*  AND UT.CLP_CAS_LX_SEQ_NO      = ST.CLP_CAS_LX_SEQ_NO
-*  AND UT.CLP_CAS_CLP_CLM_SEQ_NO = ST.CLP_CAS_CLP_CLM_SEQ_NO
-*  AND UT.CLP_CAS_SEQ_NO         = ST.CLP_CAS_SEQ_NO
-*  AND UT.CLP_CAS_EPP_GEN_SEQ    = ST.CLP_CAS_EPP_GEN_SEQ )
-*WHEN MATCHED THEN
-*UPDATE SET
-*      UT.CLP_CAS_EXCL_RSN_CD    = 'AAK'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-EXIT
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
