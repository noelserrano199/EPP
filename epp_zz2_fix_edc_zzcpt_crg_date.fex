-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-TYPE Only EDC Files
-TYPE *************************************************************************
-IF  '&PAYER.EVAL' NE 'EDC' THEN GOTO THE_END;
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,A.TX_ID
FROM
(
SELECT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,RTRIM(CLP_CLM_SUBMTR_ID)                 AS CLP_CLM_SUBMTR_ID
 	 ,RTRIM(SVC_PROC1_CD)                      AS SVC_PROC1_CD
     ,TO_NUMBER(COALESCE(RTRIM(CLP_TOT_CLM_CRG_AMT),'0'))
                                               AS CLP_TOT_CLM_CRG_AMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                               AS SVC_ORGLI_PRVDR_PYMT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                               AS SVC_LI_PRVDR_PYMT
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')        AS SVC_DTM_DATE
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID             = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)   = 'EDC'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND SUBSTR(CLP_CLM_SUBMTR_ID,1,1) = 'P'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID) = 0
  AND SUBSTR(SVC_PROC1_CD,1,2) = 'ZZ'
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1,2,3,4
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER         = CLP_CLM_SUBMTR_ID
  AND A.DETAIL_TYPE            = '50'
  AND A.ORIG_PRICE             = SVC_ORGLI_PRVDR_PYMT
  AND A.ORIG_SERVICE_DATE     <> SVC_DTM_DATE
  AND EXISTS
  ( SELECT COUNT(*)
    FROM   CLARITY_TDL_TRAN A
    WHERE  A.INVOICE_NUMBER    = CLP_CLM_SUBMTR_ID
      AND  A.DETAIL_TYPE       = '50'
    HAVING COUNT(*)            = 1 )
INNER JOIN
      ARPB_TRANSACTIONS     B
ON    B.TX_ID                  = A.TX_ID
  AND B.VOID_DATE              IS NULL
) ST
ON  ( ST.SVC_ISA_FILE_ID       = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO     = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO         = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO         = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO    = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO            = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ       = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_CLARITY_TX_ID     = ST.TX_ID
     ,UT.SVC_EXCL_RSN_CD       = 'ZZ2'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID                AS SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO              AS SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO                  AS SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO                  AS SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO             AS SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO                     AS SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ+1              AS SVC_EPP_GEN_SEQ
     ,SVC_COMP_SEPERATOR             AS SVC_COMP_SEPERATOR
     ,SVC_PROC1_SVC_ID_QLFR          AS SVC_PROC1_SVC_ID_QLFR
     ,A.CPT_CODE                     AS SVC_PROC1_CD
     ,SVC_PROC1_MODF1                AS SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2                AS SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3                AS SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4                AS SVC_PROC1_MODF4
     ,SVC_ORGLI_PRVDR_PYMT           AS SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT              AS SVC_LI_PRVDR_PYMT
     ,SVC_NTL_BILNG_REV_CD           AS SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT            AS SVC_UNTS_SVC_PD_CNT
     ,SVC_PROC2_SVC_ID_QLFR          AS SVC_PROC2_SVC_ID_QLFR
     ,SVC_PROC2_CD                   AS SVC_PROC2_CD
     ,SVC_PROC2_MODF1                AS SVC_PROC2_MODF1
     ,SVC_PROC2_MODF2                AS SVC_PROC2_MODF2
     ,SVC_PROC2_MODF3                AS SVC_PROC2_MODF3
     ,SVC_PROC2_MODF4                AS SVC_PROC2_MODF4
     ,SVC_PROC2_CD_DESC              AS SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT           AS SVC_ORG_UNTS_SVC_CNT
     ,SVC_CLARITY_TX_ID              AS SVC_CLARITY_TX_ID
     ,'ZZ2'                          AS SVC_TX_ID_MATCH_TYPE
     ,SVC_CONTR_PAYOR_IND            AS SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND                AS SVC_DUP_PMT_IND
     ,RTRIM(CLP_CLM_SUBMTR_ID)       AS SVC_RVSD_INVC_NO
     ,B.OUTSTANDING_AMT              AS SVC_CURRENT_BALANCE
     ,B.TOTAL_MTCH_INS_AMT           AS SVC_INS_AMOUNT_PAID
     ,B.TOTAL_MTCH_INS_ADJ           AS SVC_INS_AMOUNT_ADJ
     ,CASE WHEN B.VOID_DATE IS NULL
                THEN 'N'
           ELSE 'Y'             END  AS SVC_CRG_IS_VOID_YN
     ,SVC_PRIOR_DENIAL_YN            AS SVC_PRIOR_DENIAL_YN
     ,SVC_MULTI_USE_AMOUNT           AS SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO                   AS SVC_SCENARIO
     ,'ZZ2'                          AS SVC_INCL_RSN_CD
     ,'   '                          AS SVC_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID             = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)   = 'EDC'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SUBSTR(SVC_PROC1_CD,1,2) = 'ZZ'
  AND SVC_EXCL_RSN_CD          = 'ZZ2'
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.TX_ID                  = SVC_CLARITY_TX_ID
  AND A.DETAIL_TYPE            = 50
  AND INVOICE_NUMBER           = RTRIM(CLP_CLM_SUBMTR_ID)
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                  = A.TX_ID
WHERE ST_EXCL_RSN_CD           = '   '
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark original SVC_DTM with bad date for exclusion
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL UT
USING (
SELECT
      SVC_DTM_ISA_FILE_ID
     ,SVC_DTM_GS_GRP_SEQ_NO
     ,SVC_DTM_ST_SEQ_NO
     ,SVC_DTM_LX_SEQ_NO
     ,SVC_DTM_CLP_CLM_SEQ_NO
     ,SVC_DTM_SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ
FROM  &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
WHERE EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID    = SVC_DTM_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO  = SVC_DTM_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO      = SVC_DTM_ST_SEQ_NO
        AND  SVC_LX_SEQ_NO      = SVC_DTM_LX_SEQ_NO
        AND  SVC_CLP_CLM_SEQ_NO = SVC_DTM_CLP_CLM_SEQ_NO
        AND  SVC_SEQ_NO         = SVC_DTM_SVC_SEQ_NO
        AND  SVC_INCL_RSN_CD    = 'ZZ2'
        AND  SVC_EXCL_RSN_CD    = '   ' )
) ST
ON  ( UT.SVC_DTM_ISA_FILE_ID   = ST.SVC_DTM_ISA_FILE_ID
  AND UT.SVC_DTM_GS_GRP_SEQ_NO = ST.SVC_DTM_GS_GRP_SEQ_NO
  AND UT.SVC_DTM_ST_SEQ_NO     = ST.SVC_DTM_ST_SEQ_NO
  AND UT.SVC_DTM_LX_SEQ_NO     = ST.SVC_DTM_LX_SEQ_NO
  AND UT.SVC_DTM_CLP_CLM_SEQ_NO= ST.SVC_DTM_CLP_CLM_SEQ_NO
  AND UT.SVC_DTM_SVC_SEQ_NO    = ST.SVC_DTM_SVC_SEQ_NO
  AND UT.SVC_DTM_SEQ_NO        = ST.SVC_DTM_SEQ_NO
  AND UT.SVC_DTM_EPP_GEN_SEQ   = ST.SVC_DTM_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_DTM_EXCL_RSN_CD   = 'ZZ2'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_DTM_ISA_FILE_ID
     ,SVC_DTM_GS_GRP_SEQ_NO
     ,SVC_DTM_ST_SEQ_NO
     ,SVC_DTM_LX_SEQ_NO
     ,SVC_DTM_CLP_CLM_SEQ_NO
     ,SVC_DTM_SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ+1           AS SVC_DTM_EPP_GEN_SEQ
     ,SVC_DTM_DTTM_QLFR
     ,TO_CHAR(ORIG_SERVICE_DATE, 'YYYYMMDD')
                                      AS ORIG_SERVICE_DATE
     ,SVC_DTM_TIME
     ,SVC_DTM_TIME_CD
     ,SVC_DTM_DTTM_PD_FMT_QLFR
     ,SVC_DTM_DTTM_PD
	 ,'ZZ2'                           AS SVC_DTM_INCL_RSN_CD
	 ,'   '                           AS SVC_DTM_EXCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_INCL_RSN_CD        = 'ZZ2'
  AND SVC_EXCL_RSN_CD        = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD    = 'ZZ2'
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.TX_ID                = SVC_CLARITY_TX_ID
  AND A.DETAIL_TYPE          = 1
WHERE CLP_EXCL_RSN_CD        = '   '
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
