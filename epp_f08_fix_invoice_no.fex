-******************************************************************************
-* Program:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,ERA_INV_NO
     ,ERA_CPT_CD
     ,ERA_DOS
     ,ERA_PRICE
     ,ERA_PMT
     ,MIN(CLP_CLM_SEQ_NO)                 AS CLP_CLM_SEQ_NO
     ,MAX(TRANSACTION_LIST)               AS CLA_TX_ID
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      RTRIM(C1.CLP_CLM_SUBMTR_ID)         AS ERA_INV_NO
     ,RTRIM(S2.SVC_PROC1_CD)              AS ERA_CPT_CD
     ,TO_DATE(D2.SVC_DTM_DATE,'YYYYMMDD') AS ERA_DOS
     ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                          AS ERA_PRICE
     ,TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))
                                          AS ERA_PMT
     ,S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,S2.SVC_EPP_GEN_SEQ
     ,C1.CLP_CLM_SEQ_NO
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID             = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO           = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO               = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD             = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID             = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO           = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO               = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO               = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO          = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD             = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL  D1
ON    SVC_DTM_ISA_FILE_ID         = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO       = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO           = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO           = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO      = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO          = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR           IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD         = '   '
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL         S3
           ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D3
      WHERE S3.SVC_ISA_FILE_ID         = C1.CLP_ISA_FILE_ID
        AND S3.SVC_GS_GRP_SEQ_NO       = C1.CLP_GS_GRP_SEQ_NO
        AND S3.SVC_ST_SEQ_NO           = C1.CLP_ST_SEQ_NO
        AND S3.SVC_LX_SEQ_NO           = C1.CLP_LX_SEQ_NO
        AND S3.SVC_CLP_CLM_SEQ_NO      = C1.CLP_CLM_SEQ_NO
        AND S3.SVC_SEQ_NO             <> S1.SVC_SEQ_NO
        AND RTRIM(S3.SVC_PROC1_CD)     = RTRIM(S1.SVC_PROC1_CD)
        AND S3.SVC_EXCL_RSN_CD         = '   '
        AND D3.SVC_DTM_ISA_FILE_ID     = S3.SVC_ISA_FILE_ID
        AND D3.SVC_DTM_GS_GRP_SEQ_NO   = S3.SVC_GS_GRP_SEQ_NO
        AND D3.SVC_DTM_ST_SEQ_NO       = S3.SVC_ST_SEQ_NO
        AND D3.SVC_DTM_LX_SEQ_NO       = S3.SVC_LX_SEQ_NO
        AND D3.SVC_DTM_CLP_CLM_SEQ_NO  = S3.SVC_CLP_CLM_SEQ_NO
        AND D3.SVC_DTM_SVC_SEQ_NO      = S3.SVC_SEQ_NO
        AND D3.SVC_DTM_DTTM_QLFR       IN( '472','150' )
        AND D3.SVC_DTM_EXCL_RSN_CD     = '   '
        AND TO_DATE(D3.SVC_DTM_DATE,'YYYYMMDD')
                                       <> TO_DATE(D1.SVC_DTM_DATE,'YYYYMMDD'))
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL         C2
ON    RTRIM(C2.CLP_CLM_SUBMTR_ID)  = RTRIM(C1.CLP_CLM_SUBMTR_ID)
  AND C2.CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND C2.CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND C2.CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND C2.CLP_CLM_SEQ_NO            > C1.CLP_CLM_SEQ_NO
  AND C2.CLP_CLM_STATUS_CD         = C1.CLP_CLM_STATUS_CD
  AND C2.CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL         S2
ON    S2.SVC_ISA_FILE_ID           = C2.CLP_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO         = C2.CLP_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO             = C2.CLP_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO             = C2.CLP_LX_SEQ_NO
  AND S2.SVC_CLP_CLM_SEQ_NO        = C2.CLP_CLM_SEQ_NO
  AND RTRIM(S2.SVC_PROC1_CD)       = RTRIM(S1.SVC_PROC1_CD)
  AND TO_NUMBER(COALESCE(RTRIM(S2.SVC_ORGLI_PRVDR_PYMT),'0'))
                                   = TO_NUMBER(COALESCE(RTRIM(S1.SVC_ORGLI_PRVDR_PYMT),'0'))
  AND TO_NUMBER(COALESCE(RTRIM(S2.SVC_LI_PRVDR_PYMT),'0'))
                                   = TO_NUMBER(COALESCE(RTRIM(S1.SVC_LI_PRVDR_PYMT),'0'))
  AND S2.SVC_EXCL_RSN_CD           = '   '
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL S5
      WHERE  S5.SVC_ISA_FILE_ID    = C2.CLP_ISA_FILE_ID
        AND  S5.SVC_GS_GRP_SEQ_NO  = C2.CLP_GS_GRP_SEQ_NO
        AND  S5.SVC_ST_SEQ_NO      = C2.CLP_ST_SEQ_NO
        AND  S5.SVC_LX_SEQ_NO      = C2.CLP_LX_SEQ_NO
        AND  S5.SVC_CLP_CLM_SEQ_NO = C2.CLP_CLM_SEQ_NO
        AND  S5.SVC_SEQ_NO        <> S2.SVC_SEQ_NO )
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D2
ON    D2.SVC_DTM_ISA_FILE_ID       = S2.SVC_ISA_FILE_ID
  AND D2.SVC_DTM_GS_GRP_SEQ_NO     = S2.SVC_GS_GRP_SEQ_NO
  AND D2.SVC_DTM_ST_SEQ_NO         = S2.SVC_ST_SEQ_NO
  AND D2.SVC_DTM_LX_SEQ_NO         = S2.SVC_LX_SEQ_NO
  AND D2.SVC_DTM_CLP_CLM_SEQ_NO    = S2.SVC_CLP_CLM_SEQ_NO
  AND D2.SVC_DTM_SVC_SEQ_NO        = S2.SVC_SEQ_NO
  AND D2.SVC_DTM_DTTM_QLFR         IN( '472','150' )
  AND D2.SVC_DTM_EXCL_RSN_CD       = '   '
  AND TO_DATE(D2.SVC_DTM_DATE,'YYYYMMDD')
                                   = TO_DATE(D1.SVC_DTM_DATE,'YYYYMMDD')
  AND NOT EXISTS
    ( SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL         S4
           ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D4
      WHERE S4.SVC_ISA_FILE_ID         = C2.CLP_ISA_FILE_ID
        AND S4.SVC_GS_GRP_SEQ_NO       = C2.CLP_GS_GRP_SEQ_NO
        AND S4.SVC_ST_SEQ_NO           = C2.CLP_ST_SEQ_NO
        AND S4.SVC_LX_SEQ_NO           = C2.CLP_LX_SEQ_NO
        AND S4.SVC_CLP_CLM_SEQ_NO      = C2.CLP_CLM_SEQ_NO
        AND S4.SVC_SEQ_NO             <> S2.SVC_SEQ_NO
        AND RTRIM(S4.SVC_PROC1_CD)     = RTRIM(S2.SVC_PROC1_CD)
        AND S4.SVC_EXCL_RSN_CD         = '   '
        AND D4.SVC_DTM_ISA_FILE_ID     = S4.SVC_ISA_FILE_ID
        AND D4.SVC_DTM_GS_GRP_SEQ_NO   = S4.SVC_GS_GRP_SEQ_NO
        AND D4.SVC_DTM_ST_SEQ_NO       = S4.SVC_ST_SEQ_NO
        AND D4.SVC_DTM_LX_SEQ_NO       = S4.SVC_LX_SEQ_NO
        AND D4.SVC_DTM_CLP_CLM_SEQ_NO  = S4.SVC_CLP_CLM_SEQ_NO
        AND D4.SVC_DTM_SVC_SEQ_NO      = S4.SVC_SEQ_NO
        AND D4.SVC_DTM_DTTM_QLFR       IN( '472','150' )
        AND D4.SVC_DTM_EXCL_RSN_CD     = '   '
        AND TO_DATE(D4.SVC_DTM_DATE,'YYYYMMDD')
                                       <> TO_DATE(D2.SVC_DTM_DATE,'YYYYMMDD'))
WHERE ST_EXCL_RSN_CD          = '   '
ORDER BY 1,2,3
) T1
INNER JOIN
      INV_CLM_LN_ADDL    A
ON    A.INVOICE_NUM           = ERA_INV_NO
  AND A.PROC_OR_REV_CODE      = ERA_CPT_CD
  AND A.CHARGE_AMOUNT         = ERA_PRICE
  AND A.FROM_SVC_DATE         = ERA_DOS
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,ERA_INV_NO
     ,ERA_CPT_CD
     ,ERA_DOS
     ,ERA_PRICE
     ,ERA_PMT
-*     ,CLP_CLM_SEQ_NO
HAVING COUNT(*) = 2
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID      = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO    = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO        = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO        = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO   = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO           = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ      = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE
SET   UT.SVC_MULTI_USE_AMOUNT = ST.CLP_CLM_SEQ_NO
     ,UT.SVC_EXCL_RSN_CD      = 'F08'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'F08'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Write a new SVC which will be connected to a new CLP - different invoice
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC.EVAL&SVC_TBL.EVAL
SELECT DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_MULTI_USE_AMOUNT
     ,RANK()OVER ( PARTITION BY SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,CLP_CLM_SEQ_NO
                   ORDER BY     SVC_ISA_FILE_ID
                               ,SVC_GS_GRP_SEQ_NO
                               ,SVC_ST_SEQ_NO
                               ,SVC_LX_SEQ_NO
                               ,CLP_CLM_SEQ_NO
                               ,SVC_SEQ_NO )
      +( SELECT MAX(SVC_SEQ_NO)
         FROM   &SVC.EVAL&SVC_TBL.EVAL S9
         WHERE  S9.SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
           AND  S9.SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
           AND  S9.SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
           AND  S9.SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
           AND  S9.SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO )
                                AS SVC_SEQ_NO
     ,1                         AS SVC_EPP_GEN_SEQ
     ,SVC_COMP_SEPERATOR
     ,SVC_PROC1_SVC_ID_QLFR
     ,SVC_PROC1_CD
     ,SVC_PROC1_MODF1
     ,SVC_PROC1_MODF2
     ,SVC_PROC1_MODF3
     ,SVC_PROC1_MODF4
     ,SVC_ORGLI_PRVDR_PYMT
     ,SVC_LI_PRVDR_PYMT
     ,SVC_NTL_BILNG_REV_CD
     ,SVC_UNTS_SVC_PD_CNT
     ,SVC_PROC2_SVC_ID_QLFR
     ,SVC_PROC2_CD
     ,SVC_PROC2_MODF1
     ,SVC_PROC2_MODF2
     ,SVC_PROC2_MODF3
     ,SVC_PROC2_MODF4
     ,SVC_PROC2_CD_DESC
     ,SVC_ORG_UNTS_SVC_CNT
     ,SVC_CLARITY_TX_ID
     ,SVC_TX_ID_MATCH_TYPE
     ,SVC_CONTR_PAYOR_IND
     ,SVC_DUP_PMT_IND
     ,RTRIM(CLP_CLM_SUBMTR_ID)  AS SVC_RVSD_INVC_NO
     ,SVC_SEQ_NO                AS SVC_CURRENT_BALANCE
     ,SVC_INS_AMOUNT_PAID
     ,SVC_INS_AMOUNT_ADJ
     ,SVC_CRG_IS_VOID_YN
     ,SVC_PRIOR_DENIAL_YN
     ,SVC_CLP_CLM_SEQ_NO        AS SVC_MULTI_USE_AMOUNT
     ,SVC_SCENARIO
     ,'F08'                     AS SVC_INCL_RSN_CD
     ,'   '                     AS SVC_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = SVC_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = SVC_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = SVC_ST_SEQ_NO
  AND CLP_LX_SEQ_NO             = SVC_LX_SEQ_NO
  AND CLP_CLM_SEQ_NO            = SVC_MULTI_USE_AMOUNT
  AND CLP_EXCL_RSN_CD           = '   '
WHERE SVC_EXCL_RSN_CD  = 'F08'
ORDER BY 1,2,3,4,5,6,7
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,( SELECT MAX(SVC_CAS_SEQ_NO)
        FROM   &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL SC2
        WHERE  SC2.SVC_CAS_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
          AND  SC2.SVC_CAS_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
          AND  SC2.SVC_CAS_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
          AND  SC2.SVC_CAS_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
          AND  SC2.SVC_CAS_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
          AND  SC2.SVC_CAS_SVC_SEQ_NO     = S1.SVC_SEQ_NO )
       +DENSE_RANK()
        OVER ( PARTITION BY SVC_CAS_ISA_FILE_ID
                           ,SVC_CAS_GS_GRP_SEQ_NO
                           ,SVC_CAS_ST_SEQ_NO
                           ,SVC_CAS_LX_SEQ_NO
                           ,SVC_CAS_CLP_CLM_SEQ_NO
                           ,SVC_CAS_SVC_SEQ_NO
               ORDER BY     SVC_CAS_ISA_FILE_ID
                           ,SVC_CAS_GS_GRP_SEQ_NO
                           ,SVC_CAS_ST_SEQ_NO
                           ,SVC_CAS_LX_SEQ_NO
                           ,SVC_CAS_CLP_CLM_SEQ_NO
                           ,SVC_CAS_SVC_SEQ_NO
                           ,SVC_CAS_SEQ_NO)  AS SVC_CAS_SEQ_NO
     ,SVC_CAS_EPP_GEN_SEQ+1
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD1
     ,SVC_CAS_CLM_ADJ_AMT1
     ,SVC_CAS_CLM_ADJ_QTY1
     ,SVC_CAS_CLM_ADJ_RSN_CD2
     ,SVC_CAS_CLM_ADJ_AMT2
     ,SVC_CAS_CLM_ADJ_QTY2
     ,SVC_CAS_CLM_ADJ_RSN_CD3
     ,SVC_CAS_CLM_ADJ_AMT3
     ,SVC_CAS_CLM_ADJ_QTY3
     ,SVC_CAS_CLM_ADJ_RSN_CD4
     ,SVC_CAS_CLM_ADJ_AMT4
     ,SVC_CAS_CLM_ADJ_QTY4
     ,SVC_CAS_CLM_ADJ_RSN_CD5
     ,SVC_CAS_CLM_ADJ_AMT5
     ,SVC_CAS_CLM_ADJ_QTY5
     ,SVC_CAS_CLM_ADJ_RSN_CD6
     ,SVC_CAS_CLM_ADJ_AMT6
     ,SVC_CAS_CLM_ADJ_QTY6
     ,'F08'                 AS SVC_CAS_INCL_RSN_CD
     ,'   '                 AS SVC_CAS_EXCL_RSN_CD
     ,SVC_CAS_PATIENT_PYMT
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_MULTI_USE_AMOUNT = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_CURRENT_BALANCE  = S1.SVC_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F08'
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO      = S1.SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD     = '   '
WHERE S1.SVC_EXCL_RSN_CD      = 'F08'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-TYPE -------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,SVC_DTM_SEQ_NO
	 ,SVC_DTM_EPP_GEN_SEQ+1
     ,SVC_DTM_DTTM_QLFR
     ,SVC_DTM_DATE
     ,SVC_DTM_TIME
     ,SVC_DTM_TIME_CD
     ,SVC_DTM_DTTM_PD_FMT_QLFR
     ,SVC_DTM_DTTM_PD
	 ,'F08'                                          AS SVC_DTM_INCL_RSN_CD
	 ,'   '                                          AS SVC_DTM_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_MULTI_USE_AMOUNT = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_CURRENT_BALANCE  = S1.SVC_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F08'
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO      = S1.SVC_SEQ_NO
  AND SVC_DTM_EXCL_RSN_CD     = '   '
WHERE S1.SVC_EXCL_RSN_CD      = 'F08'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP006
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL ***
-TYPE *** Copy SVC-REF segments to new SVC for different invoice
-TYPE *** When old SVC was excluded old SVC-REF also excluded
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_REF.EVAL&SVC_REF_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,SVC_REF_SEQ_NO
     ,SVC_REF_EPP_GEN_SEQ+1
     ,SVC_REF_ID_QLFR
     ,SVC_REF_ID
     ,SVC_REF_DESC
     ,'F08'                                          AS SVC_REF_INCL_RSN_CD
     ,'   '                                          AS SVC_REF_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_MULTI_USE_AMOUNT = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_CURRENT_BALANCE  = S1.SVC_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F08'
INNER JOIN
      &SVC_REF.EVAL&SVC_REF_TBL.EVAL
ON    SVC_REF_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_REF_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_REF_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_REF_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_REF_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_REF_SVC_SEQ_NO      = S1.SVC_SEQ_NO
WHERE S1.SVC_EXCL_RSN_CD      = 'F08'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP007
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP007';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Copy LQ segments to new SVC for different invoice
-TYPE *** When old SVC was excluded old LQ also excluded
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &LQ.EVAL&LQ_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,LQ_SEQ_NO
     ,LQ_EPP_GEN_SEQ+1
     ,LQ_FORM_TYP_CD
     ,LQ_INDUSTRY_CD
     ,'F08'                     AS LQ_INCL_RSN_CD
     ,'   '                     AS LQ_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_MULTI_USE_AMOUNT = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_CURRENT_BALANCE  = S1.SVC_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F08'
INNER JOIN
      &LQ.EVAL&LQ_TBL.EVAL
ON    LQ_ISA_FILE_ID          = S1.SVC_ISA_FILE_ID
  AND LQ_GS_GRP_SEQ_NO        = S1.SVC_GS_GRP_SEQ_NO
  AND LQ_ST_SEQ_NO            = S1.SVC_ST_SEQ_NO
  AND LQ_LX_SEQ_NO            = S1.SVC_LX_SEQ_NO
  AND LQ_CLP_CLM_SEQ_NO       = S1.SVC_CLP_CLM_SEQ_NO
  AND LQ_SVC_SEQ_NO           = S1.SVC_SEQ_NO
WHERE S1.SVC_EXCL_RSN_CD      = 'F08'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP008
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP008';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Copy SVC-AMT segments to new SVC for different invoice
-TYPE *** When old SVC was excluded old SVC-AMT also excluded
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_AMT.EVAL&SVC_AMT_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,SVC_AMT_SEQ_NO
     ,SVC_AMT_EPP_GEN_SEQ+1
     ,SVC_AMT_QLFR_CD
     ,SVC_AMT_SUPPLMNTL_AMT
     ,SVC_AMT_CRDT_DBT_FLAG
     ,'F08'                                          AS SVC_AMT_INCL_RSN_CD
     ,'   '                                          AS SVC_AMT_EXCL_RSN_CD
FROM  &SVC.EVAL&SVC_TBL.EVAL S1
INNER JOIN
      &SVC_AMT.EVAL&SVC_AMT_TBL.EVAL
ON    SVC_AMT_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_AMT_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_AMT_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_AMT_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_AMT_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_AMT_SVC_SEQ_NO      = S1.SVC_SEQ_NO
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_MULTI_USE_AMOUNT = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_CURRENT_BALANCE  = S1.SVC_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F08'
WHERE S1.SVC_EXCL_RSN_CD      = 'F08'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP009
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP009';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Copy SVC-QTY segments to new SVC for different invoice
-TYPE *** When old SVC was excluded old SVC-QTY also excluded
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &SVC_QTY.EVAL&SVC_QTY_TBL.EVAL
SELECT
      S2.SVC_ISA_FILE_ID
     ,S2.SVC_GS_GRP_SEQ_NO
     ,S2.SVC_ST_SEQ_NO
     ,S2.SVC_LX_SEQ_NO
     ,S2.SVC_CLP_CLM_SEQ_NO
     ,S2.SVC_SEQ_NO
     ,SVC_QTY_SEQ_NO
     ,SVC_QTY_EPP_GEN_SEQ+1
     ,SVC_QTY_QLFR_CD
     ,SVC_QTY_QUANTITY
     ,'F08'                                          AS SVC_AMT_INCL_RSN_CD
     ,'   '                                          AS SVC_AMT_EXCL_RSN_CD
FROM &SVC.EVAL&SVC_TBL.EVAL  S1
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S2
ON    S2.SVC_ISA_FILE_ID      = S1.SVC_ISA_FILE_ID
  AND S2.SVC_GS_GRP_SEQ_NO    = S1.SVC_GS_GRP_SEQ_NO
  AND S2.SVC_ST_SEQ_NO        = S1.SVC_ST_SEQ_NO
  AND S2.SVC_LX_SEQ_NO        = S1.SVC_LX_SEQ_NO
  AND S2.SVC_MULTI_USE_AMOUNT = S1.SVC_CLP_CLM_SEQ_NO
  AND S2.SVC_CURRENT_BALANCE  = S1.SVC_SEQ_NO
  AND S2.SVC_INCL_RSN_CD      = 'F08'
INNER JOIN
      &SVC_QTY.EVAL&SVC_QTY_TBL.EVAL
ON    SVC_QTY_ISA_FILE_ID     = S1.SVC_ISA_FILE_ID
  AND SVC_QTY_GS_GRP_SEQ_NO   = S1.SVC_GS_GRP_SEQ_NO
  AND SVC_QTY_ST_SEQ_NO       = S1.SVC_ST_SEQ_NO
  AND SVC_QTY_LX_SEQ_NO       = S1.SVC_LX_SEQ_NO
  AND SVC_QTY_CLP_CLM_SEQ_NO  = S1.SVC_CLP_CLM_SEQ_NO
  AND SVC_QTY_SVC_SEQ_NO      = S1.SVC_SEQ_NO
WHERE S1.SVC_EXCL_RSN_CD      = 'F08'
ORDER BY 1,2,3,4,5,6,7,8
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP010
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP010';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Exclude CLP for moved SVC
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_INCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  SVC_EXCL_RSN_CD    = 'F08' )
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.CLP_ISA_FILE_ID        = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO      = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO          = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO          = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO         = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ        = UT.CLP_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.CLP_EXCL_RSN_CD   = 'F08'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP011
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP011';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Exclude CLP for moved SVC
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_INCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
WHERE CLP_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
        AND  SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
        AND  SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
        AND  SVC_INCL_RSN_CD    = 'F08' )
ORDER BY 1,2,3,4,5,6
) ST
ON  ( ST.CLP_ISA_FILE_ID        = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO      = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO          = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO          = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO         = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ        = UT.CLP_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.CLP_EXCL_RSN_CD   = 'F08'
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP012
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP012';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE *** Add a new CLP for each different invoice needed
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                                           AS CLP_TOT_CLM_CRG_AMT
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')))
                                           AS CLP_CLM_PYMT_AMT
     ,'0'                                  AS CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'F08'                AS CLP_INCL_RSN_CD
     ,'   '                AS CLP_EXCL_RSN_CD
FROM  &CLP.EVAL&CLP_TBL.EVAL
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD    = '   '
WHERE CLP_EXCL_RSN_CD    = 'F08'
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6,7
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
