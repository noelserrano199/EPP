-******************************************************************************
-* Program:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Match on Name, DOS, Price and CPT Code
-* When matched update SVC_CLARITY_TX_ID & SVC_RVSD_INVC_NO NM1=QC
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      T1.SVC_ISA_FILE_ID     AS CLP_ISA_FILE_ID
     ,T1.SVC_GS_GRP_SEQ_NO   AS CLP_GS_GRP_SEQ_NO
     ,T1.SVC_ST_SEQ_NO       AS CLP_ST_SEQ_NO
     ,T1.SVC_LX_SEQ_NO       AS CLP_LX_SEQ_NO
     ,T1.SVC_CLP_CLM_SEQ_NO  AS CLP_CLM_SEQ_NO
     ,T1.CLP_EPP_GEN_SEQ
     ,MIN(T3.INVOICE_NUMBER) AS INVOICE_NUMBER
-*     ,T1.CLP_CLM_SUBMTR_ID
-*     ,T3.TX_ID
-*     ,T3.PRICE
-*     ,T3.OUTSTANDING_AMT
FROM
(
SELECT /* NOPARALLEL ORDERED NO_UNNEST */
      COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                                             AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')      AS DOS
     ,RTRIM(SVC_PROC1_CD)                    AS CPT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                             AS PRICE
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,CLP_EPP_GEN_SEQ
     ,RANK()
      OVER ( PARTITION BY SVC_ISA_FILE_ID
                         ,SVC_GS_GRP_SEQ_NO
                         ,SVC_ST_SEQ_NO
                         ,SVC_LX_SEQ_NO
                         ,SVC_CLP_CLM_SEQ_NO
                         ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
                         ,RTRIM(SVC_PROC1_CD)
                         ,ABS(TO_NUMBER(RTRIM(SVC_ORGLI_PRVDR_PYMT)))
             ORDER BY     SVC_ISA_FILE_ID
                         ,SVC_GS_GRP_SEQ_NO
                         ,SVC_ST_SEQ_NO
                         ,SVC_LX_SEQ_NO
                         ,SVC_CLP_CLM_SEQ_NO
                         ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
                         ,RTRIM(SVC_PROC1_CD)
                         ,TO_NUMBER(RTRIM(SVC_ORGLI_PRVDR_PYMT))
                         ,SVC_SEQ_NO )       AS S_RANK
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND NOT EXISTS
( SELECT 1
  FROM  CLARITY_TDL_TRAN
  WHERE INVOICE_NUMBER         = RTRIM(CLP_CLM_SUBMTR_ID))
  AND NOT EXISTS
( SELECT /* NOPARALLEL ORDERED NO_UNNEST */ 1
  FROM  &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
  WHERE CLP_CAS_ISA_FILE_ID    = CLP_ISA_FILE_ID
    AND CLP_CAS_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
    AND CLP_CAS_ST_SEQ_NO      = CLP_ST_SEQ_NO
    AND CLP_CAS_LX_SEQ_NO      = CLP_LX_SEQ_NO
    AND CLP_CAS_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
    AND CLP_CAS_EXCL_RSN_CD    = '   ' )
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID) = '0'
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
WHERE ST_EXCL_RSN_CD           =  '   '
ORDER BY 1,2,3,4,5,6,7,8
) T1
INNER JOIN
(
SELECT /* NOPARALLEL ORDERED NO_UNNEST */
      CLP_CLM_SUBMTR_ID
     ,DOS
     ,CPT
     ,PRICE
     ,ORIG_PRICE
     ,INVOICE_NUMBER
     ,TX_ID
     ,OUTSTANDING_AMT
     ,RANK()
      OVER ( PARTITION BY CLP_CLM_SUBMTR_ID
                         ,DOS
                         ,CPT
                         ,PRICE
             ORDER BY     CLP_CLM_SUBMTR_ID
                         ,DOS
                         ,CPT
                         ,PRICE
                         ,INVOICE_NUMBER
                         ,TX_ID)       AS T_RANK
FROM
(
SELECT
      CLP_CLM_SUBMTR_ID
     ,DOS
     ,CPT
     ,PRICE
     ,A.ORIG_PRICE
     ,A.INVOICE_NUMBER
     ,A.TX_ID
     ,B.OUTSTANDING_AMT
     ,T1.PAT_ID
FROM
(
SELECT
      COALESCE(RTRIM(CLP_CLM_SUBMTR_ID),'999999999')
                                             AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')      AS DOS
     ,RTRIM(SVC_PROC1_CD)                    AS CPT
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                             AS PRICE
     ,P.PAT_ID
     ,PAT_LAST_NAME
     ,PAT_FIRST_NAME
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND NOT EXISTS
( SELECT /* NOPARALLEL ORDERED NO_UNNEST */ 1
  FROM  CLARITY_TDL_TRAN
  WHERE INVOICE_NUMBER         = RTRIM(CLP_CLM_SUBMTR_ID))
  AND NOT EXISTS
( SELECT /* NOPARALLEL ORDERED NO_UNNEST */ 1
  FROM &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL
  WHERE CLP_CAS_ISA_FILE_ID    = CLP_ISA_FILE_ID
    AND CLP_CAS_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
    AND CLP_CAS_ST_SEQ_NO      = CLP_ST_SEQ_NO
    AND CLP_CAS_LX_SEQ_NO      = CLP_LX_SEQ_NO
    AND CLP_CAS_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
    AND CLP_CAS_EXCL_RSN_CD    = '   ' )
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID) = '0'
  AND SVC_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR        IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD      = '   '
INNER JOIN
      &NM1.EVAL&NM1_TBL.EVAL
ON    NM1_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND NM1_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND NM1_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND NM1_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND NM1_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND RTRIM(NM1_ENTITY_ID_CD)  = 'QC'
INNER JOIN
     PATIENT P
ON   UPPER(PAT_LAST_NAME)              = RTRIM(NM1_PT_LST_NM)
 AND SUBSTR(UPPER(PAT_FIRST_NAME),1,2) = SUBSTR(RTRIM(NM1_PT_FST_NM),1,2)
WHERE ST_EXCL_RSN_CD                   = '   '
ORDER BY 1
) T1
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INT_PAT_ID             = T1.PAT_ID
  AND A.ORIG_SERVICE_DATE      = DOS
  AND A.CPT_CODE               = CPT
  AND A.ORIG_PRICE             = ABS(PRICE)
  AND A.DETAIL_TYPE            = '50'
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                  = A.TX_ID
  AND B.VOID_DATE                IS NULL
GROUP BY
      CLP_CLM_SUBMTR_ID
     ,DOS
     ,CPT
     ,PRICE
     ,A.ORIG_PRICE
     ,A.TX_ID
     ,A.INVOICE_NUMBER
     ,B.OUTSTANDING_AMT
     ,T1.PAT_ID
) T2
WHERE T2.INVOICE_NUMBER        = ( SELECT /* NOPARALLEL ORDERED NO_UNNEST */
                                          MIN(INVOICE_NUMBER)
                                   FROM   CLARITY_TDL_TRAN  C
                                         ,ARPB_TRANSACTIONS D
                                   WHERE C.TX_ID     = T2.TX_ID
                                     AND D.TX_ID     = C.TX_ID
                                     AND D.VOID_DATE IS NULL )
ORDER BY 1,2,3,4,5,6,7
) T3
ON    T3.CLP_CLM_SUBMTR_ID     = T1.CLP_CLM_SUBMTR_ID
  AND T3.DOS                   = T1.DOS
  AND T3.CPT                   = T1.CPT
  AND T3.PRICE                 = T1.PRICE
  AND T3.T_RANK                = T1.S_RANK
GROUP BY
      T1.SVC_ISA_FILE_ID
     ,T1.SVC_GS_GRP_SEQ_NO
     ,T1.SVC_ST_SEQ_NO
     ,T1.SVC_LX_SEQ_NO
     ,T1.SVC_CLP_CLM_SEQ_NO
     ,T1.CLP_EPP_GEN_SEQ
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.CLP_ISA_FILE_ID       = UT.CLP_ISA_FILE_ID
  AND ST.CLP_GS_GRP_SEQ_NO     = UT.CLP_GS_GRP_SEQ_NO
  AND ST.CLP_ST_SEQ_NO         = UT.CLP_ST_SEQ_NO
  AND ST.CLP_LX_SEQ_NO         = UT.CLP_LX_SEQ_NO
  AND ST.CLP_CLM_SEQ_NO        = UT.CLP_CLM_SEQ_NO
  AND ST.CLP_EPP_GEN_SEQ       = UT.CLP_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_RVSD_INVC_NO      = ST.INVOICE_NUMBER
     ,UT.CLP_EXCL_RSN_CD       = 'FI1'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &CLP.EVAL&CLP_TBL.EVAL
WHERE  CLP_EXCL_RSN_CD  = 'FI1'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_RVSD_INVC_NO      AS CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_CLM_SUBMTR_ID     AS CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'FI1'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID      = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO    = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO        = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD      = 'FI1'
WHERE ST_EXCL_RSN_CD       = '   '
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-*-STEP004
-*-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-*-----------------------------------------------------------------------------
-*SQL
-*-*INSERT INTO &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
-*SELECT
-*      SVC_ISA_FILE_ID        AS SVC_ISA_FILE_ID
-*     ,SVC_GS_GRP_SEQ_NO      AS SVC_GS_GRP_SEQ_NO
-*     ,SVC_ST_SEQ_NO          AS SVC_ST_SEQ_NO
-*     ,SVC_LX_SEQ_NO          AS SVC_LX_SEQ_NO
-*     ,SVC_CLP_CLM_SEQ_NO     AS SVC_CLP_CLM_SEQ_NO
-*     ,SVC_SEQ_NO             AS SVC_SEQ_NO
-*     ,1                      AS SVC_DTM_SEQ_NO
-*	 ,1                      AS SVC_DTM_EPP_GEN_SEQ
-*     ,'472'                  AS SVC_DTM_DTTM_QLFR
-*     ,CLP_DTM_DATE           AS SVC_DTM_DATE
-*     ,' '                    AS SVC_DTM_TIME
-*     ,' '                    AS SVC_DTM_TIME_CD
-*     ,' '                    AS SVC_DTM_DTTM_PD_FMT_QLFR
-*     ,' '                    AS SVC_DTM_DTTM_PD
-*	 ,'FI1'                  AS SVC_DTM_INCL_RSN_CD
-*	 ,'   '                  AS SVC_DTM_EXCL_RSN_CD
-*FROM  &ST.EVAL&ST_TBL.EVAL
-*INNER JOIN
-*      &CLP.EVAL&CLP_TBL.EVAL
-*ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
-*  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
-*  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
-*  AND CLP_INCL_RSN_CD        = 'FI1'
-*  AND CLP_EXCL_RSN_CD        = '   '
-*INNER JOIN
-*      &CLP_DTM.EVAL&CLP_DTM_TBL.EVAL
-*ON    CLP_DTM_ISA_FILE_ID    = CLP_ISA_FILE_ID
-*  AND CLP_DTM_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
-*  AND CLP_DTM_ST_SEQ_NO      = CLP_ST_SEQ_NO
-*  AND CLP_DTM_LX_SEQ_NO      = CLP_LX_SEQ_NO
-*  AND CLP_DTM_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
-*  AND CLP_DTM_DTTM_QLFR      = '232'
-*  AND CLP_DTM_EXCL_RSN_CD    = '   '
-*INNER JOIN
-*      &SVC.EVAL&SVC_TBL.EVAL
-*ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
-*  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
-*  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
-*  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
-*  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
-*  AND SVC_EXCL_RSN_CD        = '   '
-*WHERE ST_EXCL_RSN_CD         = '   '
-*-*  AND NOT EXISTS
-*-*    ( SELECT 1
-*-*      FROM  &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
-*-*      WHERE SVC_DTM_ISA_FILE_ID    = SVC_ISA_FILE_ID
-*-*        AND SVC_DTM_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
-*-*        AND SVC_DTM_ST_SEQ_NO      = SVC_ST_SEQ_NO
-*-*        AND SVC_DTM_LX_SEQ_NO      = SVC_LX_SEQ_NO
-*-*        AND SVC_DTM_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
-*-*        AND SVC_DTM_SVC_SEQ_NO     = SVC_SEQ_NO
-*-*        AND SVC_DTM_DTTM_QLFR      IN( '472','150' )
-*-*        AND SVC_DTM_EXCL_RSN_CD    = '   ' )
-*ORDER BY 1,2,3,4,5,6,7
-*;
-*END
-*-RUN
-*-*-----------------------------------------------------------------------------
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-*-TYPE -------------------------------------------------------------------------
-*-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-EXIT
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */DISTINCT
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,MIN(A.TX_ID)         AS TX_ID
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO           = ST_SEQ_NO
  AND CLP_INCL_RSN_CD         = 'FI1'
  AND CLP_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD         = '   '
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID        = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO      = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO          = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO          = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO     = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO         = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR          IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD        = '   '
INNER JOIN
      CLARITY_TDL_TRAN A
ON    A.INVOICE_NUMBER        = RTRIM(CLP_CLM_SUBMTR_ID)
  AND A.CPT_CODE              = RTRIM(SVC_PROC1_CD)
  AND A.ORIG_SERVICE_DATE     = TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
  AND A.DETAIL_TYPE           = '50'
  AND A.ORIG_PRICE            = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
WHERE ST_EXCL_RSN_CD          = '   '
GROUP BY
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
ORDER BY 1,2,3,4,5,6
) ST
ON  ( UT.SVC_ISA_FILE_ID      = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO    = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO        = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO        = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO   = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO           = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ      = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_CLARITY_TX_ID    = ST.TX_ID
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
