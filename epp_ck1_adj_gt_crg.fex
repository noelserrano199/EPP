-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-******************************************************************************
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP/EPP_EPP2_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL RECORDS &RECORDS.EVAL LINES &LINES.EVAL
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT
      CLP_CLM_SUBMTR_ID
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD
     ,SUM(SVC_CAS_CLM_ADJ_AMT)       AS SVC_CAS_CLM_ADJ_AMT
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      RTRIM(CLP_CLM_SUBMTR_ID)       AS CLP_CLM_SUBMTR_ID
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
					,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
					                                AS  SVC_ORGLI_PRVDR_PYMT
     ,RTRIM(SVC_CAS_CLM_ADJ_GRP_CD1) AS SVC_CAS_CLM_ADJ_GRP_CD1
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD1) AS SVC_CAS_CLM_ADJ_RSN_CD1
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD2) AS SVC_CAS_CLM_ADJ_RSN_CD2
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD3) AS SVC_CAS_CLM_ADJ_RSN_CD3
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD4) AS SVC_CAS_CLM_ADJ_RSN_CD4
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD5) AS SVC_CAS_CLM_ADJ_RSN_CD5
     ,RTRIM(SVC_CAS_CLM_ADJ_RSN_CD6) AS SVC_CAS_CLM_ADJ_RSN_CD6
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0')) AS SVC_CAS_CLM_ADJ_AMT1
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY1),'0')) AS SVC_CAS_CLM_ADJ_QTY1
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT2),'0')) AS SVC_CAS_CLM_ADJ_AMT2
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY2),'0')) AS SVC_CAS_CLM_ADJ_QTY2
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT3),'0')) AS SVC_CAS_CLM_ADJ_AMT3
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY3),'0')) AS SVC_CAS_CLM_ADJ_QTY3
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT4),'0')) AS SVC_CAS_CLM_ADJ_AMT4
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY4),'0')) AS SVC_CAS_CLM_ADJ_QTY4
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT5),'0')) AS SVC_CAS_CLM_ADJ_AMT5
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY5),'0')) AS SVC_CAS_CLM_ADJ_QTY5
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT6),'0')) AS SVC_CAS_CLM_ADJ_AMT6
     ,TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_QTY6),'0')) AS SVC_CAS_CLM_ADJ_QTY6
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID              = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER)    IN('AARPUHC','UNITEDHEALTHCARE')
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID         = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO       = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO           = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO           = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO      = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD         = '   '
		AND TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')) > 0
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD         = '   '
        )
        UNPIVOT
        ((SVC_CAS_CLM_ADJ_RSN_CD,SVC_CAS_CLM_ADJ_AMT,SVC_CAS_CLM_ADJ_QTY)
               FOR RSN_CD
               IN
               ((SVC_CAS_CLM_ADJ_RSN_CD1,SVC_CAS_CLM_ADJ_AMT1,SVC_CAS_CLM_ADJ_QTY1) AS 1,
                (SVC_CAS_CLM_ADJ_RSN_CD2,SVC_CAS_CLM_ADJ_AMT2,SVC_CAS_CLM_ADJ_QTY2) AS 2,
                (SVC_CAS_CLM_ADJ_RSN_CD3,SVC_CAS_CLM_ADJ_AMT3,SVC_CAS_CLM_ADJ_QTY3) AS 3,
                (SVC_CAS_CLM_ADJ_RSN_CD4,SVC_CAS_CLM_ADJ_AMT4,SVC_CAS_CLM_ADJ_QTY4) AS 4,
                (SVC_CAS_CLM_ADJ_RSN_CD5,SVC_CAS_CLM_ADJ_AMT5,SVC_CAS_CLM_ADJ_QTY5) AS 5,
                (SVC_CAS_CLM_ADJ_RSN_CD6,SVC_CAS_CLM_ADJ_AMT6,SVC_CAS_CLM_ADJ_QTY6) AS 6)
        )
GROUP BY
      CLP_CLM_SUBMTR_ID
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
					,SVC_ORGLI_PRVDR_PYMT
     ,SVC_CAS_CLM_ADJ_GRP_CD1
     ,SVC_CAS_CLM_ADJ_RSN_CD
HAVING SUM(SVC_CAS_CLM_ADJ_AMT) > SVC_ORGLI_PRVDR_PYMT
ORDER BY 1,2,3,4,5,6
;
TABLEF FILE SQLOUT
PRINT *
-*ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-*-IF   &RETCODE.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL EQ 0 THEN GOTO THE_END;
-EXIT
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
