-******************************************************************************
-* Program:      epp_rvc_remove_denial_for_void_crg
-* Author:       Bill Schwartz
-* Date:         02/19/2016
-* Description:  Remove $0 payment for voided transactions where no replacement
-*               transactions exist.
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-*       WLS           02/19/2016   Add test for replacement charge
-*       WLS           02/19/2016   Revise update of SEA table
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP          = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME       = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP3/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Mark ERA transaction which meet criteria as excluded
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM
(
SELECT DISTINCT
      TO_NUMBER(SVC_CLARITY_TX_ID)       AS SVC_CLARITY_TX_ID
     ,RTRIM(CLP_CLM_SUBMTR_ID)           AS CLP_CLM_SUBMTR_ID
     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')  AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)                AS SVC_PROC1_CD
     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                         AS SVC_ORGLI_PRVDR_PYMT
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL S1
ON    SVC_ISA_FILE_ID           = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO         = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO             = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO             = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO        = CLP_CLM_SEQ_NO
  AND RTRIM(SVC_CLARITY_TX_ID) <> '0'
  AND SVC_EXCL_RSN_CD           = '   '
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D1
ON    D1.SVC_DTM_ISA_FILE_ID    = S1.SVC_ISA_FILE_ID
  AND D1.SVC_DTM_GS_GRP_SEQ_NO  = S1.SVC_GS_GRP_SEQ_NO
  AND D1.SVC_DTM_ST_SEQ_NO      = S1.SVC_ST_SEQ_NO
  AND D1.SVC_DTM_LX_SEQ_NO      = S1.SVC_LX_SEQ_NO
  AND D1.SVC_DTM_CLP_CLM_SEQ_NO = S1.SVC_CLP_CLM_SEQ_NO
  AND D1.SVC_DTM_SVC_SEQ_NO     = S1.SVC_SEQ_NO
  AND D1.SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND D1.SVC_DTM_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD            = '   '
ORDER BY 1
)
INNER JOIN
      CLARITY_TDL_TRAN  A
ON    A.TX_ID                   = TO_NUMBER(SVC_CLARITY_TX_ID)
  AND A.DETAIL_TYPE             = 1
INNER JOIN
      ARPB_TRANSACTIONS B
ON    B.TX_ID                   = A.TX_ID
  AND B.VOID_DATE               IS NOT NULL
  AND NOT EXISTS
  ( SELECT /*+ INDEX(C CLARITY_TDL_TRAN_PAT_ID) NOPARALLEL ORDERED NO_UNNEST */ 1 
    FROM   CLARITY_TDL_TRAN  C
          ,ARPB_TRANSACTIONS D
    WHERE  C.INT_PAT_ID         = A.INT_PAT_ID
      AND  C.ORIG_SERVICE_DATE  = SVC_DTM_DATE
      AND  C.CPT_CODE           = SVC_PROC1_CD
      AND  C.DETAIL_TYPE        = 50
      AND  D.TX_ID              = C.TX_ID
      AND  D.VOID_DATE          IS NULL
      AND  D.OUTSTANDING_AMT    <> 0 )
ORDER BY 1,2,3,4,5,6,7
) ST
ON  ( ST.SVC_ISA_FILE_ID        = UT.SVC_ISA_FILE_ID
  AND ST.SVC_GS_GRP_SEQ_NO      = UT.SVC_GS_GRP_SEQ_NO
  AND ST.SVC_ST_SEQ_NO          = UT.SVC_ST_SEQ_NO
  AND ST.SVC_LX_SEQ_NO          = UT.SVC_LX_SEQ_NO
  AND ST.SVC_CLP_CLM_SEQ_NO     = UT.SVC_CLP_CLM_SEQ_NO
  AND ST.SVC_SEQ_NO             = UT.SVC_SEQ_NO
  AND ST.SVC_EPP_GEN_SEQ        = UT.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET UT.SVC_EXCL_RSN_CD   = 'RVC'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Check at least one SVC was excluded or goto end
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'RVC'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Exclude CLP where an SVC was excluded in STEP001
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD     = 'RVC' )
ORDER BY 1,2,3,4,5,6
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_EXCL_RSN_CD        = 'RVC'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Write new CLP when an active SVC exists
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                            AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'RVC'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO      = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD    = 'RVC'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD     = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-*-STEP005
-*-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL For rerun-remove RVE rows for this ERA file from SEA
-*-----------------------------------------------------------------------------
-*SQL
-*DELETE &SEA.EVAL&SEA_TBL.EVAL
-* WHERE SEA_ORG_ISA_FILE_ID IN (SELECT ISA_FILE_ID
-*                               FROM &ISA.EVAL&ISA_TBL.EVAL )
-*   AND SEA_ORG_RSN_CD = 'RVC'
-*;
-*END
-*-RUN
-*-----------------------------------------------------------------------------
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-*-TYPE -------------------------------------------------------------------------
-*-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-*-STEP006
-*-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP006';
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL Write audit rows to SEA table
-*-*-----------------------------------------------------------------------------
-*SQL
-*INSERT INTO &SEA.EVAL&SEA_TBL.EVAL
-*SELECT /*+ PARALLEL (2)*/
-*      SVC_ISA_FILE_ID          AS ORG_ISA_FILE_ID
-*     ,SVC_GS_GRP_SEQ_NO        AS ORG_GS_GRP_SEQ_NO
-*     ,SVC_ST_SEQ_NO            AS ORG_ST_SEQ_NO
-*     ,SVC_LX_SEQ_NO            AS ORG_LX_SEQ_NO
-*     ,SVC_CLP_CLM_SEQ_NO       AS ORG_CLP_SEQ_NO
-*     ,SVC_SEQ_NO               AS ORG_SVC_SEQ_NO
-*     ,SVC_EPP_GEN_SEQ          AS ORG_SVC_EPP_SEQ
-*     ,1                        AS SEA_SEQ_NO
-*     ,CLP_CLM_SUBMTR_ID        AS ORG_INVOICE_NO
-*     ,' '                      AS RPL_INVOICE_NO
-*     ,CLP_CLM_STATUS_CD        AS ORG_CLM_STATUS_CD
-*     ,' '                      AS RPL_CLM_STATUS_CD
-*     ,'RVC'                    AS ORG_RSN_CD
-*     ,'XXX'                    AS RPL_RSN_CD
-*     ,TO_DATE(SVC_DTM_DATE, 'YYYYMMDD')
-*                               AS ORG_DOS
-*     ,TO_DATE('19001231',   'YYYYMMDD')
-*                               AS RPL_DOS
-*     ,SVC_PROC1_CD             AS ORG_CPT_CD
-*     ,' '                      AS RPL_CPT_CD
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
-*                               AS ORG_CRG_AMT
-*     ,0                        AS RPL_CRG_AMT
-*     ,TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
-*                               AS ORG_PMT_AMT
-*     ,0                        AS RPL_PMT_AMT
-*     ,0                        AS ORG_ADJ_AMT
-*     ,0                        AS RPL_ADJ_AMT
-*     ,'NA'                     AS ORG_IN_BAL
-*     ,'NA'                     AS RPL_IN_BAL
-*     ,'Y'                      AS PMT_UNCHGD
-*     ,0                        AS RPL_ISA_FILE_ID
-*     ,0                        AS RPL_GS_GRP_SEQ_NO
-*     ,0                        AS RPL_ST_SEQ_NO
-*     ,0                        AS RPL_LX_SEQ_NO
-*     ,0                        AS RPL_CLP_SEQ_NO
-*     ,0                        AS RPL_SVC_SEQ_NO
-*     ,0                        AS RPL_SVC_EPP_SEQ
-*FROM  &CLP.EVAL&CLP_TBL.EVAL
-*INNER JOIN
-*      &SVC.EVAL&SVC_TBL.EVAL
-*ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
-*  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
-*  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
-*  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
-*  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
-*  AND SVC_EXCL_RSN_CD        = 'RVC'
-*INNER JOIN
-*      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
-*ON    SVC_DTM_ISA_FILE_ID    = SVC_ISA_FILE_ID
-*  AND SVC_DTM_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
-*  AND SVC_DTM_ST_SEQ_NO      = SVC_ST_SEQ_NO
-*  AND SVC_DTM_LX_SEQ_NO      = SVC_LX_SEQ_NO
-*  AND SVC_DTM_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
-*  AND SVC_DTM_SVC_SEQ_NO     = SVC_SEQ_NO
-*  AND SVC_DTM_DTTM_QLFR      IN( '472','150' )
-*  AND SVC_DTM_EXCL_RSN_CD    = '   '
-*WHERE CLP_EXCL_RSN_CD        = 'RVC'
-*ORDER BY 1,2,3,4,5,6,7,8
-*;
-*TABLEF FILE SQLOUT
-*LIST *
-*END
-*-RUN
-*-*-----------------------------------------------------------------------------
-*-SET  &NOWTIME = HHMMSS(A8);
-*-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-*-TYPE -------------------------------------------------------------------------
-*-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
