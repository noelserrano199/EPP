-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP/EPP_EPP1_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL UT
USING (
SELECT
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
					,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
					,TOT_ADJ_AMT
     ,CLP_CAS_CLM_ADJ_AMT1
     ,TOT_CO45_AMT
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */ DISTINCT
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
					,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_CAS_CLM_ADJ_AMT1
					,TOT_ADJ_AMT
					,SUM( CASE WHEN RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD1) = '45'
					                THEN TO_NUMBER(COALESCE(RTRIM(SC2.SVC_CAS_CLM_ADJ_AMT1),'0'))
											     ELSE 0
						     END
					     +CASE WHEN RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2) = '45'
					                THEN TO_NUMBER(COALESCE(RTRIM(SC2.SVC_CAS_CLM_ADJ_AMT2),'0'))
										     	ELSE 0
						     END
					     +CASE WHEN RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2) = '45'
					                THEN TO_NUMBER(COALESCE(RTRIM(SC2.SVC_CAS_CLM_ADJ_AMT2),'0'))
											     ELSE 0
						     END
					     +CASE WHEN RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2) = '45'
					                THEN TO_NUMBER(COALESCE(RTRIM(SC2.SVC_CAS_CLM_ADJ_AMT2),'0'))
											     ELSE 0
						     END
					     +CASE WHEN RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2) = '45'
					                THEN TO_NUMBER(COALESCE(RTRIM(SC2.SVC_CAS_CLM_ADJ_AMT2),'0'))
											     ELSE 0
						     END
					     +CASE WHEN RTRIM(SC2.SVC_CAS_CLM_ADJ_RSN_CD2) = '45'
					                THEN TO_NUMBER(COALESCE(RTRIM(SC2.SVC_CAS_CLM_ADJ_AMT2),'0'))
											     ELSE 0
						     END )                AS TOT_CO45_AMT
FROM
(
SELECT DISTINCT
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
					,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_CAS_CLM_ADJ_AMT1
					,SUM(TO_NUMBER(COALESCE(RTRIM(SC1.SVC_CAS_CLM_ADJ_AMT1),'0')))
					+SUM(TO_NUMBER(COALESCE(RTRIM(SC1.SVC_CAS_CLM_ADJ_AMT2),'0')))
					+SUM(TO_NUMBER(COALESCE(RTRIM(SC1.SVC_CAS_CLM_ADJ_AMT3),'0')))
					+SUM(TO_NUMBER(COALESCE(RTRIM(SC1.SVC_CAS_CLM_ADJ_AMT4),'0')))
					+SUM(TO_NUMBER(COALESCE(RTRIM(SC1.SVC_CAS_CLM_ADJ_AMT5),'0')))
					+SUM(TO_NUMBER(COALESCE(RTRIM(SC1.SVC_CAS_CLM_ADJ_AMT6),'0')))
					                            AS TOT_ADJ_AMT
FROM
(
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
					,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,TO_NUMBER(COALESCE(RTRIM(CLP_TOT_CLM_CRG_AMT),'0'))
					                            AS CLP_TOT_CLM_CRG_AMT
     ,TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0'))
					                            AS CLP_CLM_PYMT_AMT
     ,TO_NUMBER(COALESCE(RTRIM(CLP_CAS_CLM_ADJ_AMT1),'0'))
					                            AS CLP_CAS_CLM_ADJ_AMT1
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
					                            AS SVC_ORGLI_PRVDR_PYMT
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')))
					                            AS SVC_LI_PRVDR_PYMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID           = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER) = 'BOAMIXED'
INNER JOIN
      &NA.EVAL&NA_TBL.EVAL
ON    NA_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND NA_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND NA_ST_SEQ_NO           = ST_SEQ_NO
  AND RTRIM(NA_N1_ENTITY_ID_CD)     = 'PR'
  AND SUBSTR(NA_N1_ENTITY_NAME,1,5) = 'OSCAR'
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO          = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD        = '   '
		AND TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0')) <> 0
INNER JOIN
      &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL CC1
ON    CLP_CAS_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND CLP_CAS_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND CLP_CAS_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND CLP_CAS_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND CLP_CAS_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND CLP_CAS_EXCL_RSN_CD    = '   '
		AND 0                      = TO_NUMBER(COALESCE(RTRIM(CLP_CAS_CLM_ADJ_AMT2),'0'))
		AND NOT EXISTS
		  ( SELECT 1
				  FROM  &CLP_CAS.EVAL&CLP_CAS_TBL.EVAL CC2
      WHERE CC2.CLP_CAS_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND CC2.CLP_CAS_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND CC2.CLP_CAS_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND CC2.CLP_CAS_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND CC2.CLP_CAS_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND CC2.CLP_CAS_SEQ_NO         <> CC1.CLP_CAS_SEQ_NO
        AND CC2.CLP_CAS_EXCL_RSN_CD     = '   ' )
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID        = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO      = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO          = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO          = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO     = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD        = '   '
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
     ,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,TO_NUMBER(COALESCE(RTRIM(CLP_TOT_CLM_CRG_AMT),'0'))
     ,TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0'))
     ,TO_NUMBER(COALESCE(RTRIM(CLP_CAS_CLM_ADJ_AMT1),'0'))
HAVING TO_NUMBER(COALESCE(RTRIM(CLP_CLM_PYMT_AMT),'0'))
                             = SUM(TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')))
ORDER BY 1
) T1
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL SC1
ON    SC1.SVC_CAS_ISA_FILE_ID    = CLP_CAS_ISA_FILE_ID
  AND SC1.SVC_CAS_GS_GRP_SEQ_NO  = CLP_CAS_GS_GRP_SEQ_NO
  AND SC1.SVC_CAS_ST_SEQ_NO      = CLP_CAS_ST_SEQ_NO
  AND SC1.SVC_CAS_LX_SEQ_NO      = CLP_CAS_LX_SEQ_NO
  AND SC1.SVC_CAS_CLP_CLM_SEQ_NO = CLP_CAS_CLP_CLM_SEQ_NO
  AND SC1.SVC_CAS_EXCL_RSN_CD    = '   '
GROUP BY
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
					,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_CAS_CLM_ADJ_AMT1
) T2
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL SC2
ON    SC2.SVC_CAS_ISA_FILE_ID    = CLP_CAS_ISA_FILE_ID
  AND SC2.SVC_CAS_GS_GRP_SEQ_NO  = CLP_CAS_GS_GRP_SEQ_NO
  AND SC2.SVC_CAS_ST_SEQ_NO      = CLP_CAS_ST_SEQ_NO
  AND SC2.SVC_CAS_LX_SEQ_NO      = CLP_CAS_LX_SEQ_NO
  AND SC2.SVC_CAS_CLP_CLM_SEQ_NO = CLP_CAS_CLP_CLM_SEQ_NO
  AND SC2.SVC_CAS_EXCL_RSN_CD    = '   '
WHERE 0 = CLP_TOT_CLM_CRG_AMT-CLP_CLM_PYMT_AMT-T2.TOT_ADJ_AMT
GROUP BY
      CLP_CAS_ISA_FILE_ID
     ,CLP_CAS_GS_GRP_SEQ_NO
     ,CLP_CAS_ST_SEQ_NO
     ,CLP_CAS_LX_SEQ_NO
     ,CLP_CAS_CLP_CLM_SEQ_NO
					,CLP_CAS_SEQ_NO
					,CLP_CAS_EPP_GEN_SEQ
     ,CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_CAS_CLM_ADJ_AMT1
					,TOT_ADJ_AMT
ORDER BY 1,2,3,4
)T3
WHERE  CLP_CAS_CLM_ADJ_AMT1     = TOT_CO45_AMT
) ST
ON  ( UT.CLP_CAS_ISA_FILE_ID    = ST.CLP_CAS_ISA_FILE_ID
  AND UT.CLP_CAS_GS_GRP_SEQ_NO  = ST.CLP_CAS_GS_GRP_SEQ_NO
  AND UT.CLP_CAS_ST_SEQ_NO      = ST.CLP_CAS_ST_SEQ_NO
  AND UT.CLP_CAS_LX_SEQ_NO      = ST.CLP_CAS_LX_SEQ_NO
  AND UT.CLP_CAS_CLP_CLM_SEQ_NO = ST.CLP_CAS_CLP_CLM_SEQ_NO
  AND UT.CLP_CAS_EPP_GEN_SEQ    = ST.CLP_CAS_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_CAS_EXCL_RSN_CD    = 'RCB'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
