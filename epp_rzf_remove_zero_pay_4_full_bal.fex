-******************************************************************************
-* Program:
-* Title:
-* Author:       Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*    Programmer          Date         Description of Change
-* ------------------  ----------   -------------------------------
-*       WLS           01/01/2015   Original Version
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE -------------------------------------------------------------------------
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL ***
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &SVC.EVAL&SVC_TBL.EVAL UT
USING (
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      T3.SVC_ISA_FILE_ID
     ,T3.SVC_GS_GRP_SEQ_NO
     ,T3.SVC_ST_SEQ_NO
     ,T3.SVC_LX_SEQ_NO
     ,T3.SVC_CLP_CLM_SEQ_NO
     ,T3.SVC_SEQ_NO
     ,T3.SVC_EPP_GEN_SEQ
     ,T3.CLP_CLM_SUBMTR_ID
     ,T3.SVC_DTM_DATE
     ,T3.SVC_PROC1_CD
     ,T3.SVC_ORGLI_PRVDR_PYMT
     ,T3.SVC_LI_PRVDR_PYMT
FROM
(
SELECT 
      SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,SVC_CLARITY_TX_ID
     ,RTRIM(CLP_CLM_SUBMTR_ID)  AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_DTM_DATE)       AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)       AS SVC_PROC1_CD
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                AS SVC_ORGLI_PRVDR_PYMT
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                AS SVC_LI_PRVDR_PYMT
FROM
(
SELECT
      CAST(SVC_CLARITY_TX_ID AS NUMBER(18,0)) AS SVC_CLARITY_TX_ID
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,RTRIM(CLP_CLM_SUBMTR_ID)  AS CLP_CLM_SUBMTR_ID
     ,RTRIM(SVC_DTM_DATE)       AS SVC_DTM_DATE
     ,RTRIM(SVC_PROC1_CD)       AS SVC_PROC1_CD
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
                                AS SVC_ORGLI_PRVDR_PYMT
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
                                AS SVC_LI_PRVDR_PYMT
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL C1
ON    CLP_ISA_FILE_ID          = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO        = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO            = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD          = '   '
  AND RTRIM(CLP_CLM_STATUS_CD) = '22'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID          = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO        = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO            = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO            = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO       = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD          = '   '
  AND RTRIM(SVC_CLARITY_TX_ID) <> '0'
-* ERA transaction payment amount is $0
  AND TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0')) = 0
INNER JOIN
      &SVC_DTM.EVAL&SVC_DTM_TBL.EVAL
ON    SVC_DTM_ISA_FILE_ID    = SVC_ISA_FILE_ID
  AND SVC_DTM_GS_GRP_SEQ_NO  = SVC_GS_GRP_SEQ_NO
  AND SVC_DTM_ST_SEQ_NO      = SVC_ST_SEQ_NO
  AND SVC_DTM_LX_SEQ_NO      = SVC_LX_SEQ_NO
  AND SVC_DTM_CLP_CLM_SEQ_NO = SVC_CLP_CLM_SEQ_NO
  AND SVC_DTM_SVC_SEQ_NO     = SVC_SEQ_NO
  AND SVC_DTM_DTTM_QLFR      IN( '472','150' )
  AND SVC_DTM_EXCL_RSN_CD    = '   '
INNER JOIN
      &SVC_CAS.EVAL&SVC_CAS_TBL.EVAL
ON    SVC_CAS_ISA_FILE_ID      = SVC_ISA_FILE_ID
  AND SVC_CAS_GS_GRP_SEQ_NO    = SVC_GS_GRP_SEQ_NO
  AND SVC_CAS_ST_SEQ_NO        = SVC_ST_SEQ_NO
  AND SVC_CAS_LX_SEQ_NO        = SVC_LX_SEQ_NO
  AND SVC_CAS_CLP_CLM_SEQ_NO   = SVC_CLP_CLM_SEQ_NO
  AND SVC_CAS_SVC_SEQ_NO       = SVC_SEQ_NO
  AND SVC_CAS_EXCL_RSN_CD      = '   '
-*  AND SVC_CAS_CLM_ADJ_GRP_CD1  <> 'PR'
  AND TO_NUMBER(COALESCE(RTRIM(SVC_CAS_CLM_ADJ_AMT1),'0'))
        = TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      CAST(SVC_CLARITY_TX_ID AS NUMBER(18,0))
     ,SVC_ISA_FILE_ID
     ,SVC_GS_GRP_SEQ_NO
     ,SVC_ST_SEQ_NO
     ,SVC_LX_SEQ_NO
     ,SVC_CLP_CLM_SEQ_NO
     ,SVC_SEQ_NO
     ,SVC_EPP_GEN_SEQ
     ,RTRIM(CLP_CLM_SUBMTR_ID)
     ,RTRIM(CLP_CLM_SUBMTR_ID)
     ,RTRIM(SVC_DTM_DATE)
     ,RTRIM(SVC_PROC1_CD)
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0'))
     ,0-TO_NUMBER(COALESCE(RTRIM(SVC_LI_PRVDR_PYMT),'0'))
ORDER BY 1
)
INNER JOIN
      ARPB_TRANSACTIONS C
ON    C.TX_ID               = SVC_CLARITY_TX_ID
  AND C.AMOUNT              = C.OUTSTANDING_AMT
  AND C.INSURANCE_AMT       = C.OUTSTANDING_AMT
  AND C.AMOUNT              = 0-SVC_ORGLI_PRVDR_PYMT
ORDER BY 1,2,3,4,5,6,7
) T3
WHERE NOT EXISTS
  ( SELECT 1
    FROM  &CLP.EVAL&CLP_TBL.EVAL C4
         ,&SVC.EVAL&SVC_TBL.EVAL S4
         ,&SVC_DTM.EVAL&SVC_DTM_TBL.EVAL D4
    WHERE C4.CLP_ISA_FILE_ID        = T3.SVC_ISA_FILE_ID
      AND C4.CLP_GS_GRP_SEQ_NO      = T3.SVC_GS_GRP_SEQ_NO
      AND C4.CLP_ST_SEQ_NO          = T3.SVC_ST_SEQ_NO
      AND C4.CLP_LX_SEQ_NO          = T3.SVC_LX_SEQ_NO
      AND C4.CLP_EXCL_RSN_CD        = '   '
      AND RTRIM(C4.CLP_CLM_SUBMTR_ID) = RTRIM(T3.CLP_CLM_SUBMTR_ID)
      AND S4.SVC_ISA_FILE_ID        = C4.CLP_ISA_FILE_ID
      AND S4.SVC_GS_GRP_SEQ_NO      = C4.CLP_GS_GRP_SEQ_NO
      AND S4.SVC_ST_SEQ_NO          = C4.CLP_ST_SEQ_NO
      AND S4.SVC_LX_SEQ_NO          = C4.CLP_LX_SEQ_NO
      AND S4.SVC_CLP_CLM_SEQ_NO     = C4.CLP_CLM_SEQ_NO
      AND S4.SVC_EXCL_RSN_CD        = '   '
      AND RTRIM(S4.SVC_PROC1_CD)    = T3.SVC_PROC1_CD
      AND ABS(T3.SVC_LI_PRVDR_PYMT) <> ABS(TO_NUMBER(COALESCE(RTRIM(S4.SVC_LI_PRVDR_PYMT),'0')))
      AND D4.SVC_DTM_ISA_FILE_ID    = S4.SVC_ISA_FILE_ID
      AND D4.SVC_DTM_GS_GRP_SEQ_NO  = S4.SVC_GS_GRP_SEQ_NO
      AND D4.SVC_DTM_ST_SEQ_NO      = S4.SVC_ST_SEQ_NO
      AND D4.SVC_DTM_LX_SEQ_NO      = S4.SVC_LX_SEQ_NO
      AND D4.SVC_DTM_CLP_CLM_SEQ_NO = S4.SVC_CLP_CLM_SEQ_NO
      AND D4.SVC_DTM_SVC_SEQ_NO     = S4.SVC_SEQ_NO
      AND D4.SVC_DTM_DTTM_QLFR      IN( '472','150' )
      AND D4.SVC_DTM_EXCL_RSN_CD    = '   '
      AND RTRIM(D4.SVC_DTM_DATE)    = T3.SVC_DTM_DATE )
) ST
ON  ( UT.SVC_ISA_FILE_ID    = ST.SVC_ISA_FILE_ID
  AND UT.SVC_GS_GRP_SEQ_NO  = ST.SVC_GS_GRP_SEQ_NO
  AND UT.SVC_ST_SEQ_NO      = ST.SVC_ST_SEQ_NO
  AND UT.SVC_LX_SEQ_NO      = ST.SVC_LX_SEQ_NO
  AND UT.SVC_CLP_CLM_SEQ_NO = ST.SVC_CLP_CLM_SEQ_NO
  AND UT.SVC_SEQ_NO         = ST.SVC_SEQ_NO
  AND UT.SVC_EPP_GEN_SEQ    = ST.SVC_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.SVC_EXCL_RSN_CD    = 'RZF'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &SVC.EVAL&SVC_TBL.EVAL
WHERE  SVC_EXCL_RSN_CD  = 'RZF'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &CLP.EVAL&CLP_TBL.EVAL UT
USING (
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID           = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO         = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO             = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD           = '   '
WHERE ST_EXCL_RSN_CD            = '   '
  AND EXISTS
    ( SELECT 1
      FROM  &SVC.EVAL&SVC_TBL.EVAL
      WHERE SVC_ISA_FILE_ID     = CLP_ISA_FILE_ID
        AND SVC_GS_GRP_SEQ_NO   = CLP_GS_GRP_SEQ_NO
        AND SVC_ST_SEQ_NO       = CLP_ST_SEQ_NO
        AND SVC_LX_SEQ_NO       = CLP_LX_SEQ_NO
        AND SVC_CLP_CLM_SEQ_NO  = CLP_CLM_SEQ_NO
        AND SVC_EXCL_RSN_CD     = 'RZF' )
ORDER BY 1,2,3,4,5,6
) ST
ON  (    ST.CLP_ISA_FILE_ID     = UT.CLP_ISA_FILE_ID
     AND ST.CLP_GS_GRP_SEQ_NO   = UT.CLP_GS_GRP_SEQ_NO
     AND ST.CLP_ST_SEQ_NO       = UT.CLP_ST_SEQ_NO
     AND ST.CLP_LX_SEQ_NO       = UT.CLP_LX_SEQ_NO
     AND ST.CLP_CLM_SEQ_NO      = UT.CLP_CLM_SEQ_NO
     AND ST.CLP_EPP_GEN_SEQ     = UT.CLP_EPP_GEN_SEQ  )
WHEN MATCHED THEN
UPDATE SET
      UT.CLP_EXCL_RSN_CD        = 'RZF'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &CLP.EVAL&CLP_TBL.EVAL
SELECT
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ+1     AS CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,SUM(TO_NUMBER(COALESCE(RTRIM(SVC_ORGLI_PRVDR_PYMT),'0')))
                            AS CLP_TOT_CLM_CRG_AMT
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
     ,'RZF'                  AS CLP_INCL_RSN_CD
     ,'   '                  AS CLP_EXCL_RSN_CD
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &CLP.EVAL&CLP_TBL.EVAL
ON    CLP_ISA_FILE_ID    = ST_ISA_FILE_ID
  AND CLP_GS_GRP_SEQ_NO  = ST_GS_GRP_SEQ_NO
  AND CLP_ST_SEQ_NO      = ST_SEQ_NO
  AND CLP_EXCL_RSN_CD    = 'RZF'
INNER JOIN
      &SVC.EVAL&SVC_TBL.EVAL
ON    SVC_ISA_FILE_ID    = CLP_ISA_FILE_ID
  AND SVC_GS_GRP_SEQ_NO  = CLP_GS_GRP_SEQ_NO
  AND SVC_ST_SEQ_NO      = CLP_ST_SEQ_NO
  AND SVC_LX_SEQ_NO      = CLP_LX_SEQ_NO
  AND SVC_CLP_CLM_SEQ_NO = CLP_CLM_SEQ_NO
  AND SVC_EXCL_RSN_CD    = '   '
WHERE ST_EXCL_RSN_CD     = '   '
GROUP BY
      CLP_ISA_FILE_ID
     ,CLP_GS_GRP_SEQ_NO
     ,CLP_ST_SEQ_NO
     ,CLP_LX_SEQ_NO
     ,CLP_CLM_SEQ_NO
     ,CLP_EPP_GEN_SEQ
     ,CLP_CLM_SUBMTR_ID
     ,CLP_CLM_STATUS_CD
     ,CLP_CLM_PYMT_AMT
     ,CLP_PT_RESP_AMT
     ,CLP_CLM_FIL_ID_CD
     ,CLP_PYR_CLM_CNTL_NO
     ,CLP_FCLTY_CD_VALU
     ,CLP_CLM_FREQ_TYP_CD
     ,CLP_PT_STS_CD
     ,CLP_DRG_CD
     ,CLP_QTY
     ,CLP_PCT
     ,CLP_YN_COND_RESP_CD
     ,CLP_CL_TX_MATCH_TYPE
     ,CLP_RVSD_INVC_NO
     ,CLP_INVC_FIN_CLASS
     ,CLP_INVC_CRG_COUNT
     ,CLP_MATCHED_CRG_CNT
     ,CLP_ORIG_PRICE
     ,CLP_CURRENT_BALANCE
     ,CLP_MULTI_USE_AMOUNT
     ,CLP_IS_TAKEBACK_YN
ORDER BY 1,2,3,4,5,6
;
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP005
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP005';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &ST.EVAL&ST_TBL.EVAL UT
USING (
SELECT
      ST_ISA_FILE_ID
     ,ST_GS_GRP_SEQ_NO
     ,ST_SEQ_NO
     ,ST_EPP_GEN_SEQ
FROM  &ST.EVAL&ST_TBL.EVAL
WHERE ST_EXCL_RSN_CD           = '   '
  AND EXISTS
    ( SELECT 1
      FROM   &SVC.EVAL&SVC_TBL.EVAL
      WHERE  SVC_ISA_FILE_ID   = ST_ISA_FILE_ID
        AND  SVC_GS_GRP_SEQ_NO = ST_GS_GRP_SEQ_NO
        AND  SVC_ST_SEQ_NO     = ST_SEQ_NO
        AND  SVC_EXCL_RSN_CD   = 'RZF' )
  AND NOT EXISTS
    ( SELECT 1
      FROM   &CLP.EVAL&CLP_TBL.EVAL
      WHERE  CLP_ISA_FILE_ID   = ST_ISA_FILE_ID
        AND  CLP_GS_GRP_SEQ_NO = ST_GS_GRP_SEQ_NO
        AND  CLP_ST_SEQ_NO     = ST_SEQ_NO
        AND  CLP_EXCL_RSN_CD   = '   ' )
  AND NOT EXISTS
    ( SELECT 1
      FROM   &PLB.EVAL&PLB_TBL.EVAL
      WHERE  PLB_ISA_FILE_ID   = ST_ISA_FILE_ID
        AND  PLB_GS_GRP_SEQ_NO = ST_GS_GRP_SEQ_NO
        AND  PLB_ST_SEQ_NO     = ST_SEQ_NO )
ORDER BY 1,2,3,4
) ST
ON  (    ST.ST_ISA_FILE_ID     = UT.ST_ISA_FILE_ID
     AND ST.ST_GS_GRP_SEQ_NO   = UT.ST_GS_GRP_SEQ_NO
     AND ST.ST_SEQ_NO          = UT.ST_SEQ_NO )
WHEN MATCHED THEN
UPDATE SET
      UT.ST_EXCL_RSN_CD        = 'RZF'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
 
