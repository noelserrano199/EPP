-TYPE *************************************************************************
-TYPE *                      &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-******************************************************************************
-* Program: epp_claim_level_pmt_cl1
-* Author:  Bill Schwartz
-* Date:
-* Description:
-******************************************************************************
-* Tables Accessed:
-* Tables Updated:
-******************************************************************************
-* Include/EX Files:
-******************************************************************************
-* Files Allocated:
-******************************************************************************
-* Change History:
-*     Programmer             Date              Description of Change
-*     ------------------  ----------           -------------------------------
-*
-******************************************************************************
-*-SET &ECHO = ALL;
SET MSG = OFF
-TYPE *************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL START &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-TYPE Only EDC Files
-TYPE *************************************************************************
-*-IF  '&PAYER.EVAL' NE 'EDC' THEN GOTO THE_END;
-IF  &DFLTCNTL.EXISTS EQ 1 THEN GOTO STEP001;
-******************************************************************************
-STEP000
-SET  &STEP       = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME    = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-TYPE &NOWTIME.EVAL *** Establish APP PATH and defaults
-RUN
-*-----------------------------------------------------------------------------
-INCLUDE EPP2/EPP_DEFAULTS
-*-----------------------------------------------------------------------------
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP000';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP001
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP001';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL - Mark claims as excluded when only one charge on
-TYPE &NOWTIME.EVAL &STEP.EVAL - the invoice
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &BPR.EVAL&BPR_TBL.EVAL UT
USING (
SELECT DISTINCT
      BPR_ISA_FILE_ID
     ,BPR_GS_GRP_SEQ_NO
     ,BPR_ST_SEQ_NO
     ,BPR_EPP_GEN_SEQ
     ,BPR_CHK_AMT
     ,SUM(PLB_PRVDR_ADJ_AMT1) AS PLB_PRVDR_ADJ_AMT1
FROM  &ST.EVAL&ST_TBL.EVAL
INNER JOIN
      &IFCT.EVAL&IFCT_TBL.EVAL
ON    IFCT_FILE_ID           = ST_ISA_FILE_ID
  AND RTRIM(IFCT_FILE_PAYER) = 'EDC'
INNER JOIN
      &PLB.EVAL&PLB_TBL.EVAL
ON    PLB_ISA_FILE_ID         = ST_ISA_FILE_ID
  AND PLB_GS_GRP_SEQ_NO       = ST_GS_GRP_SEQ_NO
  AND PLB_ST_SEQ_NO           = ST_SEQ_NO
  AND SUBSTR(PLB_ADJ_ID1,1,2) = 'L6'
  AND RTRIM(PLB_ADJ_ID2)     IS NULL
  AND TO_NUMBER(PLB_PRVDR_ADJ_AMT1) > 0
INNER JOIN
      &BPR.EVAL&BPR_TBL.EVAL
ON    BPR_ISA_FILE_ID        = ST_ISA_FILE_ID
  AND BPR_GS_GRP_SEQ_NO      = ST_GS_GRP_SEQ_NO
  AND BPR_ST_SEQ_NO          = ST_SEQ_NO
  AND BPR_CHK_AMT            > 0
  AND BPR_PMT_METHOD_CD      IN('CHK','CC')
WHERE ST_EXCL_RSN_CD         = '   '
GROUP BY
      BPR_ISA_FILE_ID
     ,BPR_GS_GRP_SEQ_NO
     ,BPR_ST_SEQ_NO
     ,BPR_EPP_GEN_SEQ
     ,BPR_CHK_AMT
ORDER BY 1,2,3,4
) ST
ON  ( ST.BPR_ISA_FILE_ID     = UT.BPR_ISA_FILE_ID
  AND ST.BPR_GS_GRP_SEQ_NO   = UT.BPR_GS_GRP_SEQ_NO
  AND ST.BPR_ST_SEQ_NO       = UT.BPR_ST_SEQ_NO
  AND ST.BPR_EPP_GEN_SEQ     = UT.BPR_EPP_GEN_SEQ )
WHEN MATCHED THEN
UPDATE SET
      UT.BPR_EXCL_RSN_CD     = 'FE2'
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE&RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP002
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP002';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL
-*-----------------------------------------------------------------------------
SQL
SELECT 1
FROM   &BPR.EVAL&BPR_TBL.EVAL
WHERE  BPR_EXCL_RSN_CD  = 'FE2'
  AND  ROWNUM           < 2
;
TABLEF FILE SQLOUT
LIST *
ON TABLE HOLD
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-IF   &RECORDS.EVAL   EQ 0 THEN GOTO THE_END;
-*-----------------------------------------------------------------------------
-STEP003
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP003';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL Insert SVC segements
-*-----------------------------------------------------------------------------
SQL
INSERT INTO &BPR.EVAL&BPR_TBL.EVAL
SELECT /*+ NOPARALLEL ORDERED NO_UNNEST */
      BPR_ISA_FILE_ID
     ,BPR_GS_GRP_SEQ_NO
     ,BPR_ST_SEQ_NO
     ,BPR_EPP_GEN_SEQ+1
     ,BPR_TXN_HANDL_CD
     ,TO_CHAR(TO_NUMBER(RTRIM(BPR_CHK_AMT)))
       + TO_CHAR(2*SUM(TO_NUMBER(PLB_PRVDR_ADJ_AMT1)))
                        AS BPR_CHECK_AMOUNT
     ,BPR_CRDT_DBT_FLG_CD
     ,BPR_PMT_METHOD_CD
     ,BPR_PMT_FORMAT_CD
     ,BPR_DFI_ID_NO_QLFR1
     ,BPR_DFI_ID_NO1
     ,BPR_ACCT_NO_QLFR1
     ,BPR_ACCT_NO1
     ,BPR_ORIG_CO_ID
     ,BPR_ORIG_CO_SUP_CD
     ,BPR_DFI_ID_NO_QLFR2
     ,BPR_DFI_ID_NO2
     ,BPR_ACCT_NO_QLFR2
     ,BPR_ACCOUNT_NO2
     ,BPR_CHK_DT
     ,BPR_BUS_FUNC_CD
     ,BPR_DFI_ID_NO_QLFR3
     ,BPR_DFI_ID_NO3
     ,BPR_ACCOT_NO_QLFR3
     ,BPR_ACCT_NO3
     ,'FE2'             AS BPR_INCL_RSN_CD
     ,'   '             AS BPR_EXCL_RSN_CD
FROM  &BPR.EVAL&BPR_TBL.EVAL
INNER JOIN
      &PLB.EVAL&PLB_TBL.EVAL
ON    PLB_ISA_FILE_ID    = BPR_ISA_FILE_ID
  AND PLB_GS_GRP_SEQ_NO  = BPR_GS_GRP_SEQ_NO
  AND PLB_ST_SEQ_NO      = BPR_ST_SEQ_NO
  AND RTRIM(PLB_ADJ_ID2) IS NULL
  AND PLB_PRVDR_ADJ_AMT1 > 0
  AND SUBSTR(PLB_ADJ_ID1,1,2) = 'L6'
WHERE BPR_EXCL_RSN_CD    = 'FE2'
GROUP BY
      BPR_ISA_FILE_ID
     ,BPR_GS_GRP_SEQ_NO
     ,BPR_ST_SEQ_NO
     ,BPR_EPP_GEN_SEQ+1
     ,BPR_TXN_HANDL_CD
     ,TO_CHAR(TO_NUMBER(RTRIM(BPR_CHK_AMT)))
     ,BPR_CRDT_DBT_FLG_CD
     ,BPR_PMT_METHOD_CD
     ,BPR_PMT_FORMAT_CD
     ,BPR_DFI_ID_NO_QLFR1
     ,BPR_DFI_ID_NO1
     ,BPR_ACCT_NO_QLFR1
     ,BPR_ACCT_NO1
     ,BPR_ORIG_CO_ID
     ,BPR_ORIG_CO_SUP_CD
     ,BPR_DFI_ID_NO_QLFR2
     ,BPR_DFI_ID_NO2
     ,BPR_ACCT_NO_QLFR2
     ,BPR_ACCOUNT_NO2
     ,BPR_CHK_DT
     ,BPR_BUS_FUNC_CD
     ,BPR_DFI_ID_NO_QLFR3
     ,BPR_DFI_ID_NO3
     ,BPR_ACCOT_NO_QLFR3
     ,BPR_ACCT_NO3
ORDER BY 1,2,3,4,5
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-STEP004
-SET  &STEP    = '&FOCFEXNAME.EVAL'||'.'||'STEP004';
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL -
-*-----------------------------------------------------------------------------
SQL
MERGE INTO &PLB.EVAL&PLB_TBL.EVAL UT
USING (
SELECT
      PLB_ISA_FILE_ID
     ,PLB_GS_GRP_SEQ_NO
     ,PLB_ST_SEQ_NO
     ,PLB_SEQ_NO
     ,0-PLB_PRVDR_ADJ_AMT1 AS PLB_PRVDR_ADJ_AMT1
FROM  &BPR.EVAL&BPR_TBL.EVAL
INNER JOIN
      &PLB.EVAL&PLB_TBL.EVAL
ON    PLB_ISA_FILE_ID      = BPR_ISA_FILE_ID
  AND PLB_GS_GRP_SEQ_NO    = BPR_GS_GRP_SEQ_NO
  AND PLB_ST_SEQ_NO        = BPR_ST_SEQ_NO
  AND SUBSTR(PLB_ADJ_ID1,1,2) = 'L6'
WHERE BPR_INCL_RSN_CD      = 'FE2'
  AND BPR_EXCL_RSN_CD      = '   '
ORDER BY 1,2,3,4
) ST
ON  ( UT.PLB_ISA_FILE_ID   = ST.PLB_ISA_FILE_ID
  AND UT.PLB_GS_GRP_SEQ_NO = ST.PLB_GS_GRP_SEQ_NO
  AND UT.PLB_ST_SEQ_NO     = ST.PLB_ST_SEQ_NO
  AND UT.PLB_SEQ_NO        = ST.PLB_SEQ_NO )
WHEN MATCHED THEN
UPDATE SET
     UT.PLB_PRVDR_ADJ_AMT1 = ST.PLB_PRVDR_ADJ_AMT1
;
TABLEF FILE SQLOUT
LIST *
END
-RUN
-*-----------------------------------------------------------------------------
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL &STEP.EVAL COMPLETE RETCODE &RETCODE.EVAL
-TYPE -------------------------------------------------------------------------
-IF   &FOCERRNUM.EVAL NE 0 THEN GOTO ERRORS;
-*-----------------------------------------------------------------------------
-GOTO THE_END;
-TYPE -------------------------------------------------------------------------
-ERRORS
-SET &ERRFEXNAME = '&FOCFEXNAME.EVAL';
-SET &ERRSTEP    = '&STEP.EVAL';
-SET &ERRRETCODE = &RETCODE.EVAL;
-SET &ERRLINES   = &LINES.EVAL;
-SET &ERRFOCERR  = &FOCERRNUM.EVAL;
-SET &ERROR_IND  = 'ERROR';
-RUN
-INCLUDE GBL_ERRORS
-******************************************************************************
-THE_END
-******************************************************************************
-SET  &NOWTIME = HHMMSS(A8);
-TYPE &NOWTIME.EVAL FINISH &FOCFEXNAME.EVAL
-TYPE *************************************************************************
-RUN
 
